{"cells":[{"cell_type":"markdown","metadata":{"id":"Fc9iXh1hiMAA"},"source":["# Introduction to Regression with Neural Networks in TensorFlow\n","\n","There are many definitions for a regression problem but in our case, we're going to simplify it: predicting a numerical variable based on some other combination of variables, even shorter... predicting a number.\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3447,"status":"ok","timestamp":1663809100210,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"ESNWHF2Fj3XN","outputId":"805e33a6-ee28-488e-ea08-2bd56e3ae2f2"},"outputs":[{"output_type":"stream","name":"stdout","text":["2.8.2\n"]}],"source":["# Import TensorFlow\n","import tensorflow as tf\n","print(tf.__version__)\n","\n"]},{"cell_type":"markdown","metadata":{"id":"bDbHj-TzkPUY"},"source":["### Creating data to view and fit"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"elapsed":198,"status":"ok","timestamp":1663809100403,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"v2YMxQ6VksvU","outputId":"994ff41c-bf35-4407-f61d-93390e562d9f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXYAAAD8CAYAAABjAo9vAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAOP0lEQVR4nO3df2jc933H8ddrigZHGlCCVWNpMR4lHIRBrU6EQctIadfL8o+Vf8LyR/FYwPmjgY6Vg6j/NDAGYdcf/2wUHBriQZtRqKKEUXrNTJkpjDG5MpXT7EgpNsvJsR26oxl8YYr63h/6npFcS/dDd/refe75AKG7z33le/NFeeb8/X7P54gQACAdv1f0AACAwSLsAJAYwg4AiSHsAJAYwg4AiSHsAJCYjmG3/bDtn9j+he23bX85X3/RdtP2lfzryeGPCwDoxJ2uY7d9QtKJiPiZ7QckXZa0JOlpSf8bEV8f/pgAgG7d12mDiLgh6UZ++0Pb70iaH/ZgAID+dHzFvmdj+5SkS5L+SNLfSPpLSb+RtCbpKxHxPwf9/LFjx+LUqVP9TQoAE+ry5csfRMRst9t3HXbbH5P0b5L+LiJWbB+X9IGkkPS32jlc81f3+Llzks5J0smTJ//4+vXr3c4GAJBk+3JELHa7fVdXxdielvQDSd+NiBVJioibEbEdEb+V9LKkx+71sxFxPiIWI2Jxdrbr/+EAAPrUzVUxlvQdSe9ExDd3rZ/YtdlTkq4OfjwAQK86njyV9GlJX5S0YftKvvZVSc/YPq2dQzHXJD03lAkBAD3p5qqYn0ryPR764eDHAQAcFu88BYDEdHMoBgDQp9X1pmr1hjZbmeZmSqpWylpaGO5bgQg7AAzJ6npTyysbyra2JUnNVqbllQ1JGmrcORQDAENSqzfuRL0t29pWrd4Y6vMSdgAYks1W1tP6oBB2ABiSuZlST+uDQtgBYEiqlbJK01N71krTU6pWykN9Xk6eAsCQtE+QclUMACRkaWF+6CG/G4diACAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEsOHWQMYK6vrTdXqDW22Ms3NlFStlI/8w6JHHWEHMDZW15taXtlQtrUtSWq2Mi2vbEgScd+FQzEAxkat3rgT9bZsa1u1eqOgiUYTYQcwNjZbWU/rk4qwAxgbczOlntYnFWEHMDaqlbJK01N71krTU6pWygVNNJo4eQpgbLRPkHJVzMEIO4CxsrQwT8g74FAMACSmY9htP2z7J7Z/Yftt21/O1x+y/Zbtd/PvDw5/XABAJ928Yv9I0lci4lFJfyLpS7YflfSCpIsR8Yiki/l9AEDBOoY9Im5ExM/y2x9KekfSvKQzki7km12QtDSsIQEA3evpGLvtU5IWJP2HpOMRcSN/6H1Jxwc6GQCgL12H3fbHJP1A0l9HxG92PxYRISn2+blzttdsr92+fftQwwIAOusq7LantRP170bESr580/aJ/PETkm7d62cj4nxELEbE4uzs7CBmBgAcoJurYizpO5LeiYhv7nroTUln89tnJb0x+PEAAL3q5g1Kn5b0RUkbtq/ka1+V9JKk79t+VtJ1SU8PZ0QAQC86hj0ifirJ+zz8ucGOAwA4LN55CgCJIewAkBjCDgCJIewAkBjCDgCJIewAkBjCDgCJIewAkBjCDgCJIewAkBjCDgCJ6eYfAQOQuNX1pmr1hjZbmeZmSqpWylpamC96LPSJsAMTbnW9qeWVDWVb25KkZivT8sqGJBH3McWhGGDC1eqNO1Fvy7a2Vas3CpoIh0XYgQm32cp6WsfoI+zAhJubKfW0jtFH2IEJV62UVZqe2rNWmp5StVIuaCIcFidPgQnXPkHKVTHpIOwAtLQwT8gTwqEYAEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEhMx7DbfsX2LdtXd629aLtp+0r+9eRwxwQAdKubD7N+VdI/SPqnu9a/FRFfH/hEQAJW15uq1RvabGWamympWinzYdE4Mh3DHhGXbJ8a/ihAGlbXm1pe2VC2tS1JarYyLa9sSBJxx5E4zDH2523/PD9U8+DAJgLGXK3euBP1tmxrW7V6o6CJMGn6Dfu3JX1C0mlJNyR9Y78NbZ+zvWZ77fbt230+HTA+NltZT+vAoPUV9oi4GRHbEfFbSS9LeuyAbc9HxGJELM7OzvY7JzA25mZKPa0Dg9ZX2G2f2HX3KUlX99sWmDTVSlml6ak9a6XpKVUr5YImwqTpePLU9muSHpd0zPZ7kr4m6XHbpyWFpGuSnhvijMBYaZ8g5aoYFMURcWRPtri4GGtra0f2fACQAtuXI2Kx2+155ykAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0BiCDsAJIawA0Bi7it6AKBbq+tN1eoNbbYyzc2UVK2UtbQwX/RYwMgh7BgLq+tNLa9sKNvaliQ1W5mWVzYkibgDd+FQDMZCrd64E/W2bGtbtXqjoImA0UXYMRY2W1lP68AkI+wYC3MzpZ7WgUlG2DEWqpWyStNTe9ZK01OqVsoFTQSMLk6eYiy0T5ByVQzQGWHH2FhamCfkQBc4FAMAiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJCYjmG3/YrtW7av7lp7yPZbtt/Nvz843DEBAN3q5hX7q5KeuGvtBUkXI+IRSRfz+wCAEdAx7BFxSdKv71o+I+lCfvuCpKUBzwUA6FO/x9iPR8SN/Pb7ko4PaB4AwCEd+uRpRISk2O9x2+dsr9leu3379mGfDgDQQb9hv2n7hCTl32/tt2FEnI+IxYhYnJ2d7fPpAADd6jfsb0o6m98+K+mNwYwDADisbi53fE3Sv0sq237P9rOSXpL0Z7bflfT5/D4AYAR0/Gi8iHhmn4c+N+BZAAADwDtPASAxfJj1BFtdb6pWb2izlWlupqRqpcyHRQMJIOwTanW9qeWVDWVb25KkZivT8sqGJBF3YMxxKGZC1eqNO1Fvy7a2Vas3CpoIwKAQ9gm12cp6WgcwPgj7hJqbKfW0DmB8EPYJVa2UVZqe2rNWmp5StVIuaCIAg8LJ0wnVPkHKVTFAegj7BFtamCfkQII4FAMAiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4AiSHsAJAYwg4Aibmv6AFSs7reVK3e0GYr09xMSdVKWUsL80WPBWCCEPYBWl1vanllQ9nWtiSp2cq0vLIhScQdwJHhUMwA1eqNO1Fvy7a2Vas3CpoIwCQi7AO02cp6WgeAYSDsAzQ3U+ppHQCGgbAPULVSVml6as9aaXpK1Uq5oIkATCJOng5Q+wQpV8UAKBJhH7ClhXlCDqBQhwq77WuSPpS0LemjiFgcxFAAgP4N4hX7ZyPigwH8OQCAAeDkKQAk5rBhD0k/tn3Z9rlBDAQAOJzDHor5TEQ0bX9c0lu2/ysiLu3eIA/+OUk6efLkIZ8OANDJoV6xR0Qz/35L0uuSHrvHNucjYjEiFmdnZw/zdACALvQddtv3236gfVvSFyRdHdRgAID+HOZQzHFJr9tu/znfi4gfDWQqAEDf+g57RPxK0icHOAsAYAC43BEAEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEkPYASAxhB0AEjPyH2a9ut5Urd7QZivT3ExJ1UqZD4sGgAOMdNhX15taXtlQtrUtSWq2Mi2vbEgScQeAfYz0oZhavXEn6m3Z1rZq9UZBEwHA6BvpsG+2sp7WAQAjHva5mVJP6wCAEQ97tVJWaXpqz1ppekrVSrmgiQBg9I30ydP2CVKuigGA7o102KWduBNyAOjeSB+KAQD0jrADQGIIOwAkhrADQGIIOwAkxhFxdE9m35Z0/cie8PCOSfqg6CFGHPvoYOyfzthHBzsm6f6ImO32B4407OPG9lpELBY9xyhjHx2M/dMZ++hg/ewfDsUAQGIIOwAkhrAf7HzRA4wB9tHB2D+dsY8O1vP+4Rg7ACSGV+wAkBjC3oHtF203bV/Jv54seqZRYPsJ2w3bv7T9QtHzjCLb12xv5L83a0XPUzTbr9i+ZfvqrrWHbL9l+938+4NFzli0ffZRzw0i7N35VkSczr9+WPQwRbM9JekfJf25pEclPWP70WKnGlmfzX9vuJxPelXSE3etvSDpYkQ8Iulifn+Svarf3UdSjw0i7OjHY5J+GRG/ioj/k/TPks4UPBNGXERckvTru5bPSLqQ374gaelIhxox++yjnhH27jxv++f5X5Mm+q+KuXlJ/73r/nv5GvYKST+2fdn2uaKHGVHHI+JGfvt9SceLHGaE9dQgwi7J9r/avnqPrzOSvi3pE5JOS7oh6RuFDotx8pmI+JR2Dll9yfafFj3QKIudS/S4TO939dygkf8EpaMQEZ/vZjvbL0v6lyGPMw6akh7edf8P8jXsEhHN/Pst269r5xDWpWKnGjk3bZ+IiBu2T0i6VfRAoyYibrZvd9sgXrF3kP+ytT0l6ep+206Q/5T0iO0/tP37kv5C0psFzzRSbN9v+4H2bUlfEL879/KmpLP57bOS3ihwlpHUT4N4xd7Z39s+rZ2/Il6T9Fyx4xQvIj6y/bykuqQpSa9ExNsFjzVqjkt63ba089/Z9yLiR8WOVCzbr0l6XNIx2+9J+pqklyR93/az2vmXX58ubsLi7bOPHu+1QbzzFAASw6EYAEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxBB2AEgMYQeAxPw/YhrWmPXy7VoAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Create features\n","X = np.array([-7.0, -4.0, -1.0, 2.0, 5.0, 8.0, 11.0, 14.0])\n","\n","# Create labels\n","y = np.array([3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0])\n","\n","# Visualize it\n","plt.scatter(X, y);"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1663809100404,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"L0jnf2tDlB07","outputId":"0781f036-30f0-4e67-86e5-34e318c913cc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 3.,  6.,  9., 12., 15., 18., 21., 24.])"]},"metadata":{},"execution_count":4}],"source":["X + 10"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1663809100405,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"6Y5FjX42lJ0i","outputId":"70daa756-346b-41ee-c96d-091a4f8ef2a1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True,  True,  True,  True,  True,  True,  True,  True])"]},"metadata":{},"execution_count":5}],"source":["y == X + 10"]},{"cell_type":"markdown","metadata":{"id":"DuIic1Z9lSyl"},"source":["### Input and output shapes"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":203,"status":"ok","timestamp":1663809100775,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"xfWdrNy2lVCc","outputId":"4c0ccf70-1e21-4470-cf48-84b8ab92614f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(3,), dtype=string, numpy=array([b'bedroom', b'bathroom', b'garage'], dtype=object)>,\n"," <tf.Tensor: shape=(1,), dtype=int32, numpy=array([939700], dtype=int32)>)"]},"metadata":{},"execution_count":6}],"source":["# Create a demo tensor for our housing price prediction problem\n","house_info = tf.constant([\"bedroom\", \"bathroom\", \"garage\"])\n","house_price = tf.constant([939700])\n","house_info, house_price"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1663809100776,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"-uhMYB3yl03q","outputId":"d9e14450-c7f6-4feb-89b0-472fbb2c65ac"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((8,), (8,))"]},"metadata":{},"execution_count":7}],"source":["inpuut_shape = X.shape\n","output_shape = y.shape\n","inpuut_shape, output_shape"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1663809100776,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"2guj5KNyl9o8","outputId":"efb9f482-1d18-4aa9-b21f-e43ab2f735ac"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-7.0, 3.0)"]},"metadata":{},"execution_count":8}],"source":["X[0], y[0]"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1663809100777,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"LDm11X9nmDhB","outputId":"2d52a947-4013-4dd5-9b74-51e1696c5f81"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-4.0, 6.0)"]},"metadata":{},"execution_count":9}],"source":["X[1], y[1]"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1663809100777,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"4lGBBzsAlu-B","outputId":"63089ee6-2f00-4f19-b8ac-bce7e6694d8a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":10}],"source":["X[0].ndim"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1663809100778,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"hm1sS-jWmZcY","outputId":"4b280ed3-979d-4870-a296-ea36048d7732"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-7.0, 3.0)"]},"metadata":{},"execution_count":11}],"source":["X[0], y[0]"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":193,"status":"ok","timestamp":1663809100962,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"34kGS1AVmbLl","outputId":"ac44d7d6-25e9-4c71-e2e2-0cf773c2d2b9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float32, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.], dtype=float32)>,\n"," <tf.Tensor: shape=(8,), dtype=float32, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.], dtype=float32)>)"]},"metadata":{},"execution_count":12}],"source":["# Turn our NumPy arrays into tensors\n","X = tf.cast(tf.constant(X), dtype=tf.float32)\n","y = tf.cast(tf.constant(y), dtype=tf.float32)\n","X, y"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1663809100962,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"mbQzDm7TxeEd","outputId":"f8b4f9cc-2288-4d00-ea2e-fa3ab32455d2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(TensorShape([]), TensorShape([]))"]},"metadata":{},"execution_count":13}],"source":["input_shape = X[0].shape\n","output_shape = y[0].shape\n","input_shape, output_shape"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"elapsed":191,"status":"ok","timestamp":1663809101150,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"_e0F9ssfxqMk","outputId":"ee935d1a-df90-451a-be51-8495fcde4aaa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fcc839068d0>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(X, y)"]},{"cell_type":"markdown","metadata":{"id":"cMBUuBWIxw1X"},"source":["### Steps in modeling with TensorFlow\n","\n","1. **Creating a model** - define the input and output layers, as well as the hidden layers of a deep learning model.\n","2. **Compiling a model** - define the loss function (in other words, the function which tells our model how wrong it is) and the optimizer (tells our model how to improve the patterns its learning) and evaluation metrics (what we can use to interpret the performance of our model).\n","3. **Fitting a model** - letting the model try to find patterns between X and y (featurs and lables)."]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1663809101151,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"ll974HTK1DNL"},"outputs":[],"source":["# # Optionally, the first layer can receive an `input_shape` argument:\n","# model = tf.keras.Sequential()\n","# model.add(tf.keras.layers.Dense(8, input_shape=(16,)))\n","\n","# # Afterwards, we do automatic shape inference:\n","# model.add(tf.keras.layers.Dense(4))\n","\n","\n","# model = tf.keras.Sequential()\n","# model.add(\n","#     tf.keras.layers.Dense(1) # can use .add to add layers OR input as list directly\n","# )"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1226,"status":"ok","timestamp":1663809102373,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"oNIMuX0Gxvg6","outputId":"4a2e389e-57ba-4bec-8f82-485d470a93a1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","1/1 [==============================] - 1s 641ms/step - loss: 11.5048 - mae: 11.5048\n","Epoch 2/5\n","1/1 [==============================] - 0s 11ms/step - loss: 11.3723 - mae: 11.3723\n","Epoch 3/5\n","1/1 [==============================] - 0s 15ms/step - loss: 11.2398 - mae: 11.2398\n","Epoch 4/5\n","1/1 [==============================] - 0s 7ms/step - loss: 11.1073 - mae: 11.1073\n","Epoch 5/5\n","1/1 [==============================] - 0s 9ms/step - loss: 10.9748 - mae: 10.9748\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7f5ad090>"]},"metadata":{},"execution_count":16}],"source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model using the Sequential API\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(1)                             \n","])\n","\n","# 2. Compile the model\n","model.compile(\n","  loss=tf.keras.losses.mae, # mae is short for mean absolute error \n","  optimizer = tf.keras.optimizers.SGD(), # SGD is short for stochastic gradient descent.\n","  metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model\n","model.fit(tf.expand_dims(X, axis=-1), y, epochs=5)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1663809102373,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"zL9SVP1c3Nzk","outputId":"704561ed-4ae9-4bef-96e8-d8f39eb61270"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float32, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.], dtype=float32)>,\n"," <tf.Tensor: shape=(8,), dtype=float32, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.], dtype=float32)>)"]},"metadata":{},"execution_count":17}],"source":["# Check out X and y\n","X, y"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":288,"status":"ok","timestamp":1663809102654,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"wRfryouI4f5i","outputId":"dc6ed7c6-885d-49a7-9c93-7b846eea1a99"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12.716021]], dtype=float32)"]},"metadata":{},"execution_count":18}],"source":["# Try and make a prediction using our model\n","y_pred = model.predict([17.0])\n","y_pred"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1663809102654,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"90WOOnWE4ySc","outputId":"30ba9509-5245-442b-e3d2-afd6f0e4c790"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[23.71602]], dtype=float32)"]},"metadata":{},"execution_count":19}],"source":["y_pred + 11"]},{"cell_type":"markdown","metadata":{"id":"Ij1mI5w_46Px"},"source":["### Improving our model\n","\n","We can improve our model, by altering the steps we took to create a model.\n","\n","1. **Creating a model** - here we might add more layers, increase the number of hidden units (all called neurons) within each of the hidden layers, change the activation function of each layer.\n","2. **Compiling a model** - here we might change the optimization function or perhaps the **learning rate** of the optimization function.\n","3. **Fitting a model** - here we might fit a model for more **epochs** (leave it training for longer) or on more data (give the model more examples to learn from)."]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2374,"status":"ok","timestamp":1663809105025,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"iGJxxqGA49wq","outputId":"d4be83ab-b1e6-441a-f777-a93422d35108"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1/1 [==============================] - 0s 384ms/step - loss: 11.2219 - mae: 11.2219\n","Epoch 2/100\n","1/1 [==============================] - 0s 8ms/step - loss: 11.0894 - mae: 11.0894\n","Epoch 3/100\n","1/1 [==============================] - 0s 10ms/step - loss: 10.9569 - mae: 10.9569\n","Epoch 4/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.8244 - mae: 10.8244\n","Epoch 5/100\n","1/1 [==============================] - 0s 8ms/step - loss: 10.6919 - mae: 10.6919\n","Epoch 6/100\n","1/1 [==============================] - 0s 8ms/step - loss: 10.5594 - mae: 10.5594\n","Epoch 7/100\n","1/1 [==============================] - 0s 7ms/step - loss: 10.4269 - mae: 10.4269\n","Epoch 8/100\n","1/1 [==============================] - 0s 8ms/step - loss: 10.2944 - mae: 10.2944\n","Epoch 9/100\n","1/1 [==============================] - 0s 8ms/step - loss: 10.1619 - mae: 10.1619\n","Epoch 10/100\n","1/1 [==============================] - 0s 11ms/step - loss: 10.0294 - mae: 10.0294\n","Epoch 11/100\n","1/1 [==============================] - 0s 8ms/step - loss: 9.8969 - mae: 9.8969\n","Epoch 12/100\n","1/1 [==============================] - 0s 8ms/step - loss: 9.7644 - mae: 9.7644\n","Epoch 13/100\n","1/1 [==============================] - 0s 12ms/step - loss: 9.6319 - mae: 9.6319\n","Epoch 14/100\n","1/1 [==============================] - 0s 11ms/step - loss: 9.4994 - mae: 9.4994\n","Epoch 15/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.3669 - mae: 9.3669\n","Epoch 16/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.2344 - mae: 9.2344\n","Epoch 17/100\n","1/1 [==============================] - 0s 9ms/step - loss: 9.1019 - mae: 9.1019\n","Epoch 18/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.9694 - mae: 8.9694\n","Epoch 19/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.8369 - mae: 8.8369\n","Epoch 20/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.7044 - mae: 8.7044\n","Epoch 21/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.5719 - mae: 8.5719\n","Epoch 22/100\n","1/1 [==============================] - 0s 8ms/step - loss: 8.4394 - mae: 8.4394\n","Epoch 23/100\n","1/1 [==============================] - 0s 8ms/step - loss: 8.3069 - mae: 8.3069\n","Epoch 24/100\n","1/1 [==============================] - 0s 10ms/step - loss: 8.1744 - mae: 8.1744\n","Epoch 25/100\n","1/1 [==============================] - 0s 12ms/step - loss: 8.0419 - mae: 8.0419\n","Epoch 26/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.9094 - mae: 7.9094\n","Epoch 27/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.7769 - mae: 7.7769\n","Epoch 28/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.6444 - mae: 7.6444\n","Epoch 29/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.5119 - mae: 7.5119\n","Epoch 30/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.3794 - mae: 7.3794\n","Epoch 31/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.2750 - mae: 7.2750\n","Epoch 32/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2694 - mae: 7.2694\n","Epoch 33/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.2638 - mae: 7.2638\n","Epoch 34/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.2581 - mae: 7.2581\n","Epoch 35/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.2525 - mae: 7.2525\n","Epoch 36/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.2469 - mae: 7.2469\n","Epoch 37/100\n","1/1 [==============================] - 0s 7ms/step - loss: 7.2412 - mae: 7.2412\n","Epoch 38/100\n","1/1 [==============================] - 0s 7ms/step - loss: 7.2356 - mae: 7.2356\n","Epoch 39/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.2300 - mae: 7.2300\n","Epoch 40/100\n","1/1 [==============================] - 0s 7ms/step - loss: 7.2244 - mae: 7.2244\n","Epoch 41/100\n","1/1 [==============================] - 0s 18ms/step - loss: 7.2188 - mae: 7.2188\n","Epoch 42/100\n","1/1 [==============================] - 0s 7ms/step - loss: 7.2131 - mae: 7.2131\n","Epoch 43/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.2075 - mae: 7.2075\n","Epoch 44/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.2019 - mae: 7.2019\n","Epoch 45/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1962 - mae: 7.1962\n","Epoch 46/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.1906 - mae: 7.1906\n","Epoch 47/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1850 - mae: 7.1850\n","Epoch 48/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.1794 - mae: 7.1794\n","Epoch 49/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.1737 - mae: 7.1737\n","Epoch 50/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1681 - mae: 7.1681\n","Epoch 51/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1625 - mae: 7.1625\n","Epoch 52/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1569 - mae: 7.1569\n","Epoch 53/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1512 - mae: 7.1512\n","Epoch 54/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.1456 - mae: 7.1456\n","Epoch 55/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1400 - mae: 7.1400\n","Epoch 56/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1344 - mae: 7.1344\n","Epoch 57/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1287 - mae: 7.1287\n","Epoch 58/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1231 - mae: 7.1231\n","Epoch 59/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1175 - mae: 7.1175\n","Epoch 60/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1119 - mae: 7.1119\n","Epoch 61/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1062 - mae: 7.1062\n","Epoch 62/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.1006 - mae: 7.1006\n","Epoch 63/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0950 - mae: 7.0950\n","Epoch 64/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0894 - mae: 7.0894\n","Epoch 65/100\n","1/1 [==============================] - 0s 11ms/step - loss: 7.0838 - mae: 7.0838\n","Epoch 66/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0781 - mae: 7.0781\n","Epoch 67/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0725 - mae: 7.0725\n","Epoch 68/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0669 - mae: 7.0669\n","Epoch 69/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0613 - mae: 7.0613\n","Epoch 70/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0556 - mae: 7.0556\n","Epoch 71/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0500 - mae: 7.0500\n","Epoch 72/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0444 - mae: 7.0444\n","Epoch 73/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0388 - mae: 7.0388\n","Epoch 74/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0331 - mae: 7.0331\n","Epoch 75/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0275 - mae: 7.0275\n","Epoch 76/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0219 - mae: 7.0219\n","Epoch 77/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0163 - mae: 7.0163\n","Epoch 78/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0106 - mae: 7.0106\n","Epoch 79/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.0050 - mae: 7.0050\n","Epoch 80/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9994 - mae: 6.9994\n","Epoch 81/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9938 - mae: 6.9938\n","Epoch 82/100\n","1/1 [==============================] - 0s 11ms/step - loss: 6.9881 - mae: 6.9881\n","Epoch 83/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9825 - mae: 6.9825\n","Epoch 84/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9769 - mae: 6.9769\n","Epoch 85/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9713 - mae: 6.9713\n","Epoch 86/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9656 - mae: 6.9656\n","Epoch 87/100\n","1/1 [==============================] - 0s 7ms/step - loss: 6.9600 - mae: 6.9600\n","Epoch 88/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9544 - mae: 6.9544\n","Epoch 89/100\n","1/1 [==============================] - 0s 13ms/step - loss: 6.9488 - mae: 6.9488\n","Epoch 90/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.9431 - mae: 6.9431\n","Epoch 91/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9375 - mae: 6.9375\n","Epoch 92/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.9319 - mae: 6.9319\n","Epoch 93/100\n","1/1 [==============================] - 0s 13ms/step - loss: 6.9263 - mae: 6.9263\n","Epoch 94/100\n","1/1 [==============================] - 0s 11ms/step - loss: 6.9206 - mae: 6.9206\n","Epoch 95/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.9150 - mae: 6.9150\n","Epoch 96/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.9094 - mae: 6.9094\n","Epoch 97/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.9038 - mae: 6.9038\n","Epoch 98/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.8981 - mae: 6.8981\n","Epoch 99/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.8925 - mae: 6.8925\n","Epoch 100/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.8869 - mae: 6.8869\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7dbb2b50>"]},"metadata":{},"execution_count":20}],"source":["# Let's a rebuild our model\n","\n","# 1. Create the model\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(1)                             \n","])\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model (this time we'll train for longer)\n","model.fit(tf.expand_dims(X, axis=-1), y, epochs=100)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1663809105025,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"6Fp-kNzG8YHp","outputId":"0108b9ea-1adc-4876-a47d-722a86e220f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float32, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.], dtype=float32)>,\n"," <tf.Tensor: shape=(8,), dtype=float32, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.], dtype=float32)>)"]},"metadata":{},"execution_count":21}],"source":["# Remind ourselves of the data\n","X, y"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1663809105026,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"u6OEBPws81mj","outputId":"315a8d37-90ca-4cf9-d691-4fe601dd087a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[29.739855]], dtype=float32)"]},"metadata":{},"execution_count":22}],"source":["# Let's see if our model's prediction has improved...\n","model.predict([17.0])"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":12,"status":"ok","timestamp":1663809105026,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"Yq8SniLk9cTw"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":87,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2631,"status":"ok","timestamp":1663809146222,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"PP_CX6oY875s","outputId":"0c6be7bd-2955-44e5-b616-536d0a827da7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(Adam, self).__init__(name, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 1s 9ms/step - loss: 50.3289 - mae: 50.3289\n","Epoch 2/100\n","2/2 [==============================] - 0s 8ms/step - loss: 49.7163 - mae: 49.7163\n","Epoch 3/100\n","2/2 [==============================] - 0s 9ms/step - loss: 49.1998 - mae: 49.1998\n","Epoch 4/100\n","2/2 [==============================] - 0s 6ms/step - loss: 48.6371 - mae: 48.6371\n","Epoch 5/100\n","2/2 [==============================] - 0s 9ms/step - loss: 48.0823 - mae: 48.0823\n","Epoch 6/100\n","2/2 [==============================] - 0s 9ms/step - loss: 47.5627 - mae: 47.5627\n","Epoch 7/100\n","2/2 [==============================] - 0s 7ms/step - loss: 47.0317 - mae: 47.0317\n","Epoch 8/100\n","2/2 [==============================] - 0s 7ms/step - loss: 46.5503 - mae: 46.5503\n","Epoch 9/100\n","2/2 [==============================] - 0s 7ms/step - loss: 46.0984 - mae: 46.0985\n","Epoch 10/100\n","2/2 [==============================] - 0s 8ms/step - loss: 45.6056 - mae: 45.6056\n","Epoch 11/100\n","2/2 [==============================] - 0s 7ms/step - loss: 45.1367 - mae: 45.1367\n","Epoch 12/100\n","2/2 [==============================] - 0s 8ms/step - loss: 44.6645 - mae: 44.6645\n","Epoch 13/100\n","2/2 [==============================] - 0s 13ms/step - loss: 44.1831 - mae: 44.1831\n","Epoch 14/100\n","2/2 [==============================] - 0s 9ms/step - loss: 43.7184 - mae: 43.7184\n","Epoch 15/100\n","2/2 [==============================] - 0s 16ms/step - loss: 43.2351 - mae: 43.2351\n","Epoch 16/100\n","2/2 [==============================] - 0s 13ms/step - loss: 42.7779 - mae: 42.7779\n","Epoch 17/100\n","2/2 [==============================] - 0s 12ms/step - loss: 42.2840 - mae: 42.2840\n","Epoch 18/100\n","2/2 [==============================] - 0s 7ms/step - loss: 41.8236 - mae: 41.8236\n","Epoch 19/100\n","2/2 [==============================] - 0s 7ms/step - loss: 41.3461 - mae: 41.3461\n","Epoch 20/100\n","2/2 [==============================] - 0s 17ms/step - loss: 40.8369 - mae: 40.8369\n","Epoch 21/100\n","2/2 [==============================] - 0s 8ms/step - loss: 40.4008 - mae: 40.4008\n","Epoch 22/100\n","2/2 [==============================] - 0s 9ms/step - loss: 39.9139 - mae: 39.9139\n","Epoch 23/100\n","2/2 [==============================] - 0s 8ms/step - loss: 39.4567 - mae: 39.4567\n","Epoch 24/100\n","2/2 [==============================] - 0s 11ms/step - loss: 38.9448 - mae: 38.9448\n","Epoch 25/100\n","2/2 [==============================] - 0s 8ms/step - loss: 38.4597 - mae: 38.4597\n","Epoch 26/100\n","2/2 [==============================] - 0s 9ms/step - loss: 37.9642 - mae: 37.9642\n","Epoch 27/100\n","2/2 [==============================] - 0s 8ms/step - loss: 37.5053 - mae: 37.5053\n","Epoch 28/100\n","2/2 [==============================] - 0s 9ms/step - loss: 37.0075 - mae: 37.0075\n","Epoch 29/100\n","2/2 [==============================] - 0s 13ms/step - loss: 36.5381 - mae: 36.5381\n","Epoch 30/100\n","2/2 [==============================] - 0s 10ms/step - loss: 36.0500 - mae: 36.0500\n","Epoch 31/100\n","2/2 [==============================] - 0s 11ms/step - loss: 35.5756 - mae: 35.5756\n","Epoch 32/100\n","2/2 [==============================] - 0s 10ms/step - loss: 35.0503 - mae: 35.0503\n","Epoch 33/100\n","2/2 [==============================] - 0s 8ms/step - loss: 34.5257 - mae: 34.5257\n","Epoch 34/100\n","2/2 [==============================] - 0s 9ms/step - loss: 33.9958 - mae: 33.9958\n","Epoch 35/100\n","2/2 [==============================] - 0s 7ms/step - loss: 33.4607 - mae: 33.4607\n","Epoch 36/100\n","2/2 [==============================] - 0s 8ms/step - loss: 32.9202 - mae: 32.9202\n","Epoch 37/100\n","2/2 [==============================] - 0s 10ms/step - loss: 32.3878 - mae: 32.3878\n","Epoch 38/100\n","2/2 [==============================] - 0s 14ms/step - loss: 31.8251 - mae: 31.8251\n","Epoch 39/100\n","2/2 [==============================] - 0s 9ms/step - loss: 31.2483 - mae: 31.2483\n","Epoch 40/100\n","2/2 [==============================] - 0s 11ms/step - loss: 30.6613 - mae: 30.6613\n","Epoch 41/100\n","2/2 [==============================] - 0s 8ms/step - loss: 30.1200 - mae: 30.1200\n","Epoch 42/100\n","2/2 [==============================] - 0s 7ms/step - loss: 29.5246 - mae: 29.5246\n","Epoch 43/100\n","2/2 [==============================] - 0s 7ms/step - loss: 28.9453 - mae: 28.9453\n","Epoch 44/100\n","2/2 [==============================] - 0s 11ms/step - loss: 28.3357 - mae: 28.3357\n","Epoch 45/100\n","2/2 [==============================] - 0s 11ms/step - loss: 27.7291 - mae: 27.7291\n","Epoch 46/100\n","2/2 [==============================] - 0s 8ms/step - loss: 27.1126 - mae: 27.1126\n","Epoch 47/100\n","2/2 [==============================] - 0s 7ms/step - loss: 26.4859 - mae: 26.4859\n","Epoch 48/100\n","2/2 [==============================] - 0s 7ms/step - loss: 25.8175 - mae: 25.8175\n","Epoch 49/100\n","2/2 [==============================] - 0s 7ms/step - loss: 25.1526 - mae: 25.1526\n","Epoch 50/100\n","2/2 [==============================] - 0s 11ms/step - loss: 24.5274 - mae: 24.5274\n","Epoch 51/100\n","2/2 [==============================] - 0s 11ms/step - loss: 23.8201 - mae: 23.8201\n","Epoch 52/100\n","2/2 [==============================] - 0s 9ms/step - loss: 23.1858 - mae: 23.1858\n","Epoch 53/100\n","2/2 [==============================] - 0s 6ms/step - loss: 22.4633 - mae: 22.4633\n","Epoch 54/100\n","2/2 [==============================] - 0s 7ms/step - loss: 21.7956 - mae: 21.7956\n","Epoch 55/100\n","2/2 [==============================] - 0s 16ms/step - loss: 21.0768 - mae: 21.0768\n","Epoch 56/100\n","2/2 [==============================] - 0s 7ms/step - loss: 20.3581 - mae: 20.3581\n","Epoch 57/100\n","2/2 [==============================] - 0s 12ms/step - loss: 19.6442 - mae: 19.6442\n","Epoch 58/100\n","2/2 [==============================] - 0s 7ms/step - loss: 18.9110 - mae: 18.9110\n","Epoch 59/100\n","2/2 [==============================] - 0s 10ms/step - loss: 18.1786 - mae: 18.1786\n","Epoch 60/100\n","2/2 [==============================] - 0s 12ms/step - loss: 17.4133 - mae: 17.4133\n","Epoch 61/100\n","2/2 [==============================] - 0s 8ms/step - loss: 16.6749 - mae: 16.6749\n","Epoch 62/100\n","2/2 [==============================] - 0s 8ms/step - loss: 15.9130 - mae: 15.9130\n","Epoch 63/100\n","2/2 [==============================] - 0s 6ms/step - loss: 15.1509 - mae: 15.1509\n","Epoch 64/100\n","2/2 [==============================] - 0s 6ms/step - loss: 14.3491 - mae: 14.3491\n","Epoch 65/100\n","2/2 [==============================] - 0s 11ms/step - loss: 13.6401 - mae: 13.6401\n","Epoch 66/100\n","2/2 [==============================] - 0s 8ms/step - loss: 12.8472 - mae: 12.8472\n","Epoch 67/100\n","2/2 [==============================] - 0s 9ms/step - loss: 12.0840 - mae: 12.0840\n","Epoch 68/100\n","2/2 [==============================] - 0s 13ms/step - loss: 11.2778 - mae: 11.2778\n","Epoch 69/100\n","2/2 [==============================] - 0s 10ms/step - loss: 10.5765 - mae: 10.5765\n","Epoch 70/100\n","2/2 [==============================] - 0s 9ms/step - loss: 9.8966 - mae: 9.8966\n","Epoch 71/100\n","2/2 [==============================] - 0s 12ms/step - loss: 9.1229 - mae: 9.1229\n","Epoch 72/100\n","2/2 [==============================] - 0s 14ms/step - loss: 8.4187 - mae: 8.4187\n","Epoch 73/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.8005 - mae: 7.8005\n","Epoch 74/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.1341 - mae: 7.1341\n","Epoch 75/100\n","2/2 [==============================] - 0s 14ms/step - loss: 6.5763 - mae: 6.5763\n","Epoch 76/100\n","2/2 [==============================] - 0s 17ms/step - loss: 6.0484 - mae: 6.0484\n","Epoch 77/100\n","2/2 [==============================] - 0s 18ms/step - loss: 5.4184 - mae: 5.4184\n","Epoch 78/100\n","2/2 [==============================] - 0s 10ms/step - loss: 4.9031 - mae: 4.9031\n","Epoch 79/100\n","2/2 [==============================] - 0s 15ms/step - loss: 4.3857 - mae: 4.3857\n","Epoch 80/100\n","2/2 [==============================] - 0s 9ms/step - loss: 4.1602 - mae: 4.1602\n","Epoch 81/100\n","2/2 [==============================] - 0s 9ms/step - loss: 4.1795 - mae: 4.1795\n","Epoch 82/100\n","2/2 [==============================] - 0s 9ms/step - loss: 4.2254 - mae: 4.2254\n","Epoch 83/100\n","2/2 [==============================] - 0s 9ms/step - loss: 4.3108 - mae: 4.3108\n","Epoch 84/100\n","2/2 [==============================] - 0s 7ms/step - loss: 4.3854 - mae: 4.3854\n","Epoch 85/100\n","2/2 [==============================] - 0s 15ms/step - loss: 4.4379 - mae: 4.4379\n","Epoch 86/100\n","2/2 [==============================] - 0s 7ms/step - loss: 4.4415 - mae: 4.4415\n","Epoch 87/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.4085 - mae: 4.4085\n","Epoch 88/100\n","2/2 [==============================] - 0s 7ms/step - loss: 4.3520 - mae: 4.3520\n","Epoch 89/100\n","2/2 [==============================] - 0s 9ms/step - loss: 4.2780 - mae: 4.2780\n","Epoch 90/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.2085 - mae: 4.2085\n","Epoch 91/100\n","2/2 [==============================] - 0s 7ms/step - loss: 4.1606 - mae: 4.1606\n","Epoch 92/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.1094 - mae: 4.1094\n","Epoch 93/100\n","2/2 [==============================] - 0s 7ms/step - loss: 4.0884 - mae: 4.0884\n","Epoch 94/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.0790 - mae: 4.0790\n","Epoch 95/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.0940 - mae: 4.0940\n","Epoch 96/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.0958 - mae: 4.0958\n","Epoch 97/100\n","2/2 [==============================] - 0s 7ms/step - loss: 4.1052 - mae: 4.1052\n","Epoch 98/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.0996 - mae: 4.0996\n","Epoch 99/100\n","2/2 [==============================] - 0s 13ms/step - loss: 4.1065 - mae: 4.1065\n","Epoch 100/100\n","2/2 [==============================] - 0s 8ms/step - loss: 4.0963 - mae: 4.0963\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7e245790>"]},"metadata":{},"execution_count":87}],"source":["# Let's a rebuild our model once more\n","\n","# 1. Create the model\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(100, activation=\"relu\"),\n","  tf.keras.layers.Dense(100, activation=\"relu\"),\n","  tf.keras.layers.Dense(100, activation=\"relu\"),\n","  tf.keras.layers.Dense(1)                           \n","])\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.Adam(lr=0.0001),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model (this time we'll train for longer)\n","model.fit(tf.expand_dims(X, axis=-1), y, epochs=100)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3190,"status":"ok","timestamp":1663809108204,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"hBynSiyy8zzG","outputId":"f41a3837-7d00-485e-c1c9-dc2e9d816d24"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1/1 [==============================] - 1s 771ms/step - loss: 12.3193 - mae: 12.3193\n","Epoch 2/100\n","1/1 [==============================] - 0s 13ms/step - loss: 11.7804 - mae: 11.7804\n","Epoch 3/100\n","1/1 [==============================] - 0s 15ms/step - loss: 11.2324 - mae: 11.2324\n","Epoch 4/100\n","1/1 [==============================] - 0s 13ms/step - loss: 10.6601 - mae: 10.6601\n","Epoch 5/100\n","1/1 [==============================] - 0s 9ms/step - loss: 10.0632 - mae: 10.0632\n","Epoch 6/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.4503 - mae: 9.4503\n","Epoch 7/100\n","1/1 [==============================] - 0s 11ms/step - loss: 8.7991 - mae: 8.7991\n","Epoch 8/100\n","1/1 [==============================] - 0s 8ms/step - loss: 8.1072 - mae: 8.1072\n","Epoch 9/100\n","1/1 [==============================] - 0s 12ms/step - loss: 7.3691 - mae: 7.3691\n","Epoch 10/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.5758 - mae: 6.5758\n","Epoch 11/100\n","1/1 [==============================] - 0s 7ms/step - loss: 5.7205 - mae: 5.7205\n","Epoch 12/100\n","1/1 [==============================] - 0s 8ms/step - loss: 4.7947 - mae: 4.7947\n","Epoch 13/100\n","1/1 [==============================] - 0s 13ms/step - loss: 4.3581 - mae: 4.3581\n","Epoch 14/100\n","1/1 [==============================] - 0s 12ms/step - loss: 4.3134 - mae: 4.3134\n","Epoch 15/100\n","1/1 [==============================] - 0s 10ms/step - loss: 4.2550 - mae: 4.2550\n","Epoch 16/100\n","1/1 [==============================] - 0s 7ms/step - loss: 4.2442 - mae: 4.2442\n","Epoch 17/100\n","1/1 [==============================] - 0s 9ms/step - loss: 4.1520 - mae: 4.1520\n","Epoch 18/100\n","1/1 [==============================] - 0s 9ms/step - loss: 4.1739 - mae: 4.1739\n","Epoch 19/100\n","1/1 [==============================] - 0s 7ms/step - loss: 4.0681 - mae: 4.0681\n","Epoch 20/100\n","1/1 [==============================] - 0s 14ms/step - loss: 4.0807 - mae: 4.0807\n","Epoch 21/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.9954 - mae: 3.9954\n","Epoch 22/100\n","1/1 [==============================] - 0s 13ms/step - loss: 3.9739 - mae: 3.9739\n","Epoch 23/100\n","1/1 [==============================] - 0s 12ms/step - loss: 3.9208 - mae: 3.9208\n","Epoch 24/100\n","1/1 [==============================] - 0s 12ms/step - loss: 3.9047 - mae: 3.9047\n","Epoch 25/100\n","1/1 [==============================] - 0s 12ms/step - loss: 3.9267 - mae: 3.9267\n","Epoch 26/100\n","1/1 [==============================] - 0s 16ms/step - loss: 3.8797 - mae: 3.8797\n","Epoch 27/100\n","1/1 [==============================] - 0s 13ms/step - loss: 3.9341 - mae: 3.9341\n","Epoch 28/100\n","1/1 [==============================] - 0s 12ms/step - loss: 3.8678 - mae: 3.8678\n","Epoch 29/100\n","1/1 [==============================] - 0s 13ms/step - loss: 3.9274 - mae: 3.9274\n","Epoch 30/100\n","1/1 [==============================] - 0s 12ms/step - loss: 3.8751 - mae: 3.8751\n","Epoch 31/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.9080 - mae: 3.9080\n","Epoch 32/100\n","1/1 [==============================] - 0s 11ms/step - loss: 3.8893 - mae: 3.8893\n","Epoch 33/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8834 - mae: 3.8834\n","Epoch 34/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8969 - mae: 3.8969\n","Epoch 35/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8581 - mae: 3.8581\n","Epoch 36/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.9046 - mae: 3.9046\n","Epoch 37/100\n","1/1 [==============================] - 0s 11ms/step - loss: 3.8386 - mae: 3.8386\n","Epoch 38/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.9054 - mae: 3.9054\n","Epoch 39/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8482 - mae: 3.8482\n","Epoch 40/100\n","1/1 [==============================] - 0s 12ms/step - loss: 3.8862 - mae: 3.8862\n","Epoch 41/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8605 - mae: 3.8605\n","Epoch 42/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8608 - mae: 3.8608\n","Epoch 43/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8683 - mae: 3.8683\n","Epoch 44/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8352 - mae: 3.8352\n","Epoch 45/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8762 - mae: 3.8762\n","Epoch 46/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8106 - mae: 3.8106\n","Epoch 47/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8821 - mae: 3.8821\n","Epoch 48/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8234 - mae: 3.8234\n","Epoch 49/100\n","1/1 [==============================] - 0s 11ms/step - loss: 3.8626 - mae: 3.8626\n","Epoch 50/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8328 - mae: 3.8328\n","Epoch 51/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8369 - mae: 3.8369\n","Epoch 52/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.8408 - mae: 3.8408\n","Epoch 53/100\n","1/1 [==============================] - 0s 11ms/step - loss: 3.8111 - mae: 3.8111\n","Epoch 54/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.8489 - mae: 3.8489\n","Epoch 55/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7850 - mae: 3.7850\n","Epoch 56/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8585 - mae: 3.8585\n","Epoch 57/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7982 - mae: 3.7982\n","Epoch 58/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.8377 - mae: 3.8377\n","Epoch 59/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.8062 - mae: 3.8062\n","Epoch 60/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8117 - mae: 3.8117\n","Epoch 61/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8144 - mae: 3.8144\n","Epoch 62/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.7856 - mae: 3.7856\n","Epoch 63/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8227 - mae: 3.8227\n","Epoch 64/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7593 - mae: 3.7593\n","Epoch 65/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.8352 - mae: 3.8352\n","Epoch 66/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7725 - mae: 3.7725\n","Epoch 67/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.8115 - mae: 3.8115\n","Epoch 68/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.7807 - mae: 3.7807\n","Epoch 69/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7853 - mae: 3.7853\n","Epoch 70/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7891 - mae: 3.7891\n","Epoch 71/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.7588 - mae: 3.7588\n","Epoch 72/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.7975 - mae: 3.7975\n","Epoch 73/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.7337 - mae: 3.7337\n","Epoch 74/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.8105 - mae: 3.8105\n","Epoch 75/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.7478 - mae: 3.7478\n","Epoch 76/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7840 - mae: 3.7840\n","Epoch 77/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7563 - mae: 3.7563\n","Epoch 78/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7575 - mae: 3.7575\n","Epoch 79/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7648 - mae: 3.7648\n","Epoch 80/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7307 - mae: 3.7307\n","Epoch 81/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.7735 - mae: 3.7735\n","Epoch 82/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7125 - mae: 3.7125\n","Epoch 83/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7820 - mae: 3.7820\n","Epoch 84/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.7242 - mae: 3.7242\n","Epoch 85/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7552 - mae: 3.7552\n","Epoch 86/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7329 - mae: 3.7329\n","Epoch 87/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.7284 - mae: 3.7284\n","Epoch 88/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7416 - mae: 3.7416\n","Epoch 89/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7013 - mae: 3.7013\n","Epoch 90/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7505 - mae: 3.7505\n","Epoch 91/100\n","1/1 [==============================] - 0s 9ms/step - loss: 3.6921 - mae: 3.6921\n","Epoch 92/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7522 - mae: 3.7522\n","Epoch 93/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7016 - mae: 3.7016\n","Epoch 94/100\n","1/1 [==============================] - 0s 10ms/step - loss: 3.7251 - mae: 3.7251\n","Epoch 95/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7105 - mae: 3.7105\n","Epoch 96/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.6979 - mae: 3.6979\n","Epoch 97/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.7194 - mae: 3.7194\n","Epoch 98/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.6705 - mae: 3.6705\n","Epoch 99/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.7299 - mae: 3.7299\n","Epoch 100/100\n","1/1 [==============================] - 0s 7ms/step - loss: 3.6711 - mae: 3.6711\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7f3bd590>"]},"metadata":{},"execution_count":23}],"source":["# Let's see if we can make another change to improve our model \n","\n","# 1. Create the model (this time with an extra hidden layer with 100 hidden units)\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(100, activation=\"relu\"),\n","  tf.keras.layers.Dense(1)                            \n","])\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics= [\"mae\"]\n",")\n","\n","# 3. Fit the model\n","model.fit(tf.expand_dims(X, axis=-1), y, epochs=100)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1663809108205,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"IM0ueqM3EcuZ","outputId":"1f8acd0a-4256-4ecf-ae52-59170fe7395c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float32, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.], dtype=float32)>,\n"," <tf.Tensor: shape=(8,), dtype=float32, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.], dtype=float32)>)"]},"metadata":{},"execution_count":24}],"source":["# Let's remind oursevles of the data\n","X, y"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":189,"status":"ok","timestamp":1663809108390,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"YpE9FktzEw2q","outputId":"eaf290c6-4235-4b58-e81b-8685df34bd5c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[31.223137]], dtype=float32)"]},"metadata":{},"execution_count":25}],"source":["# Let's try to make a prediction\n","model.predict([17.0])"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3088,"status":"ok","timestamp":1663809111474,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"DsEfk6tbE2Az","outputId":"5180be68-f365-46d5-e7aa-ae8fbea2913e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(Adam, self).__init__(name, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 475ms/step - loss: 12.2895 - mae: 12.2895\n","Epoch 2/100\n","1/1 [==============================] - 0s 8ms/step - loss: 11.5828 - mae: 11.5828\n","Epoch 3/100\n","1/1 [==============================] - 0s 15ms/step - loss: 10.8658 - mae: 10.8658\n","Epoch 4/100\n","1/1 [==============================] - 0s 11ms/step - loss: 10.1378 - mae: 10.1378\n","Epoch 5/100\n","1/1 [==============================] - 0s 10ms/step - loss: 9.3973 - mae: 9.3973\n","Epoch 6/100\n","1/1 [==============================] - 0s 9ms/step - loss: 8.6426 - mae: 8.6426\n","Epoch 7/100\n","1/1 [==============================] - 0s 13ms/step - loss: 7.8717 - mae: 7.8717\n","Epoch 8/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.0828 - mae: 7.0828\n","Epoch 9/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.8696 - mae: 6.8696\n","Epoch 10/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.2795 - mae: 7.2795\n","Epoch 11/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.5933 - mae: 7.5933\n","Epoch 12/100\n","1/1 [==============================] - 0s 9ms/step - loss: 7.8205 - mae: 7.8205\n","Epoch 13/100\n","1/1 [==============================] - 0s 8ms/step - loss: 7.8052 - mae: 7.8052\n","Epoch 14/100\n","1/1 [==============================] - 0s 10ms/step - loss: 7.6123 - mae: 7.6123\n","Epoch 15/100\n","1/1 [==============================] - 0s 19ms/step - loss: 7.2873 - mae: 7.2873\n","Epoch 16/100\n","1/1 [==============================] - 0s 16ms/step - loss: 6.9999 - mae: 6.9999\n","Epoch 17/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.7162 - mae: 6.7162\n","Epoch 18/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.4202 - mae: 6.4202\n","Epoch 19/100\n","1/1 [==============================] - 0s 10ms/step - loss: 6.2556 - mae: 6.2556\n","Epoch 20/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.2091 - mae: 6.2091\n","Epoch 21/100\n","1/1 [==============================] - 0s 12ms/step - loss: 6.3210 - mae: 6.3210\n","Epoch 22/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.4110 - mae: 6.4110\n","Epoch 23/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.4007 - mae: 6.4007\n","Epoch 24/100\n","1/1 [==============================] - 0s 9ms/step - loss: 6.3029 - mae: 6.3029\n","Epoch 25/100\n","1/1 [==============================] - 0s 8ms/step - loss: 6.1267 - mae: 6.1267\n","Epoch 26/100\n","1/1 [==============================] - 0s 10ms/step - loss: 5.8791 - mae: 5.8791\n","Epoch 27/100\n","1/1 [==============================] - 0s 12ms/step - loss: 5.6786 - mae: 5.6786\n","Epoch 28/100\n","1/1 [==============================] - 0s 16ms/step - loss: 5.5757 - mae: 5.5757\n","Epoch 29/100\n","1/1 [==============================] - 0s 13ms/step - loss: 5.4829 - mae: 5.4829\n","Epoch 30/100\n","1/1 [==============================] - 0s 10ms/step - loss: 5.4905 - mae: 5.4905\n","Epoch 31/100\n","1/1 [==============================] - 0s 9ms/step - loss: 5.4533 - mae: 5.4533\n","Epoch 32/100\n","1/1 [==============================] - 0s 9ms/step - loss: 5.3748 - mae: 5.3748\n","Epoch 33/100\n","1/1 [==============================] - 0s 8ms/step - loss: 5.2585 - mae: 5.2585\n","Epoch 34/100\n","1/1 [==============================] - 0s 9ms/step - loss: 5.1075 - mae: 5.1075\n","Epoch 35/100\n","1/1 [==============================] - 0s 9ms/step - loss: 4.9247 - mae: 4.9247\n","Epoch 36/100\n","1/1 [==============================] - 0s 10ms/step - loss: 4.8326 - mae: 4.8326\n","Epoch 37/100\n","1/1 [==============================] - 0s 8ms/step - loss: 4.7434 - mae: 4.7434\n","Epoch 38/100\n","1/1 [==============================] - 0s 9ms/step - loss: 4.6473 - mae: 4.6473\n","Epoch 39/100\n","1/1 [==============================] - 0s 9ms/step - loss: 4.6407 - mae: 4.6407\n","Epoch 40/100\n","1/1 [==============================] - 0s 8ms/step - loss: 4.5264 - mae: 4.5264\n","Epoch 41/100\n","1/1 [==============================] - 0s 8ms/step - loss: 4.3044 - mae: 4.3044\n","Epoch 42/100\n","1/1 [==============================] - 0s 9ms/step - loss: 4.1423 - mae: 4.1423\n","Epoch 43/100\n","1/1 [==============================] - 0s 16ms/step - loss: 3.9877 - mae: 3.9877\n","Epoch 44/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.9463 - mae: 3.9463\n","Epoch 45/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.8751 - mae: 3.8751\n","Epoch 46/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.7518 - mae: 3.7518\n","Epoch 47/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.5792 - mae: 3.5792\n","Epoch 48/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.3603 - mae: 3.3603\n","Epoch 49/100\n","1/1 [==============================] - 0s 8ms/step - loss: 3.0974 - mae: 3.0974\n","Epoch 50/100\n","1/1 [==============================] - 0s 17ms/step - loss: 2.9258 - mae: 2.9258\n","Epoch 51/100\n","1/1 [==============================] - 0s 9ms/step - loss: 2.8596 - mae: 2.8596\n","Epoch 52/100\n","1/1 [==============================] - 0s 7ms/step - loss: 2.7330 - mae: 2.7330\n","Epoch 53/100\n","1/1 [==============================] - 0s 19ms/step - loss: 2.4630 - mae: 2.4630\n","Epoch 54/100\n","1/1 [==============================] - 0s 11ms/step - loss: 2.1637 - mae: 2.1637\n","Epoch 55/100\n","1/1 [==============================] - 0s 7ms/step - loss: 2.0178 - mae: 2.0178\n","Epoch 56/100\n","1/1 [==============================] - 0s 8ms/step - loss: 1.8761 - mae: 1.8761\n","Epoch 57/100\n","1/1 [==============================] - 0s 10ms/step - loss: 1.6739 - mae: 1.6739\n","Epoch 58/100\n","1/1 [==============================] - 0s 9ms/step - loss: 1.3610 - mae: 1.3610\n","Epoch 59/100\n","1/1 [==============================] - 0s 10ms/step - loss: 1.0521 - mae: 1.0521\n","Epoch 60/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.9785 - mae: 0.9785\n","Epoch 61/100\n","1/1 [==============================] - 0s 14ms/step - loss: 0.7530 - mae: 0.7530\n","Epoch 62/100\n","1/1 [==============================] - 0s 13ms/step - loss: 0.3616 - mae: 0.3616\n","Epoch 63/100\n","1/1 [==============================] - 0s 7ms/step - loss: 0.3183 - mae: 0.3183\n","Epoch 64/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.4345 - mae: 0.4345\n","Epoch 65/100\n","1/1 [==============================] - 0s 7ms/step - loss: 0.4634 - mae: 0.4634\n","Epoch 66/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.7942 - mae: 0.7942\n","Epoch 67/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.9794 - mae: 0.9794\n","Epoch 68/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.9275 - mae: 0.9275\n","Epoch 69/100\n","1/1 [==============================] - 0s 10ms/step - loss: 0.7528 - mae: 0.7528\n","Epoch 70/100\n","1/1 [==============================] - 0s 7ms/step - loss: 0.8762 - mae: 0.8762\n","Epoch 71/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.8515 - mae: 0.8515\n","Epoch 72/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.6467 - mae: 0.6467\n","Epoch 73/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.6094 - mae: 0.6094\n","Epoch 74/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.5948 - mae: 0.5948\n","Epoch 75/100\n","1/1 [==============================] - 0s 13ms/step - loss: 0.3295 - mae: 0.3295\n","Epoch 76/100\n","1/1 [==============================] - 0s 11ms/step - loss: 0.2278 - mae: 0.2278\n","Epoch 77/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.3053 - mae: 0.3053\n","Epoch 78/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.1724 - mae: 0.1724\n","Epoch 79/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.4260 - mae: 0.4260\n","Epoch 80/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.5282 - mae: 0.5282\n","Epoch 81/100\n","1/1 [==============================] - 0s 8ms/step - loss: 0.4697 - mae: 0.4697\n","Epoch 82/100\n","1/1 [==============================] - 0s 7ms/step - loss: 0.2679 - mae: 0.2679\n","Epoch 83/100\n","1/1 [==============================] - 0s 7ms/step - loss: 0.5169 - mae: 0.5169\n","Epoch 84/100\n","1/1 [==============================] - 0s 7ms/step - loss: 0.6089 - mae: 0.6089\n","Epoch 85/100\n","1/1 [==============================] - 0s 10ms/step - loss: 0.4048 - mae: 0.4048\n","Epoch 86/100\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0787 - mae: 0.0787\n","Epoch 87/100\n","1/1 [==============================] - 0s 10ms/step - loss: 0.2098 - mae: 0.2098\n","Epoch 88/100\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0880 - mae: 0.0880\n","Epoch 89/100\n","1/1 [==============================] - 0s 12ms/step - loss: 0.2642 - mae: 0.2642\n","Epoch 90/100\n","1/1 [==============================] - 0s 13ms/step - loss: 0.2510 - mae: 0.2510\n","Epoch 91/100\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0822 - mae: 0.0822\n","Epoch 92/100\n","1/1 [==============================] - 0s 10ms/step - loss: 0.1671 - mae: 0.1671\n","Epoch 93/100\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0152 - mae: 0.0152\n","Epoch 94/100\n","1/1 [==============================] - 0s 12ms/step - loss: 0.1764 - mae: 0.1764\n","Epoch 95/100\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0582 - mae: 0.0582\n","Epoch 96/100\n","1/1 [==============================] - 0s 12ms/step - loss: 0.3080 - mae: 0.3080\n","Epoch 97/100\n","1/1 [==============================] - 0s 13ms/step - loss: 0.3564 - mae: 0.3564\n","Epoch 98/100\n","1/1 [==============================] - 0s 11ms/step - loss: 0.1435 - mae: 0.1435\n","Epoch 99/100\n","1/1 [==============================] - 0s 13ms/step - loss: 0.3117 - mae: 0.3117\n","Epoch 100/100\n","1/1 [==============================] - 0s 9ms/step - loss: 0.4584 - mae: 0.4584\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7e5cd7d0>"]},"metadata":{},"execution_count":26}],"source":["# Let's see if we can make another change to improve our model \n","\n","# 1. Create the model (this time with an extra hidden layer with 100 hidden units)\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(50, activation=None),\n","  tf.keras.layers.Dense(1)                            \n","])\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.Adam(lr=0.01),\n","    metrics= [\"mae\"]\n",")\n","\n","# 3. Fit the model\n","model.fit(tf.expand_dims(X, axis=-1), y, epochs=100)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":233,"status":"ok","timestamp":1663809111703,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"Pdb5zEbCGRlN","outputId":"f2e87756-1f2c-472d-c7b4-ebc8b56f78e3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[27.890127]], dtype=float32)"]},"metadata":{},"execution_count":27}],"source":["# Let's try to make a prediction\n","model.predict([17.0])"]},{"cell_type":"code","execution_count":28,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1663809111703,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"MMXzchEvGURB"},"outputs":[],"source":["# Last model (right above ^^^) seems to have best results, why??"]},{"cell_type":"markdown","metadata":{"id":"p0Jo9VfSQeNN"},"source":["### Evaluating a model\n","\n","In practice, a typical workflow you'll go through when building neural networks is:\n","\n","```\n","Build a model -> fit it -> evaluate it -> tweak a mode -> fit it -> evaluate it -> tweka a model -> fit it -> evaluate it ...\n","```"]},{"cell_type":"markdown","metadata":{"id":"NsaxkShRRCbX"},"source":["When it comes to evaluation... there are 3 words you should memorize:\n","\n","> \"Visualize, visualize, visualzie\"\n","\n","It's a good idea to visualize:\n","* The data - what data are we working with? What does it look like?\n","* The model itself - what does our model look like?\n","* The training of a model - how does a model perform while it leanrs?\n","* The predictions of the model - how do the predictions of a model line up against the ground truth (the original labels)?"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1663809111703,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"LFQalJftRqJJ","outputId":"7d37913a-f378-44da-dc97-acce8f9583b7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(50,), dtype=int32, numpy=\n","array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n","        -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n","        -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n","         32,   36,   40,   44,   48,   52,   56,   60,   64,   68,   72,\n","         76,   80,   84,   88,   92,   96], dtype=int32)>"]},"metadata":{},"execution_count":29}],"source":["# Make a bigger dataset\n","X = tf.range(-100, 100, 4)\n","X"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1663809111703,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"x0J2XTPhRyE1","outputId":"af5ddc1b-4b09-45f5-d789-6605923bd90c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(50,), dtype=int32, numpy=\n","array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n","       -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n","        14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n","        66,  70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"]},"metadata":{},"execution_count":30}],"source":["# Make labels for the dataset\n","y = X + 10\n","y"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":186,"status":"ok","timestamp":1663809111886,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"T_lQRUdaSDHx","outputId":"8078541e-456d-4a66-e07f-6084d6685cee"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fcc7c2e4b90>"]},"metadata":{},"execution_count":31},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# Visualize the data\n","import matplotlib.pyplot as plt\n","\n","plt.plot(X, y)\n","plt.scatter(X, y)"]},{"cell_type":"markdown","metadata":{"id":"j8bIvUObSYj7"},"source":["### The 3 sets...\n","\n","* Training set - the model learns from this data, which is typically 70-80% of the total data you have available.\n","* Validation set - the model gets tuned on this data, which is typically 10-15% of the data available.\n","* Test set - the model gets evaluated on this data to test what is has learned, this set is typically 10-15% of the total data available.\n"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":151,"status":"ok","timestamp":1663809112033,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"3EOOjdpeTG1M","outputId":"b57bcb3e-bce1-49d0-a2b9-c0c6c1b6061f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["50"]},"metadata":{},"execution_count":32}],"source":["# Check the length of how many samples we have\n","len(X)"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1663809112034,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"gBsKelz_Tdxy","outputId":"0fe19469-318b-49d0-d459-763ef848c0d6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(40, 10, 40, 10)"]},"metadata":{},"execution_count":33}],"source":["# Split the data into train and test sets\n","X_train = X[:40] # first 40 are training samples (80% of the data)\n","y_train = y[:40]\n","\n","X_test = X[40:] # last 10 are testing samples (20% of the data)\n","y_test = y[40:]\n","\n","len(X_train), len(X_test), len(y_train), len(y_test)"]},{"cell_type":"markdown","metadata":{"id":"dT9Rz6FGUZCS"},"source":["### Visualizing the data\n","\n","Now we've got our data in training and test sets... let's visualize it again!"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"executionInfo":{"elapsed":476,"status":"ok","timestamp":1663809112508,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"GWbJogy8Ufa4","outputId":"6c07106d-70e7-48f0-892a-5455399c0f88"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(figsize=(10, 7))\n","# Plot training data in blue\n","plt.scatter(X_train, y_train, c=\"b\", label=\"Training data\")\n","# Plot test data in green\n","plt.scatter(X_test, y_test, c=\"g\", label=\"Testing data\")\n","# Show a legend\n","plt.legend();"]},{"cell_type":"code","execution_count":35,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1663809112509,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"DIV_GL7MU4ME"},"outputs":[],"source":["# Let's have a look at how to build a neural network for our data\n","\n","# 1. Create a model\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n","\n"," "]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1663809112510,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"DgjzoEZHWhp7","outputId":"c2980bd4-823f-4331-de6f-3bec913c653b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=int32, numpy=-100>,\n"," <tf.Tensor: shape=(), dtype=int32, numpy=-90>)"]},"metadata":{},"execution_count":36}],"source":["X[0], y[0]"]},{"cell_type":"code","execution_count":37,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1663809112510,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"ZUTfAfK5WGqx"},"outputs":[],"source":["# let's create a model which builds automatically by defining the input_shape arguments\n","tf.random.set_seed(42)\n","\n","# Create a model (same as above)\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(3, input_shape=[1]) # \"Dense\" means layer is fully connected\n","])\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n"]},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":188,"status":"ok","timestamp":1663809112693,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"DIHmqbTfW2qh","outputId":"211cff9e-36cf-4024-9515-ad172323b352"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_7 (Dense)             (None, 3)                 6         \n","                                                                 \n","=================================================================\n","Total params: 6\n","Trainable params: 6\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["model.summary()"]},{"cell_type":"markdown","metadata":{"id":"4HJctyu7XFlt"},"source":["* Total parameters - total number of parameters in the model.\n","* Trainable parameters - these are the parameters (patterns) the model can update as it trains.\n","* Non-trainable parameters - these parameters aren't updated during training (this is typical when you bring in already learn patterns or parameters from other models during **transfer learning**)."]},{"cell_type":"markdown","metadata":{"id":"AXjzeSrtYR87"},"source":["**Resource:** For a more in-depth overview of the trainable parameters within a layer, check out MIT's introduction to deep learning video.\n","\n","**Exercise:** Try playing around with the number of hidden units in the dense layer, see how that affects the number of parameters (total and trainable) by calling `model.summary()`."]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2874,"status":"ok","timestamp":1663809115561,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"GnMVlwzmZCT-","outputId":"6f535e55-0e12-4942-e691-78aceadde8b7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","2/2 [==============================] - 0s 8ms/step - loss: 41.3534 - mae: 41.3534\n","Epoch 2/100\n","2/2 [==============================] - 0s 9ms/step - loss: 30.3430 - mae: 30.3430\n","Epoch 3/100\n","2/2 [==============================] - 0s 5ms/step - loss: 20.3014 - mae: 20.3014\n","Epoch 4/100\n","2/2 [==============================] - 0s 9ms/step - loss: 13.4641 - mae: 13.4641\n","Epoch 5/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.8916 - mae: 8.8916\n","Epoch 6/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8335 - mae: 7.8335\n","Epoch 7/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.2891 - mae: 8.2891\n","Epoch 8/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.7615 - mae: 7.7615\n","Epoch 9/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7646 - mae: 8.7646\n","Epoch 10/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5911 - mae: 8.5911\n","Epoch 11/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.8576 - mae: 7.8576\n","Epoch 12/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.7562 - mae: 7.7562\n","Epoch 13/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.8389 - mae: 7.8389\n","Epoch 14/100\n","2/2 [==============================] - 0s 10ms/step - loss: 7.9841 - mae: 7.9841\n","Epoch 15/100\n","2/2 [==============================] - 0s 12ms/step - loss: 8.6922 - mae: 8.6922\n","Epoch 16/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.5520 - mae: 7.5520\n","Epoch 17/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.9793 - mae: 7.9793\n","Epoch 18/100\n","2/2 [==============================] - 0s 4ms/step - loss: 7.7872 - mae: 7.7872\n","Epoch 19/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7546 - mae: 7.7546\n","Epoch 20/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.0699 - mae: 8.0699\n","Epoch 21/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.0790 - mae: 8.0790\n","Epoch 22/100\n","2/2 [==============================] - 0s 14ms/step - loss: 8.3213 - mae: 8.3213\n","Epoch 23/100\n","2/2 [==============================] - 0s 10ms/step - loss: 7.6327 - mae: 7.6327\n","Epoch 24/100\n","2/2 [==============================] - 0s 10ms/step - loss: 8.6645 - mae: 8.6645\n","Epoch 25/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7461 - mae: 8.7461\n","Epoch 26/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1444 - mae: 8.1444\n","Epoch 27/100\n","2/2 [==============================] - 0s 9ms/step - loss: 8.0517 - mae: 8.0517\n","Epoch 28/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.0961 - mae: 8.0961\n","Epoch 29/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.9407 - mae: 7.9407\n","Epoch 30/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5182 - mae: 10.5182\n","Epoch 31/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.4780 - mae: 10.4780\n","Epoch 32/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.5053 - mae: 7.5053\n","Epoch 33/100\n","2/2 [==============================] - 0s 14ms/step - loss: 7.7946 - mae: 7.7946\n","Epoch 34/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5372 - mae: 8.5372\n","Epoch 35/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.0783 - mae: 8.0783\n","Epoch 36/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.4847 - mae: 9.4847\n","Epoch 37/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8843 - mae: 7.8843\n","Epoch 38/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8823 - mae: 7.8823\n","Epoch 39/100\n","2/2 [==============================] - 0s 8ms/step - loss: 8.8874 - mae: 8.8874\n","Epoch 40/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.4493 - mae: 8.4493\n","Epoch 41/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.4935 - mae: 7.4935\n","Epoch 42/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7547 - mae: 7.7547\n","Epoch 43/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.5143 - mae: 7.5143\n","Epoch 44/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.3635 - mae: 8.3635\n","Epoch 45/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.9493 - mae: 8.9493\n","Epoch 46/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.2765 - mae: 8.2765\n","Epoch 47/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.6038 - mae: 7.6038\n","Epoch 48/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7395 - mae: 7.7395\n","Epoch 49/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.4098 - mae: 7.4098\n","Epoch 50/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.9657 - mae: 7.9657\n","Epoch 51/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.0231 - mae: 8.0231\n","Epoch 52/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5357 - mae: 8.5357\n","Epoch 53/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.9899 - mae: 8.9899\n","Epoch 54/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.4939 - mae: 7.4939\n","Epoch 55/100\n","2/2 [==============================] - 0s 9ms/step - loss: 9.5676 - mae: 9.5676\n","Epoch 56/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.1514 - mae: 8.1514\n","Epoch 57/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.4146 - mae: 8.4146\n","Epoch 58/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.1262 - mae: 8.1262\n","Epoch 59/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.6146 - mae: 7.6146\n","Epoch 60/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.3535 - mae: 8.3535\n","Epoch 61/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.5655 - mae: 7.5655\n","Epoch 62/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8075 - mae: 7.8075\n","Epoch 63/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1440 - mae: 8.1440\n","Epoch 64/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.8924 - mae: 8.8924\n","Epoch 65/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.5233 - mae: 8.5233\n","Epoch 66/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.0137 - mae: 9.0137\n","Epoch 67/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.4188 - mae: 7.4188\n","Epoch 68/100\n","2/2 [==============================] - 0s 12ms/step - loss: 7.8609 - mae: 7.8609\n","Epoch 69/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.3736 - mae: 8.3736\n","Epoch 70/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.5541 - mae: 7.5541\n","Epoch 71/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.0501 - mae: 9.0501\n","Epoch 72/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.2806 - mae: 8.2806\n","Epoch 73/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.4807 - mae: 7.4807\n","Epoch 74/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5935 - mae: 8.5935\n","Epoch 75/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8206 - mae: 7.8206\n","Epoch 76/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.4907 - mae: 7.4907\n","Epoch 77/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.0582 - mae: 8.0582\n","Epoch 78/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.4850 - mae: 7.4850\n","Epoch 79/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.3928 - mae: 8.3928\n","Epoch 80/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.7898 - mae: 7.7898\n","Epoch 81/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.7264 - mae: 7.7264\n","Epoch 82/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1208 - mae: 8.1208\n","Epoch 83/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.4414 - mae: 7.4414\n","Epoch 84/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.3306 - mae: 7.3306\n","Epoch 85/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.6523 - mae: 8.6523\n","Epoch 86/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.9070 - mae: 7.9070\n","Epoch 87/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.5226 - mae: 7.5226\n","Epoch 88/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.9625 - mae: 9.9625\n","Epoch 89/100\n","2/2 [==============================] - 0s 9ms/step - loss: 7.3376 - mae: 7.3376\n","Epoch 90/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1876 - mae: 8.1876\n","Epoch 91/100\n","2/2 [==============================] - 0s 11ms/step - loss: 8.1447 - mae: 8.1447\n","Epoch 92/100\n","2/2 [==============================] - 0s 8ms/step - loss: 8.3760 - mae: 8.3760\n","Epoch 93/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.8601 - mae: 7.8601\n","Epoch 94/100\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1899 - mae: 8.1899\n","Epoch 95/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5487 - mae: 8.5487\n","Epoch 96/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.3841 - mae: 7.3841\n","Epoch 97/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.0970 - mae: 9.0970\n","Epoch 98/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.3113 - mae: 7.3113\n","Epoch 99/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.6275 - mae: 7.6275\n","Epoch 100/100\n","2/2 [==============================] - 0s 4ms/step - loss: 7.5970 - mae: 7.5970\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7f3b9e90>"]},"metadata":{},"execution_count":39}],"source":["# Let's fit our model to the training data\n","model.fit(tf.expand_dims(X_train, axis=-1), y_train, epochs=100, verbose=1)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":198,"status":"ok","timestamp":1663809115748,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"Qg5_cL9yaKao","outputId":"0367a6fe-508d-4835-9a0c-f1ab6a1ff21f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_7 (Dense)             (None, 3)                 6         \n","                                                                 \n","=================================================================\n","Total params: 6\n","Trainable params: 6\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["model.summary()"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":654,"status":"ok","timestamp":1663809116401,"user":{"displayName":"A SAL","userId":"12890107829430246221"},"user_tz":420},"id":"mRv3Kan8ahoy","outputId":"88188b85-99f2-48b5-dd2c-d23e69eb96fc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7e52e1d0>"]},"metadata":{},"execution_count":41}],"source":["# Let's fit our model to the training data\n","model.fit(tf.expand_dims(X_train, axis=-1), y_train, epochs=100, verbose=0)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBzZ9eHYa2VU","executionInfo":{"status":"ok","timestamp":1663809119525,"user_tz":420,"elapsed":3125,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"5f20809a-df14-4264-8ef3-4cbf3a1597d5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","2/2 [==============================] - 0s 8ms/step - loss: 27.4058 - mae: 27.4058\n","Epoch 2/100\n","2/2 [==============================] - 0s 6ms/step - loss: 24.6339 - mae: 24.6339\n","Epoch 3/100\n","2/2 [==============================] - 0s 9ms/step - loss: 29.8935 - mae: 29.8935\n","Epoch 4/100\n","2/2 [==============================] - 0s 5ms/step - loss: 27.4055 - mae: 27.4055\n","Epoch 5/100\n","2/2 [==============================] - 0s 9ms/step - loss: 14.9463 - mae: 14.9463\n","Epoch 6/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.8819 - mae: 11.8819\n","Epoch 7/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.1988 - mae: 11.1988\n","Epoch 8/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0910 - mae: 11.0910\n","Epoch 9/100\n","2/2 [==============================] - 0s 6ms/step - loss: 40.4763 - mae: 40.4763\n","Epoch 10/100\n","2/2 [==============================] - 0s 13ms/step - loss: 27.8688 - mae: 27.8688\n","Epoch 11/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.2473 - mae: 10.2473\n","Epoch 12/100\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2803 - mae: 25.2803\n","Epoch 13/100\n","2/2 [==============================] - 0s 5ms/step - loss: 16.9897 - mae: 16.9897\n","Epoch 14/100\n","2/2 [==============================] - 0s 5ms/step - loss: 25.9217 - mae: 25.9217\n","Epoch 15/100\n","2/2 [==============================] - 0s 7ms/step - loss: 17.9948 - mae: 17.9948\n","Epoch 16/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.3510 - mae: 7.3510\n","Epoch 17/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.8636 - mae: 10.8636\n","Epoch 18/100\n","2/2 [==============================] - 0s 5ms/step - loss: 19.5304 - mae: 19.5304\n","Epoch 19/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.3469 - mae: 10.3469\n","Epoch 20/100\n","2/2 [==============================] - 0s 13ms/step - loss: 17.6985 - mae: 17.6985\n","Epoch 21/100\n","2/2 [==============================] - 0s 5ms/step - loss: 15.8984 - mae: 15.8984\n","Epoch 22/100\n","2/2 [==============================] - 0s 6ms/step - loss: 14.1991 - mae: 14.1991\n","Epoch 23/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.7720 - mae: 8.7720\n","Epoch 24/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0570 - mae: 11.0570\n","Epoch 25/100\n","2/2 [==============================] - 0s 8ms/step - loss: 12.6838 - mae: 12.6838\n","Epoch 26/100\n","2/2 [==============================] - 0s 14ms/step - loss: 26.1877 - mae: 26.1877\n","Epoch 27/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.7432 - mae: 11.7432\n","Epoch 28/100\n","2/2 [==============================] - 0s 7ms/step - loss: 22.8730 - mae: 22.8730\n","Epoch 29/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2459 - mae: 9.2459\n","Epoch 30/100\n","2/2 [==============================] - 0s 7ms/step - loss: 29.2641 - mae: 29.2641\n","Epoch 31/100\n","2/2 [==============================] - 0s 6ms/step - loss: 53.0225 - mae: 53.0225\n","Epoch 32/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.9951 - mae: 11.9951\n","Epoch 33/100\n","2/2 [==============================] - 0s 3ms/step - loss: 15.6357 - mae: 15.6357\n","Epoch 34/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.6925 - mae: 12.6925\n","Epoch 35/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2398 - mae: 9.2398\n","Epoch 36/100\n","2/2 [==============================] - 0s 9ms/step - loss: 16.6497 - mae: 16.6497\n","Epoch 37/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0382 - mae: 11.0382\n","Epoch 38/100\n","2/2 [==============================] - 0s 6ms/step - loss: 18.1634 - mae: 18.1634\n","Epoch 39/100\n","2/2 [==============================] - 0s 16ms/step - loss: 19.1013 - mae: 19.1013\n","Epoch 40/100\n","2/2 [==============================] - 0s 8ms/step - loss: 20.4324 - mae: 20.4324\n","Epoch 41/100\n","2/2 [==============================] - 0s 5ms/step - loss: 14.9102 - mae: 14.9102\n","Epoch 42/100\n","2/2 [==============================] - 0s 13ms/step - loss: 12.2809 - mae: 12.2809\n","Epoch 43/100\n","2/2 [==============================] - 0s 16ms/step - loss: 10.7333 - mae: 10.7333\n","Epoch 44/100\n","2/2 [==============================] - 0s 4ms/step - loss: 23.0260 - mae: 23.0260\n","Epoch 45/100\n","2/2 [==============================] - 0s 4ms/step - loss: 10.3897 - mae: 10.3897\n","Epoch 46/100\n","2/2 [==============================] - 0s 9ms/step - loss: 11.7904 - mae: 11.7904\n","Epoch 47/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.6438 - mae: 9.6438\n","Epoch 48/100\n","2/2 [==============================] - 0s 5ms/step - loss: 17.2335 - mae: 17.2335\n","Epoch 49/100\n","2/2 [==============================] - 0s 4ms/step - loss: 9.5729 - mae: 9.5729\n","Epoch 50/100\n","2/2 [==============================] - 0s 5ms/step - loss: 13.8185 - mae: 13.8185\n","Epoch 51/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.5958 - mae: 11.5958\n","Epoch 52/100\n","2/2 [==============================] - 0s 5ms/step - loss: 30.5538 - mae: 30.5538\n","Epoch 53/100\n","2/2 [==============================] - 0s 5ms/step - loss: 14.3541 - mae: 14.3541\n","Epoch 54/100\n","2/2 [==============================] - 0s 7ms/step - loss: 23.9713 - mae: 23.9713\n","Epoch 55/100\n","2/2 [==============================] - 0s 5ms/step - loss: 23.1938 - mae: 23.1938\n","Epoch 56/100\n","2/2 [==============================] - 0s 11ms/step - loss: 10.8837 - mae: 10.8837\n","Epoch 57/100\n","2/2 [==============================] - 0s 9ms/step - loss: 12.7445 - mae: 12.7445\n","Epoch 58/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5995 - mae: 9.5995\n","Epoch 59/100\n","2/2 [==============================] - 0s 11ms/step - loss: 12.5172 - mae: 12.5172\n","Epoch 60/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.3200 - mae: 12.3200\n","Epoch 61/100\n","2/2 [==============================] - 0s 6ms/step - loss: 17.4604 - mae: 17.4604\n","Epoch 62/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.6052 - mae: 10.6052\n","Epoch 63/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.4893 - mae: 10.4893\n","Epoch 64/100\n","2/2 [==============================] - 0s 6ms/step - loss: 24.8450 - mae: 24.8450\n","Epoch 65/100\n","2/2 [==============================] - 0s 9ms/step - loss: 10.6761 - mae: 10.6761\n","Epoch 66/100\n","2/2 [==============================] - 0s 7ms/step - loss: 21.7809 - mae: 21.7809\n","Epoch 67/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.7136 - mae: 10.7136\n","Epoch 68/100\n","2/2 [==============================] - 0s 10ms/step - loss: 10.6397 - mae: 10.6397\n","Epoch 69/100\n","2/2 [==============================] - 0s 6ms/step - loss: 22.6914 - mae: 22.6914\n","Epoch 70/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.3316 - mae: 9.3316\n","Epoch 71/100\n","2/2 [==============================] - 0s 6ms/step - loss: 15.4355 - mae: 15.4355\n","Epoch 72/100\n","2/2 [==============================] - 0s 6ms/step - loss: 6.7437 - mae: 6.7437\n","Epoch 73/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.6891 - mae: 11.6891\n","Epoch 74/100\n","2/2 [==============================] - 0s 8ms/step - loss: 24.0400 - mae: 24.0400\n","Epoch 75/100\n","2/2 [==============================] - 0s 11ms/step - loss: 9.5896 - mae: 9.5896\n","Epoch 76/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.4371 - mae: 12.4371\n","Epoch 77/100\n","2/2 [==============================] - 0s 7ms/step - loss: 16.6489 - mae: 16.6489\n","Epoch 78/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.0614 - mae: 9.0614\n","Epoch 79/100\n","2/2 [==============================] - 0s 5ms/step - loss: 23.9675 - mae: 23.9675\n","Epoch 80/100\n","2/2 [==============================] - 0s 7ms/step - loss: 26.7463 - mae: 26.7463\n","Epoch 81/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.6714 - mae: 11.6714\n","Epoch 82/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.0228 - mae: 12.0228\n","Epoch 83/100\n","2/2 [==============================] - 0s 5ms/step - loss: 17.4218 - mae: 17.4218\n","Epoch 84/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.2629 - mae: 7.2629\n","Epoch 85/100\n","2/2 [==============================] - 0s 6ms/step - loss: 14.9650 - mae: 14.9650\n","Epoch 86/100\n","2/2 [==============================] - 0s 6ms/step - loss: 15.2862 - mae: 15.2862\n","Epoch 87/100\n","2/2 [==============================] - 0s 6ms/step - loss: 19.1086 - mae: 19.1086\n","Epoch 88/100\n","2/2 [==============================] - 0s 8ms/step - loss: 29.8229 - mae: 29.8229\n","Epoch 89/100\n","2/2 [==============================] - 0s 11ms/step - loss: 10.1742 - mae: 10.1742\n","Epoch 90/100\n","2/2 [==============================] - 0s 5ms/step - loss: 21.5240 - mae: 21.5240\n","Epoch 91/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.5716 - mae: 10.5716\n","Epoch 92/100\n","2/2 [==============================] - 0s 5ms/step - loss: 18.3977 - mae: 18.3977\n","Epoch 93/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.4138 - mae: 7.4138\n","Epoch 94/100\n","2/2 [==============================] - 0s 8ms/step - loss: 17.7380 - mae: 17.7380\n","Epoch 95/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.1144 - mae: 11.1144\n","Epoch 96/100\n","2/2 [==============================] - 0s 6ms/step - loss: 19.4346 - mae: 19.4346\n","Epoch 97/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.1593 - mae: 12.1593\n","Epoch 98/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.5653 - mae: 11.5653\n","Epoch 99/100\n","2/2 [==============================] - 0s 6ms/step - loss: 13.8827 - mae: 13.8827\n","Epoch 100/100\n","2/2 [==============================] - 0s 6ms/step - loss: 20.2277 - mae: 20.2277\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7c244290>"]},"metadata":{},"execution_count":42}],"source":["# let's create a model which builds automatically by defining the input_shape arguments\n","tf.random.set_seed(42)\n","\n","# Create a model (same as above)\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10, input_shape=[1], name=\"input_layer\"), # \"Dense\" means layer is fully connected\n","    tf.keras.layers.Dense(1, name=\"output_layer\")\n","], name=\"modelA\")\n","\n","# 2. Compile the model\n","model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n","\n","\n","# Let's fit our model to the training data\n","model.fit(tf.expand_dims(X_train, axis=-1), y_train, epochs=100, verbose=1)  # different syntax for versions previous to 2.70"]},{"cell_type":"code","source":["from tensorflow.keras.utils import plot_model\n","\n","plot_model(model=model, show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"_006SZi83a7L","executionInfo":{"status":"ok","timestamp":1663809119950,"user_tz":420,"elapsed":435,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"90b06884-0d1a-4ef5-86b4-b362ed07a6ab"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"id":"fGgtka3e6bhE","executionInfo":{"status":"ok","timestamp":1663809119951,"user_tz":420,"elapsed":9,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"dc05af6d-0b02-4269-e4bf-4ba75f2698f7","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"modelA\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_layer (Dense)         (None, 10)                20        \n","                                                                 \n"," output_layer (Dense)        (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31\n","Trainable params: 31\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["### Visualizing our model's predictions\n","\n","To visualize predictions, it's a good idea to plot them against the ground truth labels.\n","\n","Often you'll see this in the form of `y_test` or `y_true` versus `y_pred` (ground truth versus your model's predictions). "],"metadata":{"id":"oBF0WNN7PJt8"}},{"cell_type":"code","source":["# Make some predictions\n","y_pred = model.predict(X_test)\n","y_pred"],"metadata":{"id":"nG4FO2Bm6gFs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663809120129,"user_tz":420,"elapsed":181,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"2d543b9b-2540-4c77-9d7f-89251cfcfd6f"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fcc7e474ef0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[ 70.55218 ],\n","       [ 75.13991 ],\n","       [ 79.72763 ],\n","       [ 84.31535 ],\n","       [ 88.903076],\n","       [ 93.49081 ],\n","       [ 98.07853 ],\n","       [102.66625 ],\n","       [107.253975],\n","       [111.8417  ]], dtype=float32)"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A5Y7ORoUPv-5","executionInfo":{"status":"ok","timestamp":1663809120130,"user_tz":420,"elapsed":7,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"997c6091-6c42-4be0-de22-33cdd1295cc4"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["**Note:** If you feel like you're going to reuse some kind of functionality in the future, it's a good to turn it into a function."],"metadata":{"id":"JTatYDWaQAir"}},{"cell_type":"code","source":["# Let's create a plotting function\n","def plot_predictions(\n","    train_data=X_train,\n","    train_labels=y_train,\n","    test_data=X_test,\n","    test_labels=y_test,\n","    predictions=y_pred\n","):\n","    \"\"\"\n","    Plots training data, test data and compares predictions to ground truth labels\n","    \"\"\"\n","    plt.figure(figsize=(10, 7))\n","    # plot training data in blue\n","    plt.scatter(train_data, train_labels, c=\"b\", label=\"Training Data\")\n","    # plot testing data in green\n","    plt.scatter(test_data, test_labels, c=\"g\", label=\"Testing data\")\n","    # plot model's predictions in red\n","    plt.scatter(test_data, predictions, c=\"r\", label=\"Predictions\")\n","    # Show the legend\n","    plt.legend();\n","\n"],"metadata":{"id":"ZPrt9kPLPx4E","executionInfo":{"status":"ok","timestamp":1663809120130,"user_tz":420,"elapsed":3,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["plot_predictions(\n","    train_data=X_train,\n","    train_labels=y_train,\n","    test_data=X_test,\n","    test_labels=y_test,\n","    predictions=y_pred\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"MgZlfjivRKev","executionInfo":{"status":"ok","timestamp":1663809120458,"user_tz":420,"elapsed":331,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"b6d0740c-21ef-4c27-e831-6970cd1b82c8"},"execution_count":48,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### Evaluating our model's predictions with regression evaluation metrics\n","\n","Depending on the problem you're working on, there will be different evaluation metric to evaluate your model's performance.\n","\n","Since we're working on a regression, two of the main metrics:\n","* MAE - mean absolute error, \"on average, how wrong is each of my model's predictions\"\n","* MSE - mean square error, \"square the average errors\""],"metadata":{"id":"DNCo0K11RoUd"}},{"cell_type":"code","source":["# Evaluate the model on the test set\n","model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5A5SzAj8RlMx","executionInfo":{"status":"ok","timestamp":1663809120643,"user_tz":420,"elapsed":187,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"18dc5169-358b-4520-bdfe-05bdbb6cc6ac"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 158ms/step - loss: 3.1969 - mae: 3.1969\n"]},{"output_type":"execute_result","data":{"text/plain":["[3.196942090988159, 3.196942090988159]"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# Calculate the mean absolute error\n","np.sum(abs(y_pred-y_test))/len(y_pred)\n","\n","mae = tf.metrics.mean_absolute_error(\n","    y_true=y_test, \n","    y_pred=tf.constant(y_pred)\n",")\n","mae"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZcU372NRTWdD","executionInfo":{"status":"ok","timestamp":1663809120644,"user_tz":420,"elapsed":9,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"79210dd0-5420-429c-a8d9-29099de5c935"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=float32, numpy=\n","array([17.558258 , 14.1160555, 11.708948 , 10.336929 , 10.       ,\n","       10.698161 , 12.447118 , 15.333002 , 19.253975 , 23.841698 ],\n","      dtype=float32)>"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["y_test - y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Z8jDUoJTwzV","executionInfo":{"status":"ok","timestamp":1663809120645,"user_tz":420,"elapsed":8,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"7898e537-472d-4d19-de4c-b5819d17d1f1"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10, 10), dtype=int32, numpy=\n","array([[  0,   4,   8,  12,  16,  20,  24,  28,  32,  36],\n","       [ -5,  -1,   3,   7,  11,  15,  19,  23,  27,  31],\n","       [ -9,  -5,  -1,   3,   7,  11,  15,  19,  23,  27],\n","       [-14, -10,  -6,  -2,   2,   6,  10,  14,  18,  22],\n","       [-18, -14, -10,  -6,  -2,   2,   6,  10,  14,  18],\n","       [-23, -19, -15, -11,  -7,  -3,   1,   5,   9,  13],\n","       [-28, -24, -20, -16, -12,  -8,  -4,   0,   4,   8],\n","       [-32, -28, -24, -20, -16, -12,  -8,  -4,   0,   4],\n","       [-37, -33, -29, -25, -21, -17, -13,  -9,  -5,  -1],\n","       [-41, -37, -33, -29, -25, -21, -17, -13,  -9,  -5]], dtype=int32)>"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["tf.constant(y_pred), y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XIQxsqHAUZWr","executionInfo":{"status":"ok","timestamp":1663809120810,"user_tz":420,"elapsed":171,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"6fadc2b4-0432-4424-9164-f505650755b9"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(10, 1), dtype=float32, numpy=\n"," array([[ 70.55218 ],\n","        [ 75.13991 ],\n","        [ 79.72763 ],\n","        [ 84.31535 ],\n","        [ 88.903076],\n","        [ 93.49081 ],\n","        [ 98.07853 ],\n","        [102.66625 ],\n","        [107.253975],\n","        [111.8417  ]], dtype=float32)>,\n"," <tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pNZsuYZXUvOe","executionInfo":{"status":"ok","timestamp":1663809120811,"user_tz":420,"elapsed":17,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"68140b40-8c5b-4221-bf58-6ed59367fd64"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["y_pred = tf.squeeze(y_pred)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"es7TfsiMVDG-","executionInfo":{"status":"ok","timestamp":1663809120811,"user_tz":420,"elapsed":15,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"80ea7132-874c-470e-a74f-797eb5054fc7"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10,), dtype=float32, numpy=\n","array([ 70.55218 ,  75.13991 ,  79.72763 ,  84.31535 ,  88.903076,\n","        93.49081 ,  98.07853 , 102.66625 , 107.253975, 111.8417  ],\n","      dtype=float32)>"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":[],"metadata":{"id":"DK_URxuDVNJd","executionInfo":{"status":"ok","timestamp":1663809120811,"user_tz":420,"elapsed":12,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["# Calculate the mean absolute error\n","mae = tf.metrics.mean_absolute_error(\n","    y_true=y_test, \n","    y_pred=y_pred\n",")\n","mae"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B2Ir_OxlVFUb","executionInfo":{"status":"ok","timestamp":1663809120811,"user_tz":420,"elapsed":12,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"5f1db948-f599-434d-ca98-58eb3e36b0da"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=float32, numpy=3.1969407>"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["# Mean square error\n","mse = tf.metrics.mean_squared_error(\n","    y_true=y_test,\n","    y_pred=y_pred\n",")\n","mse"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ODqtYl1tVSqP","executionInfo":{"status":"ok","timestamp":1663809120812,"user_tz":420,"elapsed":11,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"d9de757b-c951-48a5-fdc1-6b6aa92d2f9b"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=float32, numpy=13.070143>"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["# Make some functions to reuse to MAE and MSE\n","def mAe(y_true, y_pred):\n","    return tf.metrics.mean_absolute_error(\n","        y_true=y_true, \n","        y_pred=tf.squeeze(y_pred)\n","    )\n","\n","def mSe(y_true, y_pred): # \"mse\" causes errors (there seems to be a naming conflict...)\n","    return tf.metrics.mean_squared_error(\n","        y_true=y_true, \n","        y_pred=tf.squeeze(y_pred)\n","    )"],"metadata":{"id":"lcwljUJdVkfG","executionInfo":{"status":"ok","timestamp":1663809120812,"user_tz":420,"elapsed":8,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":57,"outputs":[]},{"cell_type":"markdown","source":["### Running experiments to improve our model\n","\n","```\n","Build a model -> fit it -> evaluate it -> tweak it -> fit it -> evaluate it -> tweak it -> fit it -> evaluate it ... \n","```\n","\n","1. Get more data - get more examples for your model to train on (more opportunities to learn patterns or relationships between features and labels).\n","2. Make your model larger (using a more complex model) - this might come in the form of more layers or more hidden units in each layer.\n","3. Train for longer - give your model more of a chance to find patterns in the data.\n","\n","Let's do 3 modeling experiments:\n","\n","1. `model_1` - same as the original model,, 1 layer, trained for 100 epochs.\n","2. `model_2` - 2 layers, trained for 100 epochs\n","3. `model_3` - 2 layers, trained for 500 epochs\n","4. \n","5."],"metadata":{"id":"72PYtwWQWJ9D"}},{"cell_type":"code","source":["X_train, y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5OHQiWZAWmmt","executionInfo":{"status":"ok","timestamp":1663809120812,"user_tz":420,"elapsed":8,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"7c4ba17f-a5c4-4b13-b8a1-75f8d4e0e5ed"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(40,), dtype=int32, numpy=\n"," array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n","         -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n","         -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n","          32,   36,   40,   44,   48,   52,   56], dtype=int32)>,\n"," <tf.Tensor: shape=(40,), dtype=int32, numpy=\n"," array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n","        -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n","         14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n","         66], dtype=int32)>)"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["**Build**  `model_1`"],"metadata":{"id":"rpj7kuKeXvYr"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create the model\n","model_1 = tf.keras.Sequential(\n","    tf.keras.layers.Dense(1)\n",")\n","\n","# 2. Compile the model\n","model_1.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n","\n","# Fit the model\n","model_1.fit(tf.expand_dims(X_train, axis=-1), y_train, epochs=100)  # different syntax for versions previous to 2.70"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QJpVuXviX_2a","executionInfo":{"status":"ok","timestamp":1663809123272,"user_tz":420,"elapsed":2466,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"52ca69c0-ac65-468b-9408-35a6b3f7ac5d"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","2/2 [==============================] - 0s 8ms/step - loss: 15.9024 - mae: 15.9024\n","Epoch 2/100\n","2/2 [==============================] - 0s 8ms/step - loss: 11.2837 - mae: 11.2837\n","Epoch 3/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.1074 - mae: 11.1074\n","Epoch 4/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2991 - mae: 9.2991\n","Epoch 5/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.1677 - mae: 10.1677\n","Epoch 6/100\n","2/2 [==============================] - 0s 8ms/step - loss: 9.4303 - mae: 9.4303\n","Epoch 7/100\n","2/2 [==============================] - 0s 15ms/step - loss: 8.5704 - mae: 8.5704\n","Epoch 8/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.0442 - mae: 9.0442\n","Epoch 9/100\n","2/2 [==============================] - 0s 5ms/step - loss: 18.7517 - mae: 18.7517\n","Epoch 10/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.1142 - mae: 10.1142\n","Epoch 11/100\n","2/2 [==============================] - 0s 4ms/step - loss: 8.3980 - mae: 8.3980\n","Epoch 12/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6639 - mae: 10.6639\n","Epoch 13/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.7977 - mae: 9.7977\n","Epoch 14/100\n","2/2 [==============================] - 0s 5ms/step - loss: 16.0103 - mae: 16.0103\n","Epoch 15/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.4068 - mae: 11.4068\n","Epoch 16/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5393 - mae: 8.5393\n","Epoch 17/100\n","2/2 [==============================] - 0s 5ms/step - loss: 13.6348 - mae: 13.6348\n","Epoch 18/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.4629 - mae: 11.4629\n","Epoch 19/100\n","2/2 [==============================] - 0s 7ms/step - loss: 17.9148 - mae: 17.9148\n","Epoch 20/100\n","2/2 [==============================] - 0s 11ms/step - loss: 15.0494 - mae: 15.0494\n","Epoch 21/100\n","2/2 [==============================] - 0s 8ms/step - loss: 11.0216 - mae: 11.0216\n","Epoch 22/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.1558 - mae: 8.1558\n","Epoch 23/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5138 - mae: 9.5138\n","Epoch 24/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.6617 - mae: 7.6617\n","Epoch 25/100\n","2/2 [==============================] - 0s 6ms/step - loss: 13.1859 - mae: 13.1859\n","Epoch 26/100\n","2/2 [==============================] - 0s 10ms/step - loss: 16.4211 - mae: 16.4211\n","Epoch 27/100\n","2/2 [==============================] - 0s 10ms/step - loss: 13.1660 - mae: 13.1660\n","Epoch 28/100\n","2/2 [==============================] - 0s 18ms/step - loss: 14.2559 - mae: 14.2559\n","Epoch 29/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.0670 - mae: 10.0670\n","Epoch 30/100\n","2/2 [==============================] - 0s 7ms/step - loss: 16.3409 - mae: 16.3409\n","Epoch 31/100\n","2/2 [==============================] - 0s 5ms/step - loss: 23.6444 - mae: 23.6444\n","Epoch 32/100\n","2/2 [==============================] - 0s 7ms/step - loss: 7.6215 - mae: 7.6215\n","Epoch 33/100\n","2/2 [==============================] - 0s 16ms/step - loss: 9.3221 - mae: 9.3221\n","Epoch 34/100\n","2/2 [==============================] - 0s 4ms/step - loss: 13.7313 - mae: 13.7313\n","Epoch 35/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.1276 - mae: 11.1276\n","Epoch 36/100\n","2/2 [==============================] - 0s 5ms/step - loss: 13.3222 - mae: 13.3222\n","Epoch 37/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.4763 - mae: 9.4763\n","Epoch 38/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.1381 - mae: 10.1381\n","Epoch 39/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.1793 - mae: 10.1793\n","Epoch 40/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.9137 - mae: 10.9137\n","Epoch 41/100\n","2/2 [==============================] - 0s 12ms/step - loss: 7.9063 - mae: 7.9063\n","Epoch 42/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.0914 - mae: 10.0914\n","Epoch 43/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7006 - mae: 8.7006\n","Epoch 44/100\n","2/2 [==============================] - 0s 5ms/step - loss: 12.2047 - mae: 12.2047\n","Epoch 45/100\n","2/2 [==============================] - 0s 8ms/step - loss: 13.7970 - mae: 13.7970\n","Epoch 46/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.4687 - mae: 8.4687\n","Epoch 47/100\n","2/2 [==============================] - 0s 4ms/step - loss: 9.1330 - mae: 9.1330\n","Epoch 48/100\n","2/2 [==============================] - 0s 4ms/step - loss: 10.6190 - mae: 10.6190\n","Epoch 49/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.7503 - mae: 7.7503\n","Epoch 50/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5407 - mae: 9.5407\n","Epoch 51/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.1584 - mae: 9.1584\n","Epoch 52/100\n","2/2 [==============================] - 0s 4ms/step - loss: 16.3630 - mae: 16.3630\n","Epoch 53/100\n","2/2 [==============================] - 0s 5ms/step - loss: 14.1299 - mae: 14.1299\n","Epoch 54/100\n","2/2 [==============================] - 0s 5ms/step - loss: 21.1247 - mae: 21.1247\n","Epoch 55/100\n","2/2 [==============================] - 0s 5ms/step - loss: 16.3961 - mae: 16.3961\n","Epoch 56/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.9806 - mae: 9.9806\n","Epoch 57/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.9606 - mae: 9.9606\n","Epoch 58/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2209 - mae: 9.2209\n","Epoch 59/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.4239 - mae: 8.4239\n","Epoch 60/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.4869 - mae: 9.4869\n","Epoch 61/100\n","2/2 [==============================] - 0s 7ms/step - loss: 11.4355 - mae: 11.4355\n","Epoch 62/100\n","2/2 [==============================] - 0s 10ms/step - loss: 11.6887 - mae: 11.6887\n","Epoch 63/100\n","2/2 [==============================] - 0s 11ms/step - loss: 7.0838 - mae: 7.0838\n","Epoch 64/100\n","2/2 [==============================] - 0s 6ms/step - loss: 16.9675 - mae: 16.9675\n","Epoch 65/100\n","2/2 [==============================] - 0s 10ms/step - loss: 12.4599 - mae: 12.4599\n","Epoch 66/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.0184 - mae: 13.0184\n","Epoch 67/100\n","2/2 [==============================] - 0s 11ms/step - loss: 8.0600 - mae: 8.0600\n","Epoch 68/100\n","2/2 [==============================] - 0s 12ms/step - loss: 10.1888 - mae: 10.1888\n","Epoch 69/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.3633 - mae: 12.3633\n","Epoch 70/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.0516 - mae: 9.0516\n","Epoch 71/100\n","2/2 [==============================] - 0s 7ms/step - loss: 10.0378 - mae: 10.0378\n","Epoch 72/100\n","2/2 [==============================] - 0s 10ms/step - loss: 10.0516 - mae: 10.0516\n","Epoch 73/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6151 - mae: 12.6151\n","Epoch 74/100\n","2/2 [==============================] - 0s 9ms/step - loss: 10.3819 - mae: 10.3819\n","Epoch 75/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.7229 - mae: 9.7229\n","Epoch 76/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.2252 - mae: 11.2252\n","Epoch 77/100\n","2/2 [==============================] - 0s 7ms/step - loss: 8.3642 - mae: 8.3642\n","Epoch 78/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.1274 - mae: 9.1274\n","Epoch 79/100\n","2/2 [==============================] - 0s 13ms/step - loss: 19.5039 - mae: 19.5039\n","Epoch 80/100\n","2/2 [==============================] - 0s 8ms/step - loss: 14.8945 - mae: 14.8945\n","Epoch 81/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.0034 - mae: 9.0034\n","Epoch 82/100\n","2/2 [==============================] - 0s 7ms/step - loss: 13.0206 - mae: 13.0206\n","Epoch 83/100\n","2/2 [==============================] - 0s 10ms/step - loss: 7.9299 - mae: 7.9299\n","Epoch 84/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.6872 - mae: 7.6872\n","Epoch 85/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.0328 - mae: 10.0328\n","Epoch 86/100\n","2/2 [==============================] - 0s 7ms/step - loss: 9.2433 - mae: 9.2433\n","Epoch 87/100\n","2/2 [==============================] - 0s 8ms/step - loss: 12.0209 - mae: 12.0209\n","Epoch 88/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6389 - mae: 10.6389\n","Epoch 89/100\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2667 - mae: 7.2667\n","Epoch 90/100\n","2/2 [==============================] - 0s 5ms/step - loss: 12.7786 - mae: 12.7786\n","Epoch 91/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.3481 - mae: 7.3481\n","Epoch 92/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7175 - mae: 7.7175\n","Epoch 93/100\n","2/2 [==============================] - 0s 5ms/step - loss: 7.1263 - mae: 7.1263\n","Epoch 94/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6190 - mae: 12.6190\n","Epoch 95/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.0912 - mae: 10.0912\n","Epoch 96/100\n","2/2 [==============================] - 0s 10ms/step - loss: 9.3558 - mae: 9.3558\n","Epoch 97/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.6834 - mae: 12.6834\n","Epoch 98/100\n","2/2 [==============================] - 0s 8ms/step - loss: 8.6762 - mae: 8.6762\n","Epoch 99/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.4693 - mae: 9.4693\n","Epoch 100/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7067 - mae: 8.7067\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7e5c8850>"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["# Make and plot predictions for model_l\n","y_preds_1 = model_1.predict(X_test)\n","plot_predictions(\n","    predictions=y_preds_1\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":465},"id":"M5LLfgqpYs5w","executionInfo":{"status":"ok","timestamp":1663809123847,"user_tz":420,"elapsed":578,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"52f527f3-9919-49f1-a124-24f6a4f8eed8"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7fcc7e34b5f0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Calculate model_1 evaluation metrics\n","\n","mAe_1 = mAe(y_test, y_preds_1)\n","mSe_1 = mSe(y_test, y_preds_1)\n","\n","mAe_1, mSe_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uKOyiMvpZQho","executionInfo":{"status":"ok","timestamp":1663809123847,"user_tz":420,"elapsed":5,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"ed98c333-9ffb-4fbe-bbfa-d98239cbc3c1"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=18.745327>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=353.57336>)"]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["**Build**  `model_2`\n","\n","* 2 dense layers, trained for 100 epochs"],"metadata":{"id":"yMKXk9B-bufr"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create the model\n","model_2 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","model_2.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mse\"]\n",")\n","\n","# 3. Fit the model\n","model_2.fit(tf.expand_dims(X_train, axis=-1), y_train, epochs=100)  # different syntax for versions previous to 2.70"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jHCTCAvpbebB","executionInfo":{"status":"ok","timestamp":1663809126818,"user_tz":420,"elapsed":2974,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"089aef43-f902-47eb-d308-eed28744fd83"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","2/2 [==============================] - 0s 7ms/step - loss: 27.4058 - mse: 1084.1482\n","Epoch 2/100\n","2/2 [==============================] - 0s 4ms/step - loss: 24.6339 - mse: 777.9203\n","Epoch 3/100\n","2/2 [==============================] - 0s 8ms/step - loss: 29.8935 - mse: 1334.8955\n","Epoch 4/100\n","2/2 [==============================] - 0s 8ms/step - loss: 27.4055 - mse: 1106.8035\n","Epoch 5/100\n","2/2 [==============================] - 0s 10ms/step - loss: 14.9463 - mse: 281.1077\n","Epoch 6/100\n","2/2 [==============================] - 0s 4ms/step - loss: 11.8819 - mse: 168.6621\n","Epoch 7/100\n","2/2 [==============================] - 0s 10ms/step - loss: 11.1988 - mse: 151.3509\n","Epoch 8/100\n","2/2 [==============================] - 0s 4ms/step - loss: 11.0910 - mse: 160.3745\n","Epoch 9/100\n","2/2 [==============================] - 0s 5ms/step - loss: 40.4763 - mse: 2586.0090\n","Epoch 10/100\n","2/2 [==============================] - 0s 7ms/step - loss: 27.8688 - mse: 1094.4382\n","Epoch 11/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.2473 - mse: 147.9359\n","Epoch 12/100\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2803 - mse: 890.3867\n","Epoch 13/100\n","2/2 [==============================] - 0s 5ms/step - loss: 16.9897 - mse: 399.9678\n","Epoch 14/100\n","2/2 [==============================] - 0s 8ms/step - loss: 25.9217 - mse: 1049.5515\n","Epoch 15/100\n","2/2 [==============================] - 0s 5ms/step - loss: 17.9948 - mse: 450.2580\n","Epoch 16/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.3510 - mse: 80.6206\n","Epoch 17/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.8636 - mse: 174.7868\n","Epoch 18/100\n","2/2 [==============================] - 0s 6ms/step - loss: 19.5304 - mse: 565.8053\n","Epoch 19/100\n","2/2 [==============================] - 0s 8ms/step - loss: 10.3469 - mse: 167.7749\n","Epoch 20/100\n","2/2 [==============================] - 0s 6ms/step - loss: 17.6985 - mse: 455.7096\n","Epoch 21/100\n","2/2 [==============================] - 0s 7ms/step - loss: 15.8984 - mse: 347.1929\n","Epoch 22/100\n","2/2 [==============================] - 0s 6ms/step - loss: 14.1991 - mse: 285.1767\n","Epoch 23/100\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7720 - mse: 91.7852\n","Epoch 24/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0570 - mse: 153.7430\n","Epoch 25/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6838 - mse: 233.2949\n","Epoch 26/100\n","2/2 [==============================] - 0s 6ms/step - loss: 26.1877 - mse: 1024.6091\n","Epoch 27/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.7432 - mse: 194.8454\n","Epoch 28/100\n","2/2 [==============================] - 0s 6ms/step - loss: 22.8730 - mse: 835.6074\n","Epoch 29/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.2459 - mse: 96.7786\n","Epoch 30/100\n","2/2 [==============================] - 0s 6ms/step - loss: 29.2641 - mse: 1535.1349\n","Epoch 31/100\n","2/2 [==============================] - 0s 5ms/step - loss: 53.0225 - mse: 5030.2988\n","Epoch 32/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.9951 - mse: 211.7025\n","Epoch 33/100\n","2/2 [==============================] - 0s 6ms/step - loss: 15.6357 - mse: 337.3666\n","Epoch 34/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.6925 - mse: 214.4823\n","Epoch 35/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.2398 - mse: 92.9126\n","Epoch 36/100\n","2/2 [==============================] - 0s 5ms/step - loss: 16.6497 - mse: 403.6573\n","Epoch 37/100\n","2/2 [==============================] - 0s 5ms/step - loss: 11.0382 - mse: 192.3919\n","Epoch 38/100\n","2/2 [==============================] - 0s 6ms/step - loss: 18.1634 - mse: 433.6717\n","Epoch 39/100\n","2/2 [==============================] - 0s 6ms/step - loss: 19.1013 - mse: 529.6439\n","Epoch 40/100\n","2/2 [==============================] - 0s 5ms/step - loss: 20.4324 - mse: 610.1324\n","Epoch 41/100\n","2/2 [==============================] - 0s 6ms/step - loss: 14.9102 - mse: 279.6183\n","Epoch 42/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.2809 - mse: 186.6180\n","Epoch 43/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.7333 - mse: 167.0952\n","Epoch 44/100\n","2/2 [==============================] - 0s 7ms/step - loss: 23.0260 - mse: 830.4244\n","Epoch 45/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.3897 - mse: 128.9549\n","Epoch 46/100\n","2/2 [==============================] - 0s 9ms/step - loss: 11.7904 - mse: 181.9212\n","Epoch 47/100\n","2/2 [==============================] - 0s 9ms/step - loss: 9.6438 - mse: 153.8708\n","Epoch 48/100\n","2/2 [==============================] - 0s 11ms/step - loss: 17.2335 - mse: 402.8494\n","Epoch 49/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.5729 - mse: 99.8337\n","Epoch 50/100\n","2/2 [==============================] - 0s 5ms/step - loss: 13.8185 - mse: 260.3670\n","Epoch 51/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.5958 - mse: 154.7956\n","Epoch 52/100\n","2/2 [==============================] - 0s 11ms/step - loss: 30.5538 - mse: 1613.0886\n","Epoch 53/100\n","2/2 [==============================] - 0s 5ms/step - loss: 14.3541 - mse: 302.5293\n","Epoch 54/100\n","2/2 [==============================] - 0s 6ms/step - loss: 23.9713 - mse: 859.3983\n","Epoch 55/100\n","2/2 [==============================] - 0s 10ms/step - loss: 23.1938 - mse: 805.5452\n","Epoch 56/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.8837 - mse: 170.9834\n","Epoch 57/100\n","2/2 [==============================] - 0s 10ms/step - loss: 12.7445 - mse: 198.7015\n","Epoch 58/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5995 - mse: 102.5890\n","Epoch 59/100\n","2/2 [==============================] - 0s 13ms/step - loss: 12.5172 - mse: 216.3367\n","Epoch 60/100\n","2/2 [==============================] - 0s 5ms/step - loss: 12.3200 - mse: 208.6371\n","Epoch 61/100\n","2/2 [==============================] - 0s 5ms/step - loss: 17.4604 - mse: 428.6393\n","Epoch 62/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6052 - mse: 136.9777\n","Epoch 63/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.4893 - mse: 152.4555\n","Epoch 64/100\n","2/2 [==============================] - 0s 6ms/step - loss: 24.8450 - mse: 911.7511\n","Epoch 65/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6761 - mse: 142.7374\n","Epoch 66/100\n","2/2 [==============================] - 0s 5ms/step - loss: 21.7809 - mse: 704.4492\n","Epoch 67/100\n","2/2 [==============================] - 0s 6ms/step - loss: 10.7136 - mse: 136.0194\n","Epoch 68/100\n","2/2 [==============================] - 0s 10ms/step - loss: 10.6397 - mse: 149.2300\n","Epoch 69/100\n","2/2 [==============================] - 0s 7ms/step - loss: 22.6914 - mse: 742.1761\n","Epoch 70/100\n","2/2 [==============================] - 0s 14ms/step - loss: 9.3316 - mse: 166.1628\n","Epoch 71/100\n","2/2 [==============================] - 0s 6ms/step - loss: 15.4355 - mse: 323.0843\n","Epoch 72/100\n","2/2 [==============================] - 0s 8ms/step - loss: 6.7437 - mse: 67.0210\n","Epoch 73/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.6891 - mse: 183.7296\n","Epoch 74/100\n","2/2 [==============================] - 0s 6ms/step - loss: 24.0400 - mse: 908.8992\n","Epoch 75/100\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5896 - mse: 149.3948\n","Epoch 76/100\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4371 - mse: 188.3310\n","Epoch 77/100\n","2/2 [==============================] - 0s 10ms/step - loss: 16.6489 - mse: 429.2708\n","Epoch 78/100\n","2/2 [==============================] - 0s 6ms/step - loss: 9.0614 - mse: 95.4870\n","Epoch 79/100\n","2/2 [==============================] - 0s 10ms/step - loss: 23.9675 - mse: 864.0864\n","Epoch 80/100\n","2/2 [==============================] - 0s 7ms/step - loss: 26.7463 - mse: 1104.4032\n","Epoch 81/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.6714 - mse: 170.7055\n","Epoch 82/100\n","2/2 [==============================] - 0s 6ms/step - loss: 12.0228 - mse: 211.9191\n","Epoch 83/100\n","2/2 [==============================] - 0s 6ms/step - loss: 17.4218 - mse: 395.5589\n","Epoch 84/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.2629 - mse: 73.0935\n","Epoch 85/100\n","2/2 [==============================] - 0s 7ms/step - loss: 14.9650 - mse: 312.8361\n","Epoch 86/100\n","2/2 [==============================] - 0s 10ms/step - loss: 15.2862 - mse: 315.3605\n","Epoch 87/100\n","2/2 [==============================] - 0s 5ms/step - loss: 19.1086 - mse: 521.2534\n","Epoch 88/100\n","2/2 [==============================] - 0s 5ms/step - loss: 29.8229 - mse: 1287.1907\n","Epoch 89/100\n","2/2 [==============================] - 0s 5ms/step - loss: 10.1742 - mse: 124.1342\n","Epoch 90/100\n","2/2 [==============================] - 0s 6ms/step - loss: 21.5240 - mse: 663.8611\n","Epoch 91/100\n","2/2 [==============================] - 0s 13ms/step - loss: 10.5716 - mse: 161.7467\n","Epoch 92/100\n","2/2 [==============================] - 0s 6ms/step - loss: 18.3977 - mse: 464.1326\n","Epoch 93/100\n","2/2 [==============================] - 0s 6ms/step - loss: 7.4138 - mse: 81.9820\n","Epoch 94/100\n","2/2 [==============================] - 0s 10ms/step - loss: 17.7380 - mse: 445.7379\n","Epoch 95/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.1144 - mse: 164.0820\n","Epoch 96/100\n","2/2 [==============================] - 0s 5ms/step - loss: 19.4346 - mse: 510.5842\n","Epoch 97/100\n","2/2 [==============================] - 0s 5ms/step - loss: 12.1593 - mse: 209.9755\n","Epoch 98/100\n","2/2 [==============================] - 0s 6ms/step - loss: 11.5653 - mse: 169.4052\n","Epoch 99/100\n","2/2 [==============================] - 0s 6ms/step - loss: 13.8827 - mse: 265.4630\n","Epoch 100/100\n","2/2 [==============================] - 0s 5ms/step - loss: 20.2277 - mse: 608.8218\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7e17f7d0>"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# Make and plot predictions of model_2\n","y_preds_2 = model_2.predict(X_test)\n","plot_predictions(\n","    predictions=y_preds_2\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"VL7j0Aaha994","executionInfo":{"status":"ok","timestamp":1663809127465,"user_tz":420,"elapsed":649,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"be4b5a5e-19ce-4ca1-f492-909727417126"},"execution_count":63,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"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GjdunL761a9qypQpqq+v1/z583XXXXe1tt7PmzdPd9xxhySprq5Oxx9/vMaMGaPzzjtPn3zySetzzpkzRxMmTNBRRx3V2pa/Zs0aTZgwQeXl5RozZow2bNiQ1fcFAABJaXu40o2HcZq/XMrKPl7uPr2Dm6akua9Lmp2N181YhtuVu2vnzp367W9/qzPOSDRqvPnmm1q9erWGDRum6upqDRo0SG+88Ya++OILnXTSSfrmN7+pt956S+vXr9fatWu1ZcsWjR49Wpdffnmb521sbNSVV16pJUuWaNiwYfr444918MEHa9asWRowYIBuvPFGSdIrr7zS+phLL71U9957r0455RTdeuutuu2223T33Xe3znP58uVauHChbrvtNi1atEjz58/Xddddp8rKSm3fvl27du3q8fsBAMBeMuznqppS1WYfLyn/KyK6IhbnauzKeZ+64i9/+YvKy8tVUVGhkpISffe735UkTZgwQcOGDZMkvfTSS3r88cdVXl6uiRMnauvWrdqwYYOWLFmi6dOnq6ioSEceeaS+8Y1v7PX8r7/+uk4++eTW5zr44IM7nU9TU5P+9Kc/6ZRTTpEkzZgxQ0uWLGm9/fzzz5ckjR8/XvX19ZKkE044Qf/8z/+sn/zkJ2poaND+++/fo/cEAIC0MuznKsSKiK6IxymDMtyu3FUt+3i1d8ABB7Rednfde++9Ov3009vcZ+HChT167e7o27evpMRBAS37n/31X/+1Jk6cqBdeeEFnnnmmHnzwwbQhEACAnqoZI829XtrYJJUMkqrGSOniVBRO89eReKx4ZbhdOQinn366HnjgAe3YsUOS9Mc//lF//vOfdfLJJ2vBggXatWuXNm/erNdee22vxx5//PFasmSJ3n//fUnSxx8nOmoHDhyozz77bK/7Dxo0SAcddFDr/lu/+MUvWle/OvLee+9p+PDhuvbaa3Xuuedq5cqVPfp5AQAxlMF+1C01EQ1NDXJ5a01EZx1dURSPFa8unPcp26644grV19dr3LhxcncVFxfr17/+tc477zy9+uqrGj16tEpKSnTCCSfs9dji4mJVV1fr/PPP1+7du3XooYfq5Zdf1tlnn63vfOc7evbZZ3Xvvfe2ecxjjz2mWbNmqbm5WcOHD9e//du/dTq/J598Ur/4xS/Up08fHX744brllluy+vMDACIuw/2oO6uJiOrq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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Calculate model_2 evaluation metrics\n","mAe_2 = mAe(y_test, y_preds_2)\n","mSe_2 = mSe(y_test, y_preds_2)\n","\n","mAe_2, mSe_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z8Kqt6tqdugI","executionInfo":{"status":"ok","timestamp":1663809127467,"user_tz":420,"elapsed":20,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"f8337db4-872d-444d-ef92-237a981ec54b"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=3.1969407>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=13.070143>)"]},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["**Build**  `model_3`\n","\n","* 2 dense layers, trained for 500 epochs"],"metadata":{"id":"AQrwiPo6eJ-d"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create the model\n","model_3 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","model_3.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n","\n","# Fit the model\n","model_3.fit(tf.expand_dims(X_train, axis=-1), y_train, epochs=500)  # different syntax for versions previous to 2.70"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pG-VOCObeFzC","executionInfo":{"status":"ok","timestamp":1663809143425,"user_tz":420,"elapsed":15973,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"6505a059-4cd5-4bb8-cc95-8b915017a88a"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","2/2 [==============================] - 0s 15ms/step - loss: 27.4058 - mae: 27.4058\n","Epoch 2/500\n","2/2 [==============================] - 0s 8ms/step - loss: 24.6339 - mae: 24.6339\n","Epoch 3/500\n","2/2 [==============================] - 0s 7ms/step - loss: 29.8935 - mae: 29.8935\n","Epoch 4/500\n","2/2 [==============================] - 0s 7ms/step - loss: 27.4055 - mae: 27.4055\n","Epoch 5/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.9463 - mae: 14.9463\n","Epoch 6/500\n","2/2 [==============================] - 0s 8ms/step - loss: 11.8819 - mae: 11.8819\n","Epoch 7/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.1988 - mae: 11.1988\n","Epoch 8/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.0910 - mae: 11.0910\n","Epoch 9/500\n","2/2 [==============================] - 0s 7ms/step - loss: 40.4763 - mae: 40.4763\n","Epoch 10/500\n","2/2 [==============================] - 0s 9ms/step - loss: 27.8688 - mae: 27.8688\n","Epoch 11/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.2473 - mae: 10.2473\n","Epoch 12/500\n","2/2 [==============================] - 0s 12ms/step - loss: 25.2803 - mae: 25.2803\n","Epoch 13/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.9897 - mae: 16.9897\n","Epoch 14/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.9217 - mae: 25.9217\n","Epoch 15/500\n","2/2 [==============================] - 0s 10ms/step - loss: 17.9948 - mae: 17.9948\n","Epoch 16/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.3510 - mae: 7.3510\n","Epoch 17/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.8636 - mae: 10.8636\n","Epoch 18/500\n","2/2 [==============================] - 0s 4ms/step - loss: 19.5304 - mae: 19.5304\n","Epoch 19/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.3469 - mae: 10.3469\n","Epoch 20/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.6985 - mae: 17.6985\n","Epoch 21/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.8984 - mae: 15.8984\n","Epoch 22/500\n","2/2 [==============================] - 0s 5ms/step - loss: 14.1991 - mae: 14.1991\n","Epoch 23/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.7720 - mae: 8.7720\n","Epoch 24/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.0570 - mae: 11.0570\n","Epoch 25/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.6838 - mae: 12.6838\n","Epoch 26/500\n","2/2 [==============================] - 0s 7ms/step - loss: 26.1877 - mae: 26.1877\n","Epoch 27/500\n","2/2 [==============================] - 0s 9ms/step - loss: 11.7432 - mae: 11.7432\n","Epoch 28/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.8730 - mae: 22.8730\n","Epoch 29/500\n","2/2 [==============================] - 0s 9ms/step - loss: 9.2459 - mae: 9.2459\n","Epoch 30/500\n","2/2 [==============================] - 0s 6ms/step - loss: 29.2641 - mae: 29.2641\n","Epoch 31/500\n","2/2 [==============================] - 0s 10ms/step - loss: 53.0225 - mae: 53.0225\n","Epoch 32/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.9951 - mae: 11.9951\n","Epoch 33/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.6357 - mae: 15.6357\n","Epoch 34/500\n","2/2 [==============================] - 0s 5ms/step - loss: 12.6925 - mae: 12.6925\n","Epoch 35/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2398 - mae: 9.2398\n","Epoch 36/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.6497 - mae: 16.6497\n","Epoch 37/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0382 - mae: 11.0382\n","Epoch 38/500\n","2/2 [==============================] - 0s 9ms/step - loss: 18.1634 - mae: 18.1634\n","Epoch 39/500\n","2/2 [==============================] - 0s 8ms/step - loss: 19.1013 - mae: 19.1013\n","Epoch 40/500\n","2/2 [==============================] - 0s 5ms/step - loss: 20.4324 - mae: 20.4324\n","Epoch 41/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.9102 - mae: 14.9102\n","Epoch 42/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.2809 - mae: 12.2809\n","Epoch 43/500\n","2/2 [==============================] - 0s 10ms/step - loss: 10.7333 - mae: 10.7333\n","Epoch 44/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.0260 - mae: 23.0260\n","Epoch 45/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.3897 - mae: 10.3897\n","Epoch 46/500\n","2/2 [==============================] - 0s 10ms/step - loss: 11.7904 - mae: 11.7904\n","Epoch 47/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.6438 - mae: 9.6438\n","Epoch 48/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.2335 - mae: 17.2335\n","Epoch 49/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.5729 - mae: 9.5729\n","Epoch 50/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.8185 - mae: 13.8185\n","Epoch 51/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.5958 - mae: 11.5958\n","Epoch 52/500\n","2/2 [==============================] - 0s 6ms/step - loss: 30.5538 - mae: 30.5538\n","Epoch 53/500\n","2/2 [==============================] - 0s 5ms/step - loss: 14.3541 - mae: 14.3541\n","Epoch 54/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.9713 - mae: 23.9713\n","Epoch 55/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.1938 - mae: 23.1938\n","Epoch 56/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.8837 - mae: 10.8837\n","Epoch 57/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7445 - mae: 12.7445\n","Epoch 58/500\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5995 - mae: 9.5995\n","Epoch 59/500\n","2/2 [==============================] - 0s 9ms/step - loss: 12.5172 - mae: 12.5172\n","Epoch 60/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.3200 - mae: 12.3200\n","Epoch 61/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.4604 - mae: 17.4604\n","Epoch 62/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.6052 - mae: 10.6052\n","Epoch 63/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.4893 - mae: 10.4893\n","Epoch 64/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.8450 - mae: 24.8450\n","Epoch 65/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6761 - mae: 10.6761\n","Epoch 66/500\n","2/2 [==============================] - 0s 5ms/step - loss: 21.7809 - mae: 21.7809\n","Epoch 67/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.7136 - mae: 10.7136\n","Epoch 68/500\n","2/2 [==============================] - 0s 11ms/step - loss: 10.6397 - mae: 10.6397\n","Epoch 69/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.6914 - mae: 22.6914\n","Epoch 70/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3316 - mae: 9.3316\n","Epoch 71/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.4355 - mae: 15.4355\n","Epoch 72/500\n","2/2 [==============================] - 0s 5ms/step - loss: 6.7437 - mae: 6.7437\n","Epoch 73/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.6891 - mae: 11.6891\n","Epoch 74/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.0400 - mae: 24.0400\n","Epoch 75/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5896 - mae: 9.5896\n","Epoch 76/500\n","2/2 [==============================] - 0s 5ms/step - loss: 12.4371 - mae: 12.4371\n","Epoch 77/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.6489 - mae: 16.6489\n","Epoch 78/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.0614 - mae: 9.0614\n","Epoch 79/500\n","2/2 [==============================] - 0s 5ms/step - loss: 23.9675 - mae: 23.9675\n","Epoch 80/500\n","2/2 [==============================] - 0s 6ms/step - loss: 26.7463 - mae: 26.7463\n","Epoch 81/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.6714 - mae: 11.6714\n","Epoch 82/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.0228 - mae: 12.0228\n","Epoch 83/500\n","2/2 [==============================] - 0s 15ms/step - loss: 17.4218 - mae: 17.4218\n","Epoch 84/500\n","2/2 [==============================] - 0s 8ms/step - loss: 7.2629 - mae: 7.2629\n","Epoch 85/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.9650 - mae: 14.9650\n","Epoch 86/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.2862 - mae: 15.2862\n","Epoch 87/500\n","2/2 [==============================] - 0s 5ms/step - loss: 19.1086 - mae: 19.1086\n","Epoch 88/500\n","2/2 [==============================] - 0s 11ms/step - loss: 29.8229 - mae: 29.8229\n","Epoch 89/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.1742 - mae: 10.1742\n","Epoch 90/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.5240 - mae: 21.5240\n","Epoch 91/500\n","2/2 [==============================] - 0s 7ms/step - loss: 10.5716 - mae: 10.5716\n","Epoch 92/500\n","2/2 [==============================] - 0s 16ms/step - loss: 18.3977 - mae: 18.3977\n","Epoch 93/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.4138 - mae: 7.4138\n","Epoch 94/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.7380 - mae: 17.7380\n","Epoch 95/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.1144 - mae: 11.1144\n","Epoch 96/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.4346 - mae: 19.4346\n","Epoch 97/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.1593 - mae: 12.1593\n","Epoch 98/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.5653 - mae: 11.5653\n","Epoch 99/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.8827 - mae: 13.8827\n","Epoch 100/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.2277 - mae: 20.2277\n","Epoch 101/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.4479 - mae: 11.4479\n","Epoch 102/500\n","2/2 [==============================] - 0s 11ms/step - loss: 17.4842 - mae: 17.4842\n","Epoch 103/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.0217 - mae: 7.0217\n","Epoch 104/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.5789 - mae: 23.5789\n","Epoch 105/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.8932 - mae: 16.8932\n","Epoch 106/500\n","2/2 [==============================] - 0s 5ms/step - loss: 9.2954 - mae: 9.2954\n","Epoch 107/500\n","2/2 [==============================] - 0s 9ms/step - loss: 25.3749 - mae: 25.3749\n","Epoch 108/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.4621 - mae: 13.4621\n","Epoch 109/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.5238 - mae: 9.5238\n","Epoch 110/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.6722 - mae: 9.6722\n","Epoch 111/500\n","2/2 [==============================] - 0s 5ms/step - loss: 14.5987 - mae: 14.5987\n","Epoch 112/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5670 - mae: 9.5670\n","Epoch 113/500\n","2/2 [==============================] - 0s 5ms/step - loss: 17.8092 - mae: 17.8092\n","Epoch 114/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.1782 - mae: 17.1782\n","Epoch 115/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.1182 - mae: 11.1182\n","Epoch 116/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.3071 - mae: 23.3071\n","Epoch 117/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.6144 - mae: 9.6144\n","Epoch 118/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.6899 - mae: 10.6899\n","Epoch 119/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.0355 - mae: 8.0355\n","Epoch 120/500\n","2/2 [==============================] - 0s 6ms/step - loss: 29.6859 - mae: 29.6859\n","Epoch 121/500\n","2/2 [==============================] - 0s 13ms/step - loss: 8.0714 - mae: 8.0714\n","Epoch 122/500\n","2/2 [==============================] - 0s 6ms/step - loss: 28.3086 - mae: 28.3086\n","Epoch 123/500\n","2/2 [==============================] - 0s 6ms/step - loss: 32.9014 - mae: 32.9014\n","Epoch 124/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.6291 - mae: 19.6291\n","Epoch 125/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.0095 - mae: 7.0095\n","Epoch 126/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.8056 - mae: 21.8056\n","Epoch 127/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.9812 - mae: 7.9812\n","Epoch 128/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.0585 - mae: 21.0585\n","Epoch 129/500\n","2/2 [==============================] - 0s 14ms/step - loss: 9.0107 - mae: 9.0107\n","Epoch 130/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.0502 - mae: 24.0502\n","Epoch 131/500\n","2/2 [==============================] - 0s 5ms/step - loss: 9.7537 - mae: 9.7537\n","Epoch 132/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.3052 - mae: 18.3052\n","Epoch 133/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.5833 - mae: 7.5833\n","Epoch 134/500\n","2/2 [==============================] - 0s 5ms/step - loss: 18.5755 - mae: 18.5755\n","Epoch 135/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.5360 - mae: 10.5360\n","Epoch 136/500\n","2/2 [==============================] - 0s 5ms/step - loss: 18.2694 - mae: 18.2694\n","Epoch 137/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.1658 - mae: 23.1658\n","Epoch 138/500\n","2/2 [==============================] - 0s 5ms/step - loss: 9.1362 - mae: 9.1362\n","Epoch 139/500\n","2/2 [==============================] - 0s 12ms/step - loss: 8.9181 - mae: 8.9181\n","Epoch 140/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.4732 - mae: 16.4732\n","Epoch 141/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.4208 - mae: 8.4208\n","Epoch 142/500\n","2/2 [==============================] - 0s 6ms/step - loss: 36.9540 - mae: 36.9540\n","Epoch 143/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.5820 - mae: 25.5820\n","Epoch 144/500\n","2/2 [==============================] - 0s 5ms/step - loss: 9.5392 - mae: 9.5392\n","Epoch 145/500\n","2/2 [==============================] - 0s 5ms/step - loss: 26.6058 - mae: 26.6058\n","Epoch 146/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.7248 - mae: 8.7248\n","Epoch 147/500\n","2/2 [==============================] - 0s 9ms/step - loss: 15.6172 - mae: 15.6172\n","Epoch 148/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.3065 - mae: 18.3065\n","Epoch 149/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.1994 - mae: 8.1994\n","Epoch 150/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.4964 - mae: 7.4964\n","Epoch 151/500\n","2/2 [==============================] - 0s 5ms/step - loss: 18.3374 - mae: 18.3374\n","Epoch 152/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.2895 - mae: 10.2895\n","Epoch 153/500\n","2/2 [==============================] - 0s 5ms/step - loss: 29.6425 - mae: 29.6425\n","Epoch 154/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5556 - mae: 10.5556\n","Epoch 155/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.4537 - mae: 15.4537\n","Epoch 156/500\n","2/2 [==============================] - 0s 10ms/step - loss: 17.0174 - mae: 17.0174\n","Epoch 157/500\n","2/2 [==============================] - 0s 6ms/step - loss: 32.8218 - mae: 32.8218\n","Epoch 158/500\n","2/2 [==============================] - 0s 13ms/step - loss: 10.7038 - mae: 10.7038\n","Epoch 159/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.9054 - mae: 8.9054\n","Epoch 160/500\n","2/2 [==============================] - 0s 5ms/step - loss: 22.1321 - mae: 22.1321\n","Epoch 161/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.7113 - mae: 11.7113\n","Epoch 162/500\n","2/2 [==============================] - 0s 9ms/step - loss: 21.5734 - mae: 21.5734\n","Epoch 163/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.2485 - mae: 19.2485\n","Epoch 164/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.0156 - mae: 11.0156\n","Epoch 165/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.6187 - mae: 9.6187\n","Epoch 166/500\n","2/2 [==============================] - 0s 5ms/step - loss: 21.5908 - mae: 21.5908\n","Epoch 167/500\n","2/2 [==============================] - 0s 6ms/step - loss: 26.2851 - mae: 26.2851\n","Epoch 168/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.8525 - mae: 9.8525\n","Epoch 169/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.5630 - mae: 22.5630\n","Epoch 170/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.1499 - mae: 10.1499\n","Epoch 171/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.0464 - mae: 18.0464\n","Epoch 172/500\n","2/2 [==============================] - 0s 6ms/step - loss: 28.8377 - mae: 28.8377\n","Epoch 173/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.5279 - mae: 16.5279\n","Epoch 174/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.2115 - mae: 11.2115\n","Epoch 175/500\n","2/2 [==============================] - 0s 5ms/step - loss: 27.5839 - mae: 27.5839\n","Epoch 176/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.2680 - mae: 8.2680\n","Epoch 177/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2580 - mae: 9.2580\n","Epoch 178/500\n","2/2 [==============================] - 0s 5ms/step - loss: 18.1440 - mae: 18.1440\n","Epoch 179/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5995 - mae: 10.5995\n","Epoch 180/500\n","2/2 [==============================] - 0s 8ms/step - loss: 7.8992 - mae: 7.8992\n","Epoch 181/500\n","2/2 [==============================] - 0s 14ms/step - loss: 17.4015 - mae: 17.4015\n","Epoch 182/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0089 - mae: 11.0089\n","Epoch 183/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.7027 - mae: 11.7027\n","Epoch 184/500\n","2/2 [==============================] - 0s 6ms/step - loss: 30.4062 - mae: 30.4062\n","Epoch 185/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.5557 - mae: 7.5557\n","Epoch 186/500\n","2/2 [==============================] - 0s 5ms/step - loss: 15.9905 - mae: 15.9905\n","Epoch 187/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.5579 - mae: 8.5579\n","Epoch 188/500\n","2/2 [==============================] - 0s 7ms/step - loss: 28.7339 - mae: 28.7339\n","Epoch 189/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.1689 - mae: 13.1689\n","Epoch 190/500\n","2/2 [==============================] - 0s 6ms/step - loss: 18.3101 - mae: 18.3101\n","Epoch 191/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.7376 - mae: 13.7376\n","Epoch 192/500\n","2/2 [==============================] - 0s 15ms/step - loss: 13.7104 - mae: 13.7104\n","Epoch 193/500\n","2/2 [==============================] - 0s 7ms/step - loss: 28.5842 - mae: 28.5842\n","Epoch 194/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.0707 - mae: 7.0707\n","Epoch 195/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.0550 - mae: 7.0550\n","Epoch 196/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.0067 - mae: 22.0067\n","Epoch 197/500\n","2/2 [==============================] - 0s 15ms/step - loss: 20.8443 - mae: 20.8443\n","Epoch 198/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.4713 - mae: 12.4713\n","Epoch 199/500\n","2/2 [==============================] - 0s 5ms/step - loss: 17.9099 - mae: 17.9099\n","Epoch 200/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.7494 - mae: 13.7494\n","Epoch 201/500\n","2/2 [==============================] - 0s 7ms/step - loss: 5.4687 - mae: 5.4687\n","Epoch 202/500\n","2/2 [==============================] - 0s 14ms/step - loss: 13.7006 - mae: 13.7006\n","Epoch 203/500\n","2/2 [==============================] - 0s 5ms/step - loss: 9.4142 - mae: 9.4142\n","Epoch 204/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.9796 - mae: 20.9796\n","Epoch 205/500\n","2/2 [==============================] - 0s 7ms/step - loss: 9.5470 - mae: 9.5470\n","Epoch 206/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.7256 - mae: 11.7256\n","Epoch 207/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.3772 - mae: 14.3772\n","Epoch 208/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.8579 - mae: 14.8579\n","Epoch 209/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.9706 - mae: 14.9706\n","Epoch 210/500\n","2/2 [==============================] - 0s 13ms/step - loss: 17.8998 - mae: 17.8998\n","Epoch 211/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.8327 - mae: 9.8327\n","Epoch 212/500\n","2/2 [==============================] - 0s 5ms/step - loss: 18.3352 - mae: 18.3352\n","Epoch 213/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.0383 - mae: 15.0383\n","Epoch 214/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.5874 - mae: 14.5874\n","Epoch 215/500\n","2/2 [==============================] - 0s 5ms/step - loss: 23.3015 - mae: 23.3015\n","Epoch 216/500\n","2/2 [==============================] - 0s 13ms/step - loss: 13.3613 - mae: 13.3613\n","Epoch 217/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.8517 - mae: 9.8517\n","Epoch 218/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.5451 - mae: 12.5451\n","Epoch 219/500\n","2/2 [==============================] - 0s 6ms/step - loss: 4.9472 - mae: 4.9472\n","Epoch 220/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.1130 - mae: 7.1130\n","Epoch 221/500\n","2/2 [==============================] - 0s 6ms/step - loss: 35.4567 - mae: 35.4567\n","Epoch 222/500\n","2/2 [==============================] - 0s 5ms/step - loss: 34.8634 - mae: 34.8634\n","Epoch 223/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.9846 - mae: 7.9846\n","Epoch 224/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.7004 - mae: 14.7004\n","Epoch 225/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.7196 - mae: 16.7196\n","Epoch 226/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.9329 - mae: 15.9329\n","Epoch 227/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.1644 - mae: 16.1644\n","Epoch 228/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.9324 - mae: 13.9324\n","Epoch 229/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.0504 - mae: 18.0504\n","Epoch 230/500\n","2/2 [==============================] - 0s 10ms/step - loss: 15.6120 - mae: 15.6120\n","Epoch 231/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.2041 - mae: 21.2041\n","Epoch 232/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2732 - mae: 25.2732\n","Epoch 233/500\n","2/2 [==============================] - 0s 10ms/step - loss: 16.3176 - mae: 16.3176\n","Epoch 234/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.2729 - mae: 7.2729\n","Epoch 235/500\n","2/2 [==============================] - 0s 8ms/step - loss: 16.9688 - mae: 16.9688\n","Epoch 236/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.1225 - mae: 7.1225\n","Epoch 237/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2058 - mae: 9.2058\n","Epoch 238/500\n","2/2 [==============================] - 0s 9ms/step - loss: 8.0961 - mae: 8.0961\n","Epoch 239/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.0538 - mae: 17.0538\n","Epoch 240/500\n","2/2 [==============================] - 0s 11ms/step - loss: 8.8627 - mae: 8.8627\n","Epoch 241/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.1711 - mae: 13.1711\n","Epoch 242/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7886 - mae: 8.7886\n","Epoch 243/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.8161 - mae: 18.8161\n","Epoch 244/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.0531 - mae: 14.0531\n","Epoch 245/500\n","2/2 [==============================] - 0s 11ms/step - loss: 14.6831 - mae: 14.6831\n","Epoch 246/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.8045 - mae: 15.8045\n","Epoch 247/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.6810 - mae: 17.6810\n","Epoch 248/500\n","2/2 [==============================] - 0s 8ms/step - loss: 13.2367 - mae: 13.2367\n","Epoch 249/500\n","2/2 [==============================] - 0s 9ms/step - loss: 14.5070 - mae: 14.5070\n","Epoch 250/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.2322 - mae: 23.2322\n","Epoch 251/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3009 - mae: 9.3009\n","Epoch 252/500\n","2/2 [==============================] - 0s 6ms/step - loss: 36.6569 - mae: 36.6569\n","Epoch 253/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.8205 - mae: 21.8205\n","Epoch 254/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.2792 - mae: 7.2792\n","Epoch 255/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.7127 - mae: 24.7127\n","Epoch 256/500\n","2/2 [==============================] - 0s 5ms/step - loss: 12.4220 - mae: 12.4220\n","Epoch 257/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5823 - mae: 10.5823\n","Epoch 258/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.4883 - mae: 14.4883\n","Epoch 259/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.6132 - mae: 8.6132\n","Epoch 260/500\n","2/2 [==============================] - 0s 5ms/step - loss: 43.0580 - mae: 43.0580\n","Epoch 261/500\n","2/2 [==============================] - 0s 7ms/step - loss: 18.4611 - mae: 18.4611\n","Epoch 262/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.8820 - mae: 6.8820\n","Epoch 263/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.7211 - mae: 13.7211\n","Epoch 264/500\n","2/2 [==============================] - 0s 8ms/step - loss: 21.0154 - mae: 21.0154\n","Epoch 265/500\n","2/2 [==============================] - 0s 6ms/step - loss: 19.3731 - mae: 19.3731\n","Epoch 266/500\n","2/2 [==============================] - 0s 14ms/step - loss: 11.4735 - mae: 11.4735\n","Epoch 267/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.5302 - mae: 7.5302\n","Epoch 268/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.6453 - mae: 21.6453\n","Epoch 269/500\n","2/2 [==============================] - 0s 6ms/step - loss: 33.1785 - mae: 33.1785\n","Epoch 270/500\n","2/2 [==============================] - 0s 13ms/step - loss: 10.0833 - mae: 10.0833\n","Epoch 271/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.1012 - mae: 12.1012\n","Epoch 272/500\n","2/2 [==============================] - 0s 6ms/step - loss: 26.1372 - mae: 26.1372\n","Epoch 273/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.1751 - mae: 12.1751\n","Epoch 274/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.3272 - mae: 13.3272\n","Epoch 275/500\n","2/2 [==============================] - 0s 5ms/step - loss: 29.3775 - mae: 29.3775\n","Epoch 276/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.3329 - mae: 7.3329\n","Epoch 277/500\n","2/2 [==============================] - 0s 5ms/step - loss: 31.1362 - mae: 31.1362\n","Epoch 278/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.3015 - mae: 12.3015\n","Epoch 279/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.4103 - mae: 16.4103\n","Epoch 280/500\n","2/2 [==============================] - 0s 6ms/step - loss: 21.9118 - mae: 21.9118\n","Epoch 281/500\n","2/2 [==============================] - 0s 5ms/step - loss: 22.1501 - mae: 22.1501\n","Epoch 282/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.7429 - mae: 7.7429\n","Epoch 283/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.1429 - mae: 8.1429\n","Epoch 284/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.9435 - mae: 24.9435\n","Epoch 285/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.6958 - mae: 13.6958\n","Epoch 286/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.8926 - mae: 6.8926\n","Epoch 287/500\n","2/2 [==============================] - 0s 9ms/step - loss: 24.5352 - mae: 24.5352\n","Epoch 288/500\n","2/2 [==============================] - 0s 5ms/step - loss: 20.1721 - mae: 20.1721\n","Epoch 289/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.9658 - mae: 11.9658\n","Epoch 290/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.5391 - mae: 16.5391\n","Epoch 291/500\n","2/2 [==============================] - 0s 9ms/step - loss: 16.8017 - mae: 16.8017\n","Epoch 292/500\n","2/2 [==============================] - 0s 8ms/step - loss: 9.4642 - mae: 9.4642\n","Epoch 293/500\n","2/2 [==============================] - 0s 9ms/step - loss: 15.2711 - mae: 15.2711\n","Epoch 294/500\n","2/2 [==============================] - 0s 9ms/step - loss: 22.7179 - mae: 22.7179\n","Epoch 295/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.9234 - mae: 17.9234\n","Epoch 296/500\n","2/2 [==============================] - 0s 8ms/step - loss: 6.1743 - mae: 6.1743\n","Epoch 297/500\n","2/2 [==============================] - 0s 11ms/step - loss: 10.9440 - mae: 10.9440\n","Epoch 298/500\n","2/2 [==============================] - 0s 10ms/step - loss: 23.1530 - mae: 23.1530\n","Epoch 299/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.7331 - mae: 17.7331\n","Epoch 300/500\n","2/2 [==============================] - 0s 8ms/step - loss: 6.9824 - mae: 6.9824\n","Epoch 301/500\n","2/2 [==============================] - 0s 8ms/step - loss: 25.1857 - mae: 25.1857\n","Epoch 302/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.9025 - mae: 8.9025\n","Epoch 303/500\n","2/2 [==============================] - 0s 14ms/step - loss: 17.7668 - mae: 17.7668\n","Epoch 304/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.0002 - mae: 11.0002\n","Epoch 305/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.9191 - mae: 12.9191\n","Epoch 306/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.4033 - mae: 8.4033\n","Epoch 307/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.6094 - mae: 13.6094\n","Epoch 308/500\n","2/2 [==============================] - 0s 9ms/step - loss: 7.4404 - mae: 7.4404\n","Epoch 309/500\n","2/2 [==============================] - 0s 4ms/step - loss: 9.4642 - mae: 9.4642\n","Epoch 310/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.7099 - mae: 10.7099\n","Epoch 311/500\n","2/2 [==============================] - 0s 4ms/step - loss: 13.2814 - mae: 13.2814\n","Epoch 312/500\n","2/2 [==============================] - 0s 5ms/step - loss: 29.9763 - mae: 29.9763\n","Epoch 313/500\n","2/2 [==============================] - 0s 4ms/step - loss: 7.6304 - mae: 7.6304\n","Epoch 314/500\n","2/2 [==============================] - 0s 4ms/step - loss: 9.9106 - mae: 9.9106\n","Epoch 315/500\n","2/2 [==============================] - 0s 5ms/step - loss: 23.7669 - mae: 23.7669\n","Epoch 316/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.3937 - mae: 16.3937\n","Epoch 317/500\n","2/2 [==============================] - 0s 9ms/step - loss: 21.0758 - mae: 21.0758\n","Epoch 318/500\n","2/2 [==============================] - 0s 10ms/step - loss: 7.9367 - mae: 7.9367\n","Epoch 319/500\n","2/2 [==============================] - 0s 5ms/step - loss: 17.9731 - mae: 17.9731\n","Epoch 320/500\n","2/2 [==============================] - 0s 9ms/step - loss: 10.2375 - mae: 10.2375\n","Epoch 321/500\n","2/2 [==============================] - 0s 4ms/step - loss: 8.3338 - mae: 8.3338\n","Epoch 322/500\n","2/2 [==============================] - 0s 10ms/step - loss: 5.0621 - mae: 5.0621\n","Epoch 323/500\n","2/2 [==============================] - 0s 5ms/step - loss: 23.5109 - mae: 23.5109\n","Epoch 324/500\n","2/2 [==============================] - 0s 8ms/step - loss: 6.8309 - mae: 6.8309\n","Epoch 325/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.3863 - mae: 16.3863\n","Epoch 326/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.5019 - mae: 7.5019\n","Epoch 327/500\n","2/2 [==============================] - 0s 5ms/step - loss: 20.0573 - mae: 20.0573\n","Epoch 328/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.7661 - mae: 13.7661\n","Epoch 329/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.8282 - mae: 16.8282\n","Epoch 330/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.0514 - mae: 7.0514\n","Epoch 331/500\n","2/2 [==============================] - 0s 10ms/step - loss: 21.4846 - mae: 21.4846\n","Epoch 332/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.2880 - mae: 12.2880\n","Epoch 333/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.8117 - mae: 11.8117\n","Epoch 334/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.3600 - mae: 8.3600\n","Epoch 335/500\n","2/2 [==============================] - 0s 5ms/step - loss: 12.4833 - mae: 12.4833\n","Epoch 336/500\n","2/2 [==============================] - 0s 9ms/step - loss: 32.2171 - mae: 32.2171\n","Epoch 337/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.4477 - mae: 10.4477\n","Epoch 338/500\n","2/2 [==============================] - 0s 5ms/step - loss: 19.6832 - mae: 19.6832\n","Epoch 339/500\n","2/2 [==============================] - 0s 5ms/step - loss: 35.0762 - mae: 35.0762\n","Epoch 340/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.4192 - mae: 10.4192\n","Epoch 341/500\n","2/2 [==============================] - 0s 14ms/step - loss: 9.7625 - mae: 9.7625\n","Epoch 342/500\n","2/2 [==============================] - 0s 10ms/step - loss: 11.9500 - mae: 11.9500\n","Epoch 343/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3943 - mae: 9.3943\n","Epoch 344/500\n","2/2 [==============================] - 0s 13ms/step - loss: 5.6071 - mae: 5.6071\n","Epoch 345/500\n","2/2 [==============================] - 0s 6ms/step - loss: 37.4876 - mae: 37.4876\n","Epoch 346/500\n","2/2 [==============================] - 0s 12ms/step - loss: 16.8830 - mae: 16.8830\n","Epoch 347/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.8748 - mae: 12.8748\n","Epoch 348/500\n","2/2 [==============================] - 0s 9ms/step - loss: 8.1960 - mae: 8.1960\n","Epoch 349/500\n","2/2 [==============================] - 0s 9ms/step - loss: 13.5568 - mae: 13.5568\n","Epoch 350/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.4354 - mae: 15.4354\n","Epoch 351/500\n","2/2 [==============================] - 0s 9ms/step - loss: 32.9626 - mae: 32.9626\n","Epoch 352/500\n","2/2 [==============================] - 0s 9ms/step - loss: 14.2040 - mae: 14.2040\n","Epoch 353/500\n","2/2 [==============================] - 0s 9ms/step - loss: 15.9196 - mae: 15.9196\n","Epoch 354/500\n","2/2 [==============================] - 0s 7ms/step - loss: 19.0878 - mae: 19.0878\n","Epoch 355/500\n","2/2 [==============================] - 0s 7ms/step - loss: 34.1178 - mae: 34.1178\n","Epoch 356/500\n","2/2 [==============================] - 0s 10ms/step - loss: 7.6798 - mae: 7.6798\n","Epoch 357/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.2287 - mae: 25.2287\n","Epoch 358/500\n","2/2 [==============================] - 0s 6ms/step - loss: 22.6759 - mae: 22.6759\n","Epoch 359/500\n","2/2 [==============================] - 0s 10ms/step - loss: 8.8765 - mae: 8.8765\n","Epoch 360/500\n","2/2 [==============================] - 0s 162ms/step - loss: 21.4709 - mae: 21.4709\n","Epoch 361/500\n","2/2 [==============================] - 0s 8ms/step - loss: 20.6073 - mae: 20.6073\n","Epoch 362/500\n","2/2 [==============================] - 0s 9ms/step - loss: 7.0611 - mae: 7.0611\n","Epoch 363/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.8117 - mae: 25.8117\n","Epoch 364/500\n","2/2 [==============================] - 0s 6ms/step - loss: 32.2247 - mae: 32.2247\n","Epoch 365/500\n","2/2 [==============================] - 0s 8ms/step - loss: 10.0204 - mae: 10.0204\n","Epoch 366/500\n","2/2 [==============================] - 0s 13ms/step - loss: 9.6722 - mae: 9.6722\n","Epoch 367/500\n","2/2 [==============================] - 0s 5ms/step - loss: 30.4171 - mae: 30.4171\n","Epoch 368/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.5020 - mae: 10.5020\n","Epoch 369/500\n","2/2 [==============================] - 0s 5ms/step - loss: 14.9909 - mae: 14.9909\n","Epoch 370/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.6580 - mae: 14.6580\n","Epoch 371/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.3672 - mae: 23.3672\n","Epoch 372/500\n","2/2 [==============================] - 0s 7ms/step - loss: 13.1025 - mae: 13.1025\n","Epoch 373/500\n","2/2 [==============================] - 0s 11ms/step - loss: 9.2586 - mae: 9.2586\n","Epoch 374/500\n","2/2 [==============================] - 0s 11ms/step - loss: 9.6648 - mae: 9.6648\n","Epoch 375/500\n","2/2 [==============================] - 0s 9ms/step - loss: 13.0041 - mae: 13.0041\n","Epoch 376/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.8863 - mae: 14.8863\n","Epoch 377/500\n","2/2 [==============================] - 0s 10ms/step - loss: 14.7932 - mae: 14.7932\n","Epoch 378/500\n","2/2 [==============================] - 0s 13ms/step - loss: 16.2751 - mae: 16.2751\n","Epoch 379/500\n","2/2 [==============================] - 0s 5ms/step - loss: 20.8307 - mae: 20.8307\n","Epoch 380/500\n","2/2 [==============================] - 0s 11ms/step - loss: 33.5317 - mae: 33.5317\n","Epoch 381/500\n","2/2 [==============================] - 0s 7ms/step - loss: 8.2166 - mae: 8.2166\n","Epoch 382/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.0960 - mae: 13.0960\n","Epoch 383/500\n","2/2 [==============================] - 0s 11ms/step - loss: 8.3999 - mae: 8.3999\n","Epoch 384/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.1283 - mae: 7.1283\n","Epoch 385/500\n","2/2 [==============================] - 0s 14ms/step - loss: 10.9390 - mae: 10.9390\n","Epoch 386/500\n","2/2 [==============================] - 0s 5ms/step - loss: 19.7654 - mae: 19.7654\n","Epoch 387/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.8625 - mae: 24.8625\n","Epoch 388/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.7422 - mae: 8.7422\n","Epoch 389/500\n","2/2 [==============================] - 0s 8ms/step - loss: 5.9488 - mae: 5.9488\n","Epoch 390/500\n","2/2 [==============================] - 0s 6ms/step - loss: 24.4400 - mae: 24.4400\n","Epoch 391/500\n","2/2 [==============================] - 0s 6ms/step - loss: 5.9771 - mae: 5.9771\n","Epoch 392/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.3250 - mae: 16.3250\n","Epoch 393/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.0917 - mae: 6.0917\n","Epoch 394/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0963 - mae: 11.0963\n","Epoch 395/500\n","2/2 [==============================] - 0s 9ms/step - loss: 14.9601 - mae: 14.9601\n","Epoch 396/500\n","2/2 [==============================] - 0s 7ms/step - loss: 7.6462 - mae: 7.6462\n","Epoch 397/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.7654 - mae: 8.7654\n","Epoch 398/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.5991 - mae: 14.5991\n","Epoch 399/500\n","2/2 [==============================] - 0s 7ms/step - loss: 11.3166 - mae: 11.3166\n","Epoch 400/500\n","2/2 [==============================] - 0s 7ms/step - loss: 21.9080 - mae: 21.9080\n","Epoch 401/500\n","2/2 [==============================] - 0s 5ms/step - loss: 14.8653 - mae: 14.8653\n","Epoch 402/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.4970 - mae: 8.4970\n","Epoch 403/500\n","2/2 [==============================] - 0s 14ms/step - loss: 10.3957 - mae: 10.3957\n","Epoch 404/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.2556 - mae: 10.2556\n","Epoch 405/500\n","2/2 [==============================] - 0s 6ms/step - loss: 6.3392 - mae: 6.3392\n","Epoch 406/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.4602 - mae: 17.4602\n","Epoch 407/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.4627 - mae: 11.4627\n","Epoch 408/500\n","2/2 [==============================] - 0s 10ms/step - loss: 20.7294 - mae: 20.7294\n","Epoch 409/500\n","2/2 [==============================] - 0s 7ms/step - loss: 31.3338 - mae: 31.3338\n","Epoch 410/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.2542 - mae: 9.2542\n","Epoch 411/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.8621 - mae: 14.8621\n","Epoch 412/500\n","2/2 [==============================] - 0s 5ms/step - loss: 21.7182 - mae: 21.7182\n","Epoch 413/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.6615 - mae: 12.6615\n","Epoch 414/500\n","2/2 [==============================] - 0s 7ms/step - loss: 6.0687 - mae: 6.0687\n","Epoch 415/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.2201 - mae: 13.2201\n","Epoch 416/500\n","2/2 [==============================] - 0s 6ms/step - loss: 27.4244 - mae: 27.4244\n","Epoch 417/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6407 - mae: 10.6407\n","Epoch 418/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.8230 - mae: 12.8230\n","Epoch 419/500\n","2/2 [==============================] - 0s 5ms/step - loss: 15.8836 - mae: 15.8836\n","Epoch 420/500\n","2/2 [==============================] - 0s 7ms/step - loss: 24.7510 - mae: 24.7510\n","Epoch 421/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.3753 - mae: 17.3753\n","Epoch 422/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.8241 - mae: 7.8241\n","Epoch 423/500\n","2/2 [==============================] - 0s 6ms/step - loss: 25.3789 - mae: 25.3789\n","Epoch 424/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.1031 - mae: 15.1031\n","Epoch 425/500\n","2/2 [==============================] - 0s 6ms/step - loss: 7.1643 - mae: 7.1643\n","Epoch 426/500\n","2/2 [==============================] - 0s 8ms/step - loss: 20.3318 - mae: 20.3318\n","Epoch 427/500\n","2/2 [==============================] - 0s 7ms/step - loss: 6.3283 - mae: 6.3283\n","Epoch 428/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.9961 - mae: 12.9961\n","Epoch 429/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.7869 - mae: 10.7869\n","Epoch 430/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.4007 - mae: 11.4007\n","Epoch 431/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.6152 - mae: 10.6152\n","Epoch 432/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.4582 - mae: 11.4582\n","Epoch 433/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.3851 - mae: 11.3851\n","Epoch 434/500\n","2/2 [==============================] - 0s 8ms/step - loss: 30.3986 - mae: 30.3986\n","Epoch 435/500\n","2/2 [==============================] - 0s 6ms/step - loss: 10.5052 - mae: 10.5052\n","Epoch 436/500\n","2/2 [==============================] - 0s 7ms/step - loss: 28.8810 - mae: 28.8810\n","Epoch 437/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5916 - mae: 8.5916\n","Epoch 438/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.7378 - mae: 12.7378\n","Epoch 439/500\n","2/2 [==============================] - 0s 7ms/step - loss: 33.6754 - mae: 33.6754\n","Epoch 440/500\n","2/2 [==============================] - 0s 7ms/step - loss: 15.0963 - mae: 15.0963\n","Epoch 441/500\n","2/2 [==============================] - 0s 12ms/step - loss: 17.4813 - mae: 17.4813\n","Epoch 442/500\n","2/2 [==============================] - 0s 7ms/step - loss: 22.3049 - mae: 22.3049\n","Epoch 443/500\n","2/2 [==============================] - 0s 179ms/step - loss: 23.5841 - mae: 23.5841\n","Epoch 444/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.0008 - mae: 11.0008\n","Epoch 445/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.9175 - mae: 14.9175\n","Epoch 446/500\n","2/2 [==============================] - 0s 6ms/step - loss: 17.9979 - mae: 17.9979\n","Epoch 447/500\n","2/2 [==============================] - 0s 5ms/step - loss: 5.4482 - mae: 5.4482\n","Epoch 448/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.0527 - mae: 10.0527\n","Epoch 449/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.0052 - mae: 14.0052\n","Epoch 450/500\n","2/2 [==============================] - 0s 5ms/step - loss: 16.7782 - mae: 16.7782\n","Epoch 451/500\n","2/2 [==============================] - 0s 6ms/step - loss: 14.2937 - mae: 14.2937\n","Epoch 452/500\n","2/2 [==============================] - 0s 13ms/step - loss: 30.6193 - mae: 30.6193\n","Epoch 453/500\n","2/2 [==============================] - 0s 5ms/step - loss: 7.6541 - mae: 7.6541\n","Epoch 454/500\n","2/2 [==============================] - 0s 6ms/step - loss: 28.1428 - mae: 28.1428\n","Epoch 455/500\n","2/2 [==============================] - 0s 6ms/step - loss: 8.0017 - mae: 8.0017\n","Epoch 456/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.3933 - mae: 10.3933\n","Epoch 457/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.0242 - mae: 15.0242\n","Epoch 458/500\n","2/2 [==============================] - 0s 9ms/step - loss: 16.5653 - mae: 16.5653\n","Epoch 459/500\n","2/2 [==============================] - 0s 5ms/step - loss: 26.8566 - mae: 26.8566\n","Epoch 460/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.4852 - mae: 12.4852\n","Epoch 461/500\n","2/2 [==============================] - 0s 7ms/step - loss: 12.4784 - mae: 12.4784\n","Epoch 462/500\n","2/2 [==============================] - 0s 12ms/step - loss: 13.3186 - mae: 13.3186\n","Epoch 463/500\n","2/2 [==============================] - 0s 6ms/step - loss: 29.5524 - mae: 29.5524\n","Epoch 464/500\n","2/2 [==============================] - 0s 5ms/step - loss: 3.4664 - mae: 3.4664\n","Epoch 465/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.2136 - mae: 15.2136\n","Epoch 466/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.8327 - mae: 20.8327\n","Epoch 467/500\n","2/2 [==============================] - 0s 6ms/step - loss: 30.5108 - mae: 30.5108\n","Epoch 468/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.0597 - mae: 11.0597\n","Epoch 469/500\n","2/2 [==============================] - 0s 10ms/step - loss: 12.8372 - mae: 12.8372\n","Epoch 470/500\n","2/2 [==============================] - 0s 14ms/step - loss: 3.2398 - mae: 3.2398\n","Epoch 471/500\n","2/2 [==============================] - 0s 6ms/step - loss: 16.6964 - mae: 16.6964\n","Epoch 472/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.3883 - mae: 13.3883\n","Epoch 473/500\n","2/2 [==============================] - 0s 6ms/step - loss: 15.2771 - mae: 15.2771\n","Epoch 474/500\n","2/2 [==============================] - 0s 5ms/step - loss: 11.7448 - mae: 11.7448\n","Epoch 475/500\n","2/2 [==============================] - 0s 7ms/step - loss: 16.4113 - mae: 16.4113\n","Epoch 476/500\n","2/2 [==============================] - 0s 6ms/step - loss: 13.8785 - mae: 13.8785\n","Epoch 477/500\n","2/2 [==============================] - 0s 6ms/step - loss: 30.6702 - mae: 30.6702\n","Epoch 478/500\n","2/2 [==============================] - 0s 5ms/step - loss: 8.5880 - mae: 8.5880\n","Epoch 479/500\n","2/2 [==============================] - 0s 5ms/step - loss: 10.7384 - mae: 10.7384\n","Epoch 480/500\n","2/2 [==============================] - 0s 7ms/step - loss: 17.9051 - mae: 17.9051\n","Epoch 481/500\n","2/2 [==============================] - 0s 8ms/step - loss: 15.8095 - mae: 15.8095\n","Epoch 482/500\n","2/2 [==============================] - 0s 15ms/step - loss: 21.3054 - mae: 21.3054\n","Epoch 483/500\n","2/2 [==============================] - 0s 8ms/step - loss: 25.3845 - mae: 25.3845\n","Epoch 484/500\n","2/2 [==============================] - 0s 6ms/step - loss: 23.9815 - mae: 23.9815\n","Epoch 485/500\n","2/2 [==============================] - 0s 6ms/step - loss: 5.7734 - mae: 5.7734\n","Epoch 486/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.0010 - mae: 20.0010\n","Epoch 487/500\n","2/2 [==============================] - 0s 7ms/step - loss: 14.0419 - mae: 14.0419\n","Epoch 488/500\n","2/2 [==============================] - 0s 5ms/step - loss: 30.6088 - mae: 30.6088\n","Epoch 489/500\n","2/2 [==============================] - 0s 6ms/step - loss: 11.9409 - mae: 11.9409\n","Epoch 490/500\n","2/2 [==============================] - 0s 5ms/step - loss: 12.7352 - mae: 12.7352\n","Epoch 491/500\n","2/2 [==============================] - 0s 11ms/step - loss: 23.6139 - mae: 23.6139\n","Epoch 492/500\n","2/2 [==============================] - 0s 6ms/step - loss: 20.5365 - mae: 20.5365\n","Epoch 493/500\n","2/2 [==============================] - 0s 12ms/step - loss: 4.9942 - mae: 4.9942\n","Epoch 494/500\n","2/2 [==============================] - 0s 5ms/step - loss: 12.7986 - mae: 12.7986\n","Epoch 495/500\n","2/2 [==============================] - 0s 5ms/step - loss: 13.3772 - mae: 13.3772\n","Epoch 496/500\n","2/2 [==============================] - 0s 6ms/step - loss: 12.6727 - mae: 12.6727\n","Epoch 497/500\n","2/2 [==============================] - 0s 12ms/step - loss: 17.6192 - mae: 17.6192\n","Epoch 498/500\n","2/2 [==============================] - 0s 7ms/step - loss: 23.5629 - mae: 23.5629\n","Epoch 499/500\n","2/2 [==============================] - 0s 6ms/step - loss: 9.3755 - mae: 9.3755\n","Epoch 500/500\n","2/2 [==============================] - 0s 11ms/step - loss: 14.6316 - mae: 14.6316\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7f1d9490>"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["# Make and plot predictions of model_3\n","y_preds_3 = model_3.predict(X_test)\n","plot_predictions(\n","    predictions=y_preds_3\n",") \n","\n","# seems like it has trained for too long... may have missed the sweet zone... (may have \"overfit\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"aq58CdFTeEXN","executionInfo":{"status":"ok","timestamp":1663809143425,"user_tz":420,"elapsed":46,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"df8ceb3e-2453-495d-a6e8-5d2b4e00793d"},"execution_count":66,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x504 with 1 Axes>"],"image/png":"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mb1qZhuSvw9PLjczu9/MNprZSjMbG/Tgi2Hbtm2qqqpSVVWVjj32WA0cODB1fseOHQe8/eLFi7Vs2bLU+Xnz5unJJ58MfJzpXyzdmcbGRi1YsCDwdQMAUEibWjN/JUtny8tBrluwHpd0fodlP5S0yN2HS1qUPC9JX5E0PPkzS9LDBz/M0jnyyCPV2NioxsZGzZ49O3U0X2Njow455JAD3r5jwJo9e7Yuv/zyQg65UwQsAEAYlVP9QrZyCljuvkTSRx0WXyip/ftUnpB0UdryJz3hDUmHmdlx+Qw2G8X4DqIVK1borLPO0rhx43Teeedpy5YtkqT7779fo0aN0ujRo3XZZZepqalJ8+bN07333rtPS/rdd98tSTr77LN10003afz48TrhhBO0dOlSSVJbW5u++c1vatSoUZo+fbomTJigjgWskvTyyy9r5MiRGjt2rH75y1+mli9fvlynn366xowZozPOOEPr16/Xjh07dOutt2r+/PmqqqrS/PnzM14PAIByU071C9kKYpL7Me6+JXn6vyUdkzw9UNL7adfbnFy2JW2ZzGyWElu4NDjPLw0sxiQ4d9c111yj559/XhUVFZo/f77mzp2rxx57THfccYfee+899erVS3/+85912GGHafbs2erXr59uuOEGSdKiRYv2ub9du3Zp+fLlWrBggW6//XYtXLhQDz30kA4//HCtXbtWq1evVlVV1X7j+PTTT/W9731Pr732mr7whS/o0ksvTV02cuRILV26VD169NDChQt1yy236Nlnn9WPf/xjNTQ06MEHH5QkffzxxxmvBwBAOWn/NzybowjLRaBHEbq7m1lO373j7nWS6qTEV+Xks/6uJsEF9SJ89tlnWr16tc455xxJ0u7du3XccYkNc6NHj1ZNTY0uuugiXXTRRV3dTcrFF18sSRo3blzqy5x/+9vf6rrrrpMknXzyyRo9evR+t3v77bc1dOhQDR8+XJL0rW99S3V1dZISX9Y8c+ZMbdiwQWamnTt3Zlx3ttcDAKAQsq1ekMqnfiFbQRxFuLV911/y94fJ5R9I+lza9QYllxVMMSbBubtOOumk1DysVatW6ZVXXpEk/frXv9acOXP05ptv6otf/GJWX/zcq1cvSVL37t0D+6LoH/3oR5o8ebJWr16tF198UZ9++mle1wMAIGjte52aW5vl8tRep0JM7SmFIALWC5JmJk/PlPR82vLLk0cTniapNW1XYkEUYxJcr1691NLSot/97neSpJ07d2rNmjXas2eP3n//fU2ePFl33nmnWltb9cknn6h///7avn17Tus488wz9fTTT0uS1q5dq1WrVu13nZEjR6qpqUnvvPOOJOmpp55KXdba2qqBAwdKkh5//PHU8o5j6ex6AAAUWhirF3KRa03DU5J+J2mEmW02s+9IukPSOWa2QdLU5HlJWiDpXUkbJT0q6fuBjboTxZgE161bNz3zzDO66aabdOqpp6qqqkrLli3T7t279a1vfUunnHKKxowZo2uvvVaHHXaYpk2bpueeey41yT0b3//+99XS0qJRo0bpH/7hH3TSSSdpwIAB+1ynd+/eqqur01e/+lWNHTtWRx99dOqyG2+8UTfffLPGjBmzz1axyZMna+3atalJ7p1dDwCAQgtj9UIuzD2vaU+Bqq6u9o5Hy61bt04nnnhi1veRy/7ccrV7927t3LlTvXv31jvvvKOpU6dq/fr1WdVCFFOurw0AAO0q76tUc2vzfsuHDBiiph80FX9AB8HMVrh7dabLIvdVOWGbBJdJW1ubJk+erJ07d8rd9dBDD5VduAIAIB+1U2r3OfJfKv/qhVxELmBFQf/+/TP2XgEAEBVhrF7IBQELAAAEKtvpOlHY69QZAhYAAAhMMUq/wyCImgYAAABJ0a9fyBYBCwAABCbq9QvZImBloXv37qqqqtLJJ5+sSy65RG1tbQe+USeuuOIKPfPMM5Kk7373u1q7dm2n1128eLGWLVuWOj9v3jw9+eSTB71uAAAKrRil32FAwMpCnz591NjYqNWrV+uQQw7RvHnz9rn8YEs6f/azn2nUqFGdXt4xYM2ePVuXX375Qa0LAIBiKEbpdxhEL2DV10uVlVK3bonf9cF+p9HEiRO1ceNGLV68WBMnTtTXv/51jRo1Srt379bf//3f64tf/KJGjx6tRx55RFLiuwuvvvpqjRgxQlOnTtWHH36Yuq+zzz47Vcfw8ssva+zYsTr11FM1ZcoUNTU1ad68ebr33ntTLfC33Xab7r77bklSY2OjTjvtNI0ePVrTp0/Xn/70p9R93nTTTRo/frxOOOGEVHv8mjVrNH78eFVVVWn06NHasGFDoM8LAABSYiJ73bQ6DRkwRCbTkAFDVDetLlYT3KWoHUVYXy/NmiW178Jrbk6cl6Sa/F/YXbt26Te/+Y3OP/98SdKbb76p1atXa+jQoaqrq9OAAQP0+9//Xp999pnOPPNMnXvuuXrrrbe0fv16rV27Vlu3btWoUaN05ZVX7nO/LS0t+t73vqclS5Zo6NCh+uijj3TEEUdo9uzZ6tevn2644QZJ0qJFi1K3ufzyy/XAAw/orLPO0q233qrbb79d9913X2qcy5cv14IFC3T77bdr4cKFmjdvnq677jrV1NRox44d2r17d97PBwAgXqhfyF60tmDNnbs3XLVra0ssz8Nf//pXVVVVqbq6WoMHD9Z3vvMdSdL48eM1dOhQSdIrr7yiJ598UlVVVZowYYK2bdumDRs2aMmSJZoxY4a6d++u448/Xl/+8pf3u/833nhDkyZNSt3XEUcc0eV4Wltb9ec//1lnnXWWJGnmzJlasmRJ6vKLL75YkjRu3Dg1NTVJkk4//XT90z/9k+688041NzerT58+eT0nAIB4aa9faG5tlstT9Qv1q4LdUxQV0QpYmzo5QqGz5Vlqn4PV2NioBx54IPW1NYceemjqOu6uBx54IHW99957T+eee25e6z1YvXr1kpSYnN8+P+xv/uZv9MILL6hPnz664IIL9Nprr5VkbACAcKJ+ITfRCliDOzlCobPlATrvvPP08MMPa+fOnZKkP/zhD/rLX/6iSZMmaf78+dq9e7e2bNmi119/fb/bnnbaaVqyZInee+89SdJHH30kKfGVOdu3b9/v+gMGDNDhhx+eml/185//PLU1qzPvvvuuhg0bpmuvvVYXXnihVq5cmdfjBQDEC/ULuYnWHKza2n3nYElS376J5QX23e9+V01NTRo7dqzcXRUVFfrVr36l6dOn67XXXtOoUaM0ePBgnX766fvdtqKiQnV1dbr44ou1Z88eHX300Xr11Vc1bdo0feMb39Dzzz+vBx54YJ/bPPHEE5o9e7ba2to0bNgw/eu//muX43v66af185//XD179tSxxx6rW265JdDHDwCItsEDBqu5tTnjcuzP3L3UY0iprq72jl9yvG7dOp144onZ30l9fWLO1aZNiS1XtbWBTHDH/nJ+bQAAodXxK3CkRP1CHI8QbGdmK9y9OtNl0dqCJSXCFIEKAIBAtYeobI4iRBQDFgAAyFq21QsS9Qu5CEXAcneZWamHgTTltGsZAHBwOu72a69ekESQylPZH0XYu3dv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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Calculate model_3 evaluation metrics\n","mAe_3 = mAe(y_test, y_preds_3)\n","mSe_3 = mSe(y_test, y_preds_3)\n","\n","mAe_3, mSe_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bXrGmQ0pe2_5","executionInfo":{"status":"ok","timestamp":1663809143426,"user_tz":420,"elapsed":44,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"bbfe5917-e7f1-43f3-f535-19feee099c21"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(), dtype=float32, numpy=68.713615>,\n"," <tf.Tensor: shape=(), dtype=float32, numpy=4808.0273>)"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","source":["**Note:** You want to start with small experiments (small models) and make sure they work and then increase their scale when necessary."],"metadata":{"id":"IV0UvSXqf2oN"}},{"cell_type":"markdown","source":["## Comparing the results of our experiments\n","\n","We've run a few experiments, let's comapre the results."],"metadata":{"id":"mJSzTmWbfbsh"}},{"cell_type":"code","source":["# Let's compare our model's results using a pandas DataFrame\n","import pandas as pd\n","\n","model_results = [\n","    [\"model_1\", mAe_1.numpy(), mSe_1.numpy()],\n","    [\"model_2\", mAe_2.numpy(), mSe_2.numpy()],\n","    [\"model_3\", mAe_3.numpy(), mSe_3.numpy()]\n","]\n","\n","all_results = pd.DataFrame(model_results, columns=[\"model\", \"mae\", \"mse\"])\n","all_results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"RY4RcsDbfFXa","executionInfo":{"status":"ok","timestamp":1663809143426,"user_tz":420,"elapsed":32,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"0e0bc095-3e51-4a59-f030-d3568afd5ded"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     model        mae          mse\n","0  model_1  18.745327   353.573364\n","1  model_2   3.196941    13.070143\n","2  model_3  68.713615  4808.027344"],"text/html":["\n","  <div id=\"df-26d9b833-f90b-4289-a084-6f93dfde665f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>mae</th>\n","      <th>mse</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>model_1</td>\n","      <td>18.745327</td>\n","      <td>353.573364</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>model_2</td>\n","      <td>3.196941</td>\n","      <td>13.070143</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>model_3</td>\n","      <td>68.713615</td>\n","      <td>4808.027344</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26d9b833-f90b-4289-a084-6f93dfde665f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-26d9b833-f90b-4289-a084-6f93dfde665f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-26d9b833-f90b-4289-a084-6f93dfde665f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["model_2.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2f00mGgegpBI","executionInfo":{"status":"ok","timestamp":1663809143427,"user_tz":420,"elapsed":31,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"5837e840-f0f6-45a9-961c-9d6c506f378d"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_9 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_10 (Dense)            (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31\n","Trainable params: 31\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["Looks like `model_2` performed the best..."],"metadata":{"id":"c2EYeGDihl62"}},{"cell_type":"markdown","source":["> **Note:** One of your main goals should be to minimize the time between your experiments. The more experiments you do, the more things you'll figure out which don't work and in turn, get closer to figuring out what does work. Remember the machine learning practitioner's motto: \"experiment, experiment, experiment\"."],"metadata":{"id":"jzMVZ0XvhpVG"}},{"cell_type":"markdown","source":["## Tracking your experiments\n","\n","One really good habit in machine learning modeling is to track the results of your experiments.\n","\n","And when doing so, it can be tedious if you're running lots of experiments.\n","\n","Luckily, there are tools to help us!\n","\n","**Resource:** As you build more models, you'll want to look into using:\n","\n","* TensorBoard - a component of the TensorFlow library to help track modeling experiments (we'll see this one later).\n","* Weights & Baises - a tool for tracking all of kinds of machine learning experiments (plugs straight into TensorBoard)."],"metadata":{"id":"fKMh5QCyiM8x"}},{"cell_type":"markdown","source":["## Saving our models\n","\n","Saving our models allows us to use them outside of Google Colab (or whatever they were trained) such as web application (or a mobile app).\n","\n","There are two main formats we can save our model's too:\n","1. The SavedModel format\n","2. The HDF5 format"],"metadata":{"id":"eSLzmNygV8kO"}},{"cell_type":"code","source":["# Save model\n","model_2.save(\"best_model_SavedModel_format\")"],"metadata":{"id":"KzLPovjKgmB2","executionInfo":{"status":"ok","timestamp":1663809143428,"user_tz":420,"elapsed":27,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["# Save model using HDF5 format\n","model_2.save(\"best_model_HDF5_format.h5\")"],"metadata":{"id":"WwjAS7wmW6zq","executionInfo":{"status":"ok","timestamp":1663809143428,"user_tz":420,"elapsed":27,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":71,"outputs":[]},{"cell_type":"markdown","source":["## Loading in a saved model"],"metadata":{"id":"B_pusQMtYHlW"}},{"cell_type":"code","source":["# Load inn the SavedModel format model\n","loaded_SavedModel_format = tf.keras.models.load_model(\"/content/best_model_SavedModel_format\")\n","loaded_SavedModel_format.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pfkPoV4eX5zg","executionInfo":{"status":"ok","timestamp":1663809143429,"user_tz":420,"elapsed":28,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"8813c44a-7d08-4958-b15f-887558551508"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_9 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_10 (Dense)            (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31\n","Trainable params: 31\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model_2.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LDLp_1aqY8VO","executionInfo":{"status":"ok","timestamp":1663809143430,"user_tz":420,"elapsed":26,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"ae5bc21a-59e1-43d7-f062-4b13390a1412"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_9 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_10 (Dense)            (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31\n","Trainable params: 31\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# Compare model_2 predictions with SavedModel format model predictions\n","model_2_preds = model_2.predict(X_test)\n","loaded_SavedModel_format_preds = loaded_SavedModel_format.predict(X_test)\n","model_2_preds == loaded_SavedModel_format_preds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NOhAzR8VZAP8","executionInfo":{"status":"ok","timestamp":1663809143431,"user_tz":420,"elapsed":24,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"8809f8cf-bd20-4659-9461-2a82a902a1d2"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True]])"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["model_2_preds, loaded_SavedModel_format_preds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-SLStcP7Zedi","executionInfo":{"status":"ok","timestamp":1663809143432,"user_tz":420,"elapsed":24,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"e063f004-e3de-42d5-afcd-242dd391fe8e"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[ 70.55218 ],\n","        [ 75.13991 ],\n","        [ 79.72763 ],\n","        [ 84.31535 ],\n","        [ 88.903076],\n","        [ 93.49081 ],\n","        [ 98.07853 ],\n","        [102.66625 ],\n","        [107.253975],\n","        [111.8417  ]], dtype=float32), array([[ 70.55218 ],\n","        [ 75.13991 ],\n","        [ 79.72763 ],\n","        [ 84.31535 ],\n","        [ 88.903076],\n","        [ 93.49081 ],\n","        [ 98.07853 ],\n","        [102.66625 ],\n","        [107.253975],\n","        [111.8417  ]], dtype=float32))"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["mAe(y_true=y_test, y_pred=model_2_preds) == mAe(y_true=y_test, y_pred=loaded_SavedModel_format_preds)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MVo2UdmWZqPE","executionInfo":{"status":"ok","timestamp":1663809143432,"user_tz":420,"elapsed":22,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"f290e8a0-aef1-45e0-a9a8-cc31a5a29323"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=bool, numpy=True>"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["model_2_preds.squeeze()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aWPTaBV5i46i","executionInfo":{"status":"ok","timestamp":1663809143432,"user_tz":420,"elapsed":17,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"5ef27aa3-e030-4151-e08a-9aac9f61b418"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 70.55218 ,  75.13991 ,  79.72763 ,  84.31535 ,  88.903076,\n","        93.49081 ,  98.07853 , 102.66625 , 107.253975, 111.8417  ],\n","      dtype=float32)"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["loaded_SavedModel_format_preds.squeeze()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I7o8z4TejBxb","executionInfo":{"status":"ok","timestamp":1663809143432,"user_tz":420,"elapsed":15,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"2e4cb9fa-71d5-4856-c281-ed19705d3ab4"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 70.55218 ,  75.13991 ,  79.72763 ,  84.31535 ,  88.903076,\n","        93.49081 ,  98.07853 , 102.66625 , 107.253975, 111.8417  ],\n","      dtype=float32)"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["# Load in a model using the .h5 format\n","loaded_h5_model = tf.keras.models.load_model(\"/content/best_model_HDF5_format.h5\")"],"metadata":{"id":"SFWqsO-TfKlw","executionInfo":{"status":"ok","timestamp":1663809143433,"user_tz":420,"elapsed":14,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["loaded_h5_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"easHNOPrjknJ","executionInfo":{"status":"ok","timestamp":1663809143602,"user_tz":420,"elapsed":30,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"4b96bc79-d822-4dc3-d80d-77e66f6c0af2"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_9 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_10 (Dense)            (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31\n","Trainable params: 31\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model_2.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBz0pD5_jn-Y","executionInfo":{"status":"ok","timestamp":1663809143602,"user_tz":420,"elapsed":28,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"91cd7851-8072-4905-b3b9-3425eab127da"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_9 (Dense)             (None, 10)                20        \n","                                                                 \n"," dense_10 (Dense)            (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 31\n","Trainable params: 31\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# Check to see if loaded h5 model predictions match model 2 predictions\n","model_2_preds = model_2.predict(X_test)\n","loaded_h5_model_preds = loaded_h5_model.predict(X_test)\n","model_2_preds == loaded_h5_model_preds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ldKcXh1zjpsy","executionInfo":{"status":"ok","timestamp":1663809143602,"user_tz":420,"elapsed":25,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"bee3052f-f630-4083-d7b3-a91f76191c62"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [ True]])"]},"metadata":{},"execution_count":82}]},{"cell_type":"markdown","source":["## Download a model (or any other file) from Google Colab\n","\n","If you want to download your files from Google Colab:\n","1. You can go to \"files\" tab and right click the file and click \"download\".\n","2. Use code (see the cell below).\n","3. Save it to Google Drive by connecting Google Drive and copying it there (see 2nd code cell below)."],"metadata":{"id":"3g6tmpkAkhen"}},{"cell_type":"code","source":["# Download a file from Google Colab\n","from google.colab import files\n","files.download(\"/content/best_model_HDF5_format.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"PaVFcw5Sj9m8","executionInfo":{"status":"ok","timestamp":1663809143603,"user_tz":420,"elapsed":22,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"909f354f-5eec-475a-9a5a-7d324679ff00"},"execution_count":83,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_f2b9e425-0cee-4c96-8172-81f06e221feb\", \"best_model_HDF5_format.h5\", 17872)"]},"metadata":{}}]},{"cell_type":"code","source":["# Save a file from Google Colab to Google Drive (requires mounting Google Drive)\n","!cp /content/best_model_HDF5_format.h5 /content/drive/MyDrive/TensforFlow_Course"],"metadata":{"id":"qaCG5YK4lJPA","executionInfo":{"status":"ok","timestamp":1663809143603,"user_tz":420,"elapsed":21,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["!ls /content/drive/MyDrive/TensforFlow_Course"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vXz5vlo-nkiG","executionInfo":{"status":"ok","timestamp":1663809143603,"user_tz":420,"elapsed":20,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"f008ae9f-bfee-40b4-bd45-0607d1c46297"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/TensforFlow_Course\n"]}]},{"cell_type":"markdown","source":["### A larger example"],"metadata":{"id":"_tcOa_-ToIom"}},{"cell_type":"code","source":["X_train, y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZuTGsJC_nplP","executionInfo":{"status":"ok","timestamp":1663809143603,"user_tz":420,"elapsed":17,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"7a510408-1eca-44a5-c1b1-fd898e4537cd"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(40,), dtype=int32, numpy=\n"," array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n","         -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n","         -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n","          32,   36,   40,   44,   48,   52,   56], dtype=int32)>,\n"," <tf.Tensor: shape=(40,), dtype=int32, numpy=\n"," array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n","        -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n","         14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n","         66], dtype=int32)>)"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["# Import libraries for larger example\n","import tensorflow as tf\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# Read in the insurance dataset\n","insurance = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")\n","insurance"],"metadata":{"id":"0XfrZiLBoS-b","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1663809911900,"user_tz":420,"elapsed":302,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"65b9468f-937c-4ba4-80e8-4f8ba5d57288"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-68f8f952-cfb5-442a-950c-1a2d56110283\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68f8f952-cfb5-442a-950c-1a2d56110283')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68f8f952-cfb5-442a-950c-1a2d56110283 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68f8f952-cfb5-442a-950c-1a2d56110283');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["insurance['sex']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e29Gsm3-xrhb","executionInfo":{"status":"ok","timestamp":1663809913670,"user_tz":420,"elapsed":129,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"0ad8c25e-0820-4622-e3ae-a0dbb4bc03de"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       female\n","1         male\n","2         male\n","3         male\n","4         male\n","         ...  \n","1333      male\n","1334    female\n","1335    female\n","1336    female\n","1337    female\n","Name: sex, Length: 1338, dtype: object"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["insurance['smoker'], insurance['age']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4USnSGTAxzju","executionInfo":{"status":"ok","timestamp":1663809915288,"user_tz":420,"elapsed":137,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"75e33a94-0b0b-4ef5-c7ed-de1bc95d61a5"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0       yes\n"," 1        no\n"," 2        no\n"," 3        no\n"," 4        no\n","        ... \n"," 1333     no\n"," 1334     no\n"," 1335     no\n"," 1336     no\n"," 1337    yes\n"," Name: smoker, Length: 1338, dtype: object, 0       19\n"," 1       18\n"," 2       28\n"," 3       33\n"," 4       32\n","         ..\n"," 1333    50\n"," 1334    18\n"," 1335    18\n"," 1336    21\n"," 1337    61\n"," Name: age, Length: 1338, dtype: int64)"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["# Let's try one-hot encode our DataFrame so it's all numbers\n","insurance_one_hot = pd.get_dummies(insurance)\n","insurance_one_hot.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"bEfcQImWx3dC","executionInfo":{"status":"ok","timestamp":1663809934150,"user_tz":420,"elapsed":133,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"34bcca28-1475-4c6c-a342-cd69092c5476"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children      charges  sex_female  sex_male  smoker_no  \\\n","0   19  27.900         0  16884.92400           1         0          0   \n","1   18  33.770         1   1725.55230           0         1          1   \n","2   28  33.000         3   4449.46200           0         1          1   \n","3   33  22.705         0  21984.47061           0         1          1   \n","4   32  28.880         0   3866.85520           0         1          1   \n","\n","   smoker_yes  region_northeast  region_northwest  region_southeast  \\\n","0           1                 0                 0                 0   \n","1           0                 0                 0                 1   \n","2           0                 0                 0                 1   \n","3           0                 0                 1                 0   \n","4           0                 0                 1                 0   \n","\n","   region_southwest  \n","0                 1  \n","1                 0  \n","2                 0  \n","3                 0  \n","4                 0  "],"text/html":["\n","  <div id=\"df-4aba2e77-f9bc-4cf5-adcc-600d4b005085\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>16884.92400</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>1725.55230</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>4449.46200</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>21984.47061</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>3866.85520</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4aba2e77-f9bc-4cf5-adcc-600d4b005085')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4aba2e77-f9bc-4cf5-adcc-600d4b005085 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4aba2e77-f9bc-4cf5-adcc-600d4b005085');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["# Create X & y values (features and labels)\n","X = insurance_one_hot.drop(\"charges\", axis=1)\n","y = insurance_one_hot[\"charges\"]"],"metadata":{"id":"6hZGfAQ5y6HI","executionInfo":{"status":"ok","timestamp":1663810086219,"user_tz":420,"elapsed":151,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":100,"outputs":[]},{"cell_type":"code","source":["# View X\n","X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"bQ3_9lxYzyPt","executionInfo":{"status":"ok","timestamp":1663810095952,"user_tz":420,"elapsed":131,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"453d3e6c-111d-43e0-8be6-60ee525563e1"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n","0   19  27.900         0           1         0          0           1   \n","1   18  33.770         1           0         1          1           0   \n","2   28  33.000         3           0         1          1           0   \n","3   33  22.705         0           0         1          1           0   \n","4   32  28.880         0           0         1          1           0   \n","\n","   region_northeast  region_northwest  region_southeast  region_southwest  \n","0                 0                 0                 0                 1  \n","1                 0                 0                 1                 0  \n","2                 0                 0                 1                 0  \n","3                 0                 1                 0                 0  \n","4                 0                 1                 0                 0  "],"text/html":["\n","  <div id=\"df-83302df5-15fa-4339-8e59-7d8ccc6966da\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83302df5-15fa-4339-8e59-7d8ccc6966da')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-83302df5-15fa-4339-8e59-7d8ccc6966da button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-83302df5-15fa-4339-8e59-7d8ccc6966da');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["# View y\n","y.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"woz4W7Qvz0oU","executionInfo":{"status":"ok","timestamp":1663810111016,"user_tz":420,"elapsed":116,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"c8f2984d-89b7-4003-9b0e-f7d746f82566"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    16884.92400\n","1     1725.55230\n","2     4449.46200\n","3    21984.47061\n","4     3866.85520\n","Name: charges, dtype: float64"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["# Create training and test sets\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","len(X), len(X_train), len(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kteeMz6gzlPq","executionInfo":{"status":"ok","timestamp":1663810389822,"user_tz":420,"elapsed":113,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"6ca72101-e83f-401c-c303-68d9215a1ef5"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1338, 1070, 268)"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["# Build a neural network (sort of like model_2 above)\n","tf.random.set_seed(42)\n","\n","# 1. Create a model\n","insurance_model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","insurance_model.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.SGD(),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model\n","insurance_model.fit(X_train, y_train, epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2yNs8Lf5zmJC","executionInfo":{"status":"ok","timestamp":1663810738777,"user_tz":420,"elapsed":10862,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"5f5aaab0-638d-4755-98f7-e40a13b80977"},"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","34/34 [==============================] - 0s 2ms/step - loss: 8637.1006 - mae: 8637.1006\n","Epoch 2/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7886.7759 - mae: 7886.7759\n","Epoch 3/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7558.1470 - mae: 7558.1470\n","Epoch 4/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7792.0225 - mae: 7792.0225\n","Epoch 5/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7748.3887 - mae: 7748.3887\n","Epoch 6/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7595.3940 - mae: 7595.3940\n","Epoch 7/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7589.9844 - mae: 7589.9844\n","Epoch 8/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7698.5576 - mae: 7698.5576\n","Epoch 9/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7496.7778 - mae: 7496.7778\n","Epoch 10/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7493.1743 - mae: 7493.1743\n","Epoch 11/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7769.7305 - mae: 7769.7305\n","Epoch 12/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7706.9028 - mae: 7706.9028\n","Epoch 13/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7687.7231 - mae: 7687.7231\n","Epoch 14/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7689.9004 - mae: 7689.9004\n","Epoch 15/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7393.5322 - mae: 7393.5322\n","Epoch 16/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7780.6987 - mae: 7780.6987\n","Epoch 17/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7578.5098 - mae: 7578.5098\n","Epoch 18/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7750.8354 - mae: 7750.8354\n","Epoch 19/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7739.2144 - mae: 7739.2144\n","Epoch 20/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7875.0654 - mae: 7875.0654\n","Epoch 21/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7466.6768 - mae: 7466.6768\n","Epoch 22/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7941.2329 - mae: 7941.2329\n","Epoch 23/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7640.2734 - mae: 7640.2734\n","Epoch 24/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7539.2671 - mae: 7539.2671\n","Epoch 25/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7619.9653 - mae: 7619.9653\n","Epoch 26/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7644.1714 - mae: 7644.1714\n","Epoch 27/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7709.0371 - mae: 7709.0371\n","Epoch 28/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7366.8662 - mae: 7366.8662\n","Epoch 29/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7444.3154 - mae: 7444.3154\n","Epoch 30/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7616.4082 - mae: 7616.4082\n","Epoch 31/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7686.3848 - mae: 7686.3848\n","Epoch 32/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7548.0977 - mae: 7548.0977\n","Epoch 33/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7501.5532 - mae: 7501.5532\n","Epoch 34/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7363.4160 - mae: 7363.4160\n","Epoch 35/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7295.4478 - mae: 7295.4478\n","Epoch 36/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7569.8804 - mae: 7569.8804\n","Epoch 37/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7548.1997 - mae: 7548.1997\n","Epoch 38/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7424.3975 - mae: 7424.3975\n","Epoch 39/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7529.7739 - mae: 7529.7739\n","Epoch 40/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7467.3232 - mae: 7467.3232\n","Epoch 41/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7635.9292 - mae: 7635.9292\n","Epoch 42/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7536.8398 - mae: 7536.8398\n","Epoch 43/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7616.5859 - mae: 7616.5859\n","Epoch 44/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7439.4941 - mae: 7439.4941\n","Epoch 45/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7538.0142 - mae: 7538.0142\n","Epoch 46/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7415.1470 - mae: 7415.1470\n","Epoch 47/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7420.6938 - mae: 7420.6938\n","Epoch 48/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7509.9839 - mae: 7509.9839\n","Epoch 49/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7541.1133 - mae: 7541.1133\n","Epoch 50/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7467.8643 - mae: 7467.8643\n","Epoch 51/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7389.3560 - mae: 7389.3560\n","Epoch 52/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7499.7759 - mae: 7499.7759\n","Epoch 53/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7523.9282 - mae: 7523.9282\n","Epoch 54/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7243.3115 - mae: 7243.3115\n","Epoch 55/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7429.5864 - mae: 7429.5864\n","Epoch 56/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7313.3999 - mae: 7313.3999\n","Epoch 57/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7526.3877 - mae: 7526.3877\n","Epoch 58/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7542.2666 - mae: 7542.2666\n","Epoch 59/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7576.9277 - mae: 7576.9277\n","Epoch 60/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7546.4058 - mae: 7546.4058\n","Epoch 61/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7351.2271 - mae: 7351.2271\n","Epoch 62/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7302.1436 - mae: 7302.1436\n","Epoch 63/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7393.0874 - mae: 7393.0874\n","Epoch 64/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7442.2881 - mae: 7442.2881\n","Epoch 65/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7492.6782 - mae: 7492.6782\n","Epoch 66/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7561.9165 - mae: 7561.9165\n","Epoch 67/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7340.5137 - mae: 7340.5137\n","Epoch 68/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7496.0840 - mae: 7496.0840\n","Epoch 69/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7617.0303 - mae: 7617.0303\n","Epoch 70/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7641.1948 - mae: 7641.1948\n","Epoch 71/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7084.2744 - mae: 7084.2744\n","Epoch 72/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7240.4902 - mae: 7240.4902\n","Epoch 73/100\n","34/34 [==============================] - 0s 3ms/step - loss: 7283.4888 - mae: 7283.4888\n","Epoch 74/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7335.5088 - mae: 7335.5088\n","Epoch 75/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7275.6396 - mae: 7275.6396\n","Epoch 76/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7313.1860 - mae: 7313.1860\n","Epoch 77/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7485.7588 - mae: 7485.7588\n","Epoch 78/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7352.2803 - mae: 7352.2803\n","Epoch 79/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7520.5703 - mae: 7520.5703\n","Epoch 80/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7279.3779 - mae: 7279.3779\n","Epoch 81/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7273.8477 - mae: 7273.8477\n","Epoch 82/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7176.5215 - mae: 7176.5215\n","Epoch 83/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7425.6289 - mae: 7425.6289\n","Epoch 84/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7403.1294 - mae: 7403.1294\n","Epoch 85/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7356.0088 - mae: 7356.0088\n","Epoch 86/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7484.7266 - mae: 7484.7266\n","Epoch 87/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7217.6074 - mae: 7217.6074\n","Epoch 88/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7261.0000 - mae: 7261.0000\n","Epoch 89/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7134.1562 - mae: 7134.1562\n","Epoch 90/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7083.4355 - mae: 7083.4355\n","Epoch 91/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7254.1782 - mae: 7254.1782\n","Epoch 92/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7268.7461 - mae: 7268.7461\n","Epoch 93/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7470.5215 - mae: 7470.5215\n","Epoch 94/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7210.9536 - mae: 7210.9536\n","Epoch 95/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7395.6816 - mae: 7395.6816\n","Epoch 96/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7328.0884 - mae: 7328.0884\n","Epoch 97/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7230.4380 - mae: 7230.4380\n","Epoch 98/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7261.3936 - mae: 7261.3936\n","Epoch 99/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7342.5684 - mae: 7342.5684\n","Epoch 100/100\n","34/34 [==============================] - 0s 2ms/step - loss: 7106.1714 - mae: 7106.1714\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc74ff3b10>"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["# tensors can work with pandas data frames just as they do with NumPy arrays since pandas data frames are built on top of NumPy arrays"],"metadata":{"id":"Uz_L5Nfh1NFO","executionInfo":{"status":"ok","timestamp":1663810823218,"user_tz":420,"elapsed":125,"user":{"displayName":"A SAL","userId":"12890107829430246221"}}},"execution_count":109,"outputs":[]},{"cell_type":"code","source":["# Check the results of the insurance model on the test data\n","insurance_model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iivYj4OV2mMN","executionInfo":{"status":"ok","timestamp":1663810856066,"user_tz":420,"elapsed":334,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"9683dda2-c5ad-433d-e3c6-67ff3c670ad6"},"execution_count":110,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 7023.3291 - mae: 7023.3291\n"]},{"output_type":"execute_result","data":{"text/plain":["[7023.3291015625, 7023.3291015625]"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["y_train.median(), y_train.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SfO69pXd2uKM","executionInfo":{"status":"ok","timestamp":1663810886839,"user_tz":420,"elapsed":135,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"6a6eab8b-270c-4da3-e014-c80553e83778"},"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(9575.4421, 13346.089736364485)"]},"metadata":{},"execution_count":111}]},{"cell_type":"markdown","source":["^^ median and mean way too off... (loss and mae too big?) so improve model!\n","\n","To (try) ro improve our model, we'll run 2 experiments:\n","1. Add an extra alyer with more hidden units\n","2. Train for longer\n","3. (insert own experiment here)"],"metadata":{"id":"vvajcSQx3b2u"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model\n","insurance_model_2 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100), # extra leyer with extra 100 hidden units\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1),\n","])\n","\n","# 2. Compile the model\n","insurance_model_2.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.Adam(),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model\n","insurance_model_2.fit(X_train, y_train, epochs=100, verbose=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pQ4HbjpD3Yng","executionInfo":{"status":"ok","timestamp":1663811412710,"user_tz":420,"elapsed":11059,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"a78a1052-b58b-448e-a717-4388f3f3e5cf"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7c864f10>"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["# Evaluate the larger model (insurance_model_2)\n","insurance_model_2.fit(X_train, y_train, epochs=100, verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ee0p3eBu4Nxc","executionInfo":{"status":"ok","timestamp":1663811433232,"user_tz":420,"elapsed":20534,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"1e947d52-170d-40d6-968a-272131f267d3"},"execution_count":120,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4989.4756 - mae: 4989.4756\n","Epoch 2/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4914.9385 - mae: 4914.9385\n","Epoch 3/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4841.3486 - mae: 4841.3486\n","Epoch 4/100\n","34/34 [==============================] - 0s 3ms/step - loss: 4761.7690 - mae: 4761.7690\n","Epoch 5/100\n","34/34 [==============================] - 0s 3ms/step - loss: 4682.7061 - mae: 4682.7061\n","Epoch 6/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4603.9321 - mae: 4603.9321\n","Epoch 7/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4509.5996 - mae: 4509.5996\n","Epoch 8/100\n","34/34 [==============================] - 0s 3ms/step - loss: 4419.8442 - mae: 4419.8442\n","Epoch 9/100\n","34/34 [==============================] - 0s 3ms/step - loss: 4347.3979 - mae: 4347.3979\n","Epoch 10/100\n","34/34 [==============================] - 0s 3ms/step - loss: 4253.3604 - mae: 4253.3604\n","Epoch 11/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4175.2764 - mae: 4175.2764\n","Epoch 12/100\n","34/34 [==============================] - 0s 2ms/step - loss: 4100.2339 - mae: 4100.2339\n","Epoch 13/100\n","34/34 [==============================] - 0s 3ms/step - loss: 4029.2649 - mae: 4029.2649\n","Epoch 14/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3977.6355 - mae: 3977.6355\n","Epoch 15/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3936.2954 - mae: 3936.2954\n","Epoch 16/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3908.2585 - mae: 3908.2585\n","Epoch 17/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3896.7791 - mae: 3896.7791\n","Epoch 18/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3862.3840 - mae: 3862.3840\n","Epoch 19/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3852.5813 - mae: 3852.5813\n","Epoch 20/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3841.7783 - mae: 3841.7783\n","Epoch 21/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3827.9763 - mae: 3827.9763\n","Epoch 22/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3814.1816 - mae: 3814.1816\n","Epoch 23/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3807.3433 - mae: 3807.3433\n","Epoch 24/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3803.4751 - mae: 3803.4751\n","Epoch 25/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3806.3401 - mae: 3806.3401\n","Epoch 26/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3793.1516 - mae: 3793.1516\n","Epoch 27/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3787.9104 - mae: 3787.9104\n","Epoch 28/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3796.7505 - mae: 3796.7505\n","Epoch 29/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3780.5596 - mae: 3780.5596\n","Epoch 30/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3784.5251 - mae: 3784.5251\n","Epoch 31/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3784.1865 - mae: 3784.1865\n","Epoch 32/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3777.5425 - mae: 3777.5425\n","Epoch 33/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3776.4482 - mae: 3776.4482\n","Epoch 34/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3767.9023 - mae: 3767.9023\n","Epoch 35/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3770.5906 - mae: 3770.5906\n","Epoch 36/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3766.4436 - mae: 3766.4436\n","Epoch 37/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3762.5281 - mae: 3762.5281\n","Epoch 38/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3771.9470 - mae: 3771.9470\n","Epoch 39/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3758.5349 - mae: 3758.5349\n","Epoch 40/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3777.9016 - mae: 3777.9016\n","Epoch 41/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3763.5466 - mae: 3763.5466\n","Epoch 42/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3757.8320 - mae: 3757.8320\n","Epoch 43/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3754.5969 - mae: 3754.5969\n","Epoch 44/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3750.5662 - mae: 3750.5662\n","Epoch 45/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3745.7498 - mae: 3745.7498\n","Epoch 46/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3746.2803 - mae: 3746.2803\n","Epoch 47/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3746.3315 - mae: 3746.3315\n","Epoch 48/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3743.7607 - mae: 3743.7607\n","Epoch 49/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3750.6458 - mae: 3750.6458\n","Epoch 50/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3738.6418 - mae: 3738.6418\n","Epoch 51/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3739.3230 - mae: 3739.3230\n","Epoch 52/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3743.1721 - mae: 3743.1721\n","Epoch 53/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3733.4570 - mae: 3733.4570\n","Epoch 54/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3740.0420 - mae: 3740.0420\n","Epoch 55/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3730.4871 - mae: 3730.4871\n","Epoch 56/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3728.5632 - mae: 3728.5632\n","Epoch 57/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3726.1628 - mae: 3726.1628\n","Epoch 58/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3730.2346 - mae: 3730.2346\n","Epoch 59/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3736.1382 - mae: 3736.1382\n","Epoch 60/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3726.4492 - mae: 3726.4492\n","Epoch 61/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3731.3318 - mae: 3731.3318\n","Epoch 62/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3727.8149 - mae: 3727.8149\n","Epoch 63/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3720.4146 - mae: 3720.4146\n","Epoch 64/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3718.5562 - mae: 3718.5562\n","Epoch 65/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3718.3484 - mae: 3718.3484\n","Epoch 66/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3724.4446 - mae: 3724.4446\n","Epoch 67/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3721.0522 - mae: 3721.0522\n","Epoch 68/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3718.0542 - mae: 3718.0542\n","Epoch 69/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3710.9207 - mae: 3710.9207\n","Epoch 70/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3709.1326 - mae: 3709.1326\n","Epoch 71/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3717.2358 - mae: 3717.2358\n","Epoch 72/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3708.6267 - mae: 3708.6267\n","Epoch 73/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3710.4854 - mae: 3710.4854\n","Epoch 74/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3701.2490 - mae: 3701.2490\n","Epoch 75/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3698.9312 - mae: 3698.9312\n","Epoch 76/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3697.9221 - mae: 3697.9221\n","Epoch 77/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3697.8833 - mae: 3697.8833\n","Epoch 78/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3694.8235 - mae: 3694.8235\n","Epoch 79/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3694.8291 - mae: 3694.8291\n","Epoch 80/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3691.4258 - mae: 3691.4258\n","Epoch 81/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3694.0627 - mae: 3694.0627\n","Epoch 82/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3687.4170 - mae: 3687.4170\n","Epoch 83/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3689.8279 - mae: 3689.8279\n","Epoch 84/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3686.1572 - mae: 3686.1572\n","Epoch 85/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3680.1565 - mae: 3680.1565\n","Epoch 86/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3681.0054 - mae: 3681.0054\n","Epoch 87/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3684.2095 - mae: 3684.2095\n","Epoch 88/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3680.8059 - mae: 3680.8059\n","Epoch 89/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3677.2244 - mae: 3677.2244\n","Epoch 90/100\n","34/34 [==============================] - 0s 2ms/step - loss: 3686.4341 - mae: 3686.4341\n","Epoch 91/100\n","34/34 [==============================] - 0s 4ms/step - loss: 3686.9019 - mae: 3686.9019\n","Epoch 92/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3676.3940 - mae: 3676.3940\n","Epoch 93/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3672.4214 - mae: 3672.4214\n","Epoch 94/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3670.8767 - mae: 3670.8767\n","Epoch 95/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3668.1282 - mae: 3668.1282\n","Epoch 96/100\n","34/34 [==============================] - 0s 4ms/step - loss: 3667.2776 - mae: 3667.2776\n","Epoch 97/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3665.4045 - mae: 3665.4045\n","Epoch 98/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3659.3208 - mae: 3659.3208\n","Epoch 99/100\n","34/34 [==============================] - 0s 4ms/step - loss: 3677.0227 - mae: 3677.0227\n","Epoch 100/100\n","34/34 [==============================] - 0s 3ms/step - loss: 3667.1895 - mae: 3667.1895\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fcc7c7595d0>"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["insurance_model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ub4cCNP44aYt","executionInfo":{"status":"ok","timestamp":1663811435697,"user_tz":420,"elapsed":305,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"0cf5594a-d4a1-4393-acfe-ce2d0ef710a6"},"execution_count":121,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 7023.3291 - mae: 7023.3291\n"]},{"output_type":"execute_result","data":{"text/plain":["[7023.3291015625, 7023.3291015625]"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["insurance_model_2.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DMlWUe8t47rN","executionInfo":{"status":"ok","timestamp":1663811463326,"user_tz":420,"elapsed":310,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"4a0b7618-a233-47d5-d764-199acc81ec81"},"execution_count":122,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3494.7285 - mae: 3494.7285\n"]},{"output_type":"execute_result","data":{"text/plain":["[3494.728515625, 3494.728515625]"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model\n","insurance_model_3 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100), # extra leyer with extra 100 hidden units\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1),\n","])\n","\n","# 2. Compile the model\n","insurance_model_3.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.Adam(),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model\n","history = insurance_model_3.fit(X_train, y_train, epochs=200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bjPWCQKx5Cam","executionInfo":{"status":"ok","timestamp":1663812336819,"user_tz":420,"elapsed":19996,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"e28cbb24-ab93-4825-b122-bc4eacd840a9"},"execution_count":128,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","34/34 [==============================] - 1s 3ms/step - loss: 13273.1602 - mae: 13273.1602\n","Epoch 2/200\n","34/34 [==============================] - 0s 2ms/step - loss: 13104.4297 - mae: 13104.4297\n","Epoch 3/200\n","34/34 [==============================] - 0s 2ms/step - loss: 12749.5420 - mae: 12749.5420\n","Epoch 4/200\n","34/34 [==============================] - 0s 2ms/step - loss: 12055.7500 - mae: 12055.7500\n","Epoch 5/200\n","34/34 [==============================] - 0s 3ms/step - loss: 10905.8154 - mae: 10905.8154\n","Epoch 6/200\n","34/34 [==============================] - 0s 2ms/step - loss: 9457.7217 - mae: 9457.7217\n","Epoch 7/200\n","34/34 [==============================] - 0s 2ms/step - loss: 8147.6543 - mae: 8147.6543\n","Epoch 8/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7528.8413 - mae: 7528.8413\n","Epoch 9/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7429.1528 - mae: 7429.1528\n","Epoch 10/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7409.0811 - mae: 7409.0811\n","Epoch 11/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7390.8042 - mae: 7390.8042\n","Epoch 12/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7368.9170 - mae: 7368.9170\n","Epoch 13/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7348.5190 - mae: 7348.5190\n","Epoch 14/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7326.4893 - mae: 7326.4893\n","Epoch 15/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7307.5811 - mae: 7307.5811\n","Epoch 16/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7285.7734 - mae: 7285.7734\n","Epoch 17/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7265.7104 - mae: 7265.7104\n","Epoch 18/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7242.5488 - mae: 7242.5488\n","Epoch 19/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7220.5068 - mae: 7220.5068\n","Epoch 20/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7197.1978 - mae: 7197.1978\n","Epoch 21/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7179.0195 - mae: 7179.0195\n","Epoch 22/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7151.2104 - mae: 7151.2104\n","Epoch 23/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7126.4639 - mae: 7126.4639\n","Epoch 24/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7101.9199 - mae: 7101.9199\n","Epoch 25/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7084.3379 - mae: 7084.3379\n","Epoch 26/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7052.3291 - mae: 7052.3291\n","Epoch 27/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7024.3511 - mae: 7024.3511\n","Epoch 28/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6996.6963 - mae: 6996.6963\n","Epoch 29/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6969.0112 - mae: 6969.0112\n","Epoch 30/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6942.1899 - mae: 6942.1899\n","Epoch 31/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6911.7280 - mae: 6911.7280\n","Epoch 32/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6884.0205 - mae: 6884.0205\n","Epoch 33/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6853.4648 - mae: 6853.4648\n","Epoch 34/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6823.0674 - mae: 6823.0674\n","Epoch 35/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6789.6855 - mae: 6789.6855\n","Epoch 36/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6755.7646 - mae: 6755.7646\n","Epoch 37/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6720.2026 - mae: 6720.2026\n","Epoch 38/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6689.7158 - mae: 6689.7158\n","Epoch 39/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6652.4609 - mae: 6652.4609\n","Epoch 40/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6618.1016 - mae: 6618.1016\n","Epoch 41/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6585.8633 - mae: 6585.8633\n","Epoch 42/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6559.4956 - mae: 6559.4956\n","Epoch 43/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6530.0439 - mae: 6530.0439\n","Epoch 44/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6506.8066 - mae: 6506.8066\n","Epoch 45/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6493.5718 - mae: 6493.5718\n","Epoch 46/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6475.9258 - mae: 6475.9258\n","Epoch 47/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6458.8979 - mae: 6458.8979\n","Epoch 48/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6445.1494 - mae: 6445.1494\n","Epoch 49/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6430.9639 - mae: 6430.9639\n","Epoch 50/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6417.7510 - mae: 6417.7510\n","Epoch 51/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6403.2759 - mae: 6403.2759\n","Epoch 52/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6392.4141 - mae: 6392.4141\n","Epoch 53/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6378.7451 - mae: 6378.7451\n","Epoch 54/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6364.9131 - mae: 6364.9131\n","Epoch 55/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6351.5273 - mae: 6351.5273\n","Epoch 56/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6337.6602 - mae: 6337.6602\n","Epoch 57/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6324.8369 - mae: 6324.8369\n","Epoch 58/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6310.1943 - mae: 6310.1943\n","Epoch 59/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6295.6035 - mae: 6295.6035\n","Epoch 60/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6284.8696 - mae: 6284.8696\n","Epoch 61/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6265.6411 - mae: 6265.6411\n","Epoch 62/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6253.0112 - mae: 6253.0112\n","Epoch 63/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6234.9292 - mae: 6234.9292\n","Epoch 64/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6218.0435 - mae: 6218.0435\n","Epoch 65/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6201.1899 - mae: 6201.1899\n","Epoch 66/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6183.9590 - mae: 6183.9590\n","Epoch 67/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6171.2993 - mae: 6171.2993\n","Epoch 68/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6148.8398 - mae: 6148.8398\n","Epoch 69/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6132.5981 - mae: 6132.5981\n","Epoch 70/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6112.3853 - mae: 6112.3853\n","Epoch 71/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6092.7202 - mae: 6092.7202\n","Epoch 72/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6073.7422 - mae: 6073.7422\n","Epoch 73/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6059.4873 - mae: 6059.4873\n","Epoch 74/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6031.3848 - mae: 6031.3848\n","Epoch 75/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6010.3350 - mae: 6010.3350\n","Epoch 76/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5995.2178 - mae: 5995.2178\n","Epoch 77/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5963.0723 - mae: 5963.0723\n","Epoch 78/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5940.0605 - mae: 5940.0605\n","Epoch 79/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5915.1064 - mae: 5915.1064\n","Epoch 80/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5887.9990 - mae: 5887.9990\n","Epoch 81/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5861.6992 - mae: 5861.6992\n","Epoch 82/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5834.3066 - mae: 5834.3066\n","Epoch 83/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5805.8237 - mae: 5805.8237\n","Epoch 84/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5772.3232 - mae: 5772.3232\n","Epoch 85/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5745.1514 - mae: 5745.1514\n","Epoch 86/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5711.3477 - mae: 5711.3477\n","Epoch 87/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5674.5215 - mae: 5674.5215\n","Epoch 88/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5639.4927 - mae: 5639.4927\n","Epoch 89/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5600.6655 - mae: 5600.6655\n","Epoch 90/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5559.4326 - mae: 5559.4326\n","Epoch 91/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5523.6187 - mae: 5523.6187\n","Epoch 92/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5474.1250 - mae: 5474.1250\n","Epoch 93/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5432.2656 - mae: 5432.2656\n","Epoch 94/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5386.0527 - mae: 5386.0527\n","Epoch 95/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5333.1812 - mae: 5333.1812\n","Epoch 96/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5288.8159 - mae: 5288.8159\n","Epoch 97/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5234.6792 - mae: 5234.6792\n","Epoch 98/200\n","34/34 [==============================] - 0s 3ms/step - loss: 5170.9360 - mae: 5170.9360\n","Epoch 99/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5112.9443 - mae: 5112.9443\n","Epoch 100/200\n","34/34 [==============================] - 0s 4ms/step - loss: 5059.8643 - mae: 5059.8643\n","Epoch 101/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4987.6191 - mae: 4987.6191\n","Epoch 102/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4915.2905 - mae: 4915.2905\n","Epoch 103/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4847.3604 - mae: 4847.3604\n","Epoch 104/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4768.0151 - mae: 4768.0151\n","Epoch 105/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4683.4727 - mae: 4683.4727\n","Epoch 106/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4600.5054 - mae: 4600.5054\n","Epoch 107/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4513.1436 - mae: 4513.1436\n","Epoch 108/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4422.2983 - mae: 4422.2983\n","Epoch 109/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4339.9600 - mae: 4339.9600\n","Epoch 110/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4254.3916 - mae: 4254.3916\n","Epoch 111/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4173.1797 - mae: 4173.1797\n","Epoch 112/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4102.2944 - mae: 4102.2944\n","Epoch 113/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4031.9590 - mae: 4031.9590\n","Epoch 114/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3986.0220 - mae: 3986.0220\n","Epoch 115/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3943.2346 - mae: 3943.2346\n","Epoch 116/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3918.8977 - mae: 3918.8977\n","Epoch 117/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3895.5610 - mae: 3895.5610\n","Epoch 118/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3869.5679 - mae: 3869.5679\n","Epoch 119/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3850.2136 - mae: 3850.2136\n","Epoch 120/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3834.7349 - mae: 3834.7349\n","Epoch 121/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3827.0952 - mae: 3827.0952\n","Epoch 122/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3821.6382 - mae: 3821.6382\n","Epoch 123/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3813.8315 - mae: 3813.8315\n","Epoch 124/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3805.7307 - mae: 3805.7307\n","Epoch 125/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3794.7085 - mae: 3794.7085\n","Epoch 126/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3804.4946 - mae: 3804.4946\n","Epoch 127/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3796.0596 - mae: 3796.0596\n","Epoch 128/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3791.0422 - mae: 3791.0422\n","Epoch 129/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3800.0696 - mae: 3800.0696\n","Epoch 130/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3788.5005 - mae: 3788.5005\n","Epoch 131/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3780.8442 - mae: 3780.8442\n","Epoch 132/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3774.5413 - mae: 3774.5413\n","Epoch 133/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3771.0156 - mae: 3771.0156\n","Epoch 134/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3769.3762 - mae: 3769.3762\n","Epoch 135/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3766.7612 - mae: 3766.7612\n","Epoch 136/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3765.5510 - mae: 3765.5510\n","Epoch 137/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3774.5034 - mae: 3774.5034\n","Epoch 138/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3785.3909 - mae: 3785.3909\n","Epoch 139/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3761.1299 - mae: 3761.1299\n","Epoch 140/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3764.1753 - mae: 3764.1753\n","Epoch 141/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3763.9250 - mae: 3763.9250\n","Epoch 142/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3762.7959 - mae: 3762.7959\n","Epoch 143/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3754.4397 - mae: 3754.4397\n","Epoch 144/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3750.3347 - mae: 3750.3347\n","Epoch 145/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3750.4006 - mae: 3750.4006\n","Epoch 146/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3755.4736 - mae: 3755.4736\n","Epoch 147/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3750.3223 - mae: 3750.3223\n","Epoch 148/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3758.1089 - mae: 3758.1089\n","Epoch 149/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3743.4858 - mae: 3743.4858\n","Epoch 150/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3738.5342 - mae: 3738.5342\n","Epoch 151/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3740.1384 - mae: 3740.1384\n","Epoch 152/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3742.4954 - mae: 3742.4954\n","Epoch 153/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3744.4395 - mae: 3744.4395\n","Epoch 154/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3737.1826 - mae: 3737.1826\n","Epoch 155/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3737.6541 - mae: 3737.6541\n","Epoch 156/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3737.1663 - mae: 3737.1663\n","Epoch 157/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3733.1101 - mae: 3733.1101\n","Epoch 158/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3729.5813 - mae: 3729.5813\n","Epoch 159/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3725.9053 - mae: 3725.9053\n","Epoch 160/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3733.2822 - mae: 3733.2822\n","Epoch 161/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3728.2559 - mae: 3728.2559\n","Epoch 162/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3724.5825 - mae: 3724.5825\n","Epoch 163/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3723.0806 - mae: 3723.0806\n","Epoch 164/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3726.9475 - mae: 3726.9475\n","Epoch 165/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3716.5430 - mae: 3716.5430\n","Epoch 166/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3721.9155 - mae: 3721.9155\n","Epoch 167/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3721.1814 - mae: 3721.1814\n","Epoch 168/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3715.2458 - mae: 3715.2458\n","Epoch 169/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3713.9756 - mae: 3713.9756\n","Epoch 170/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3707.9922 - mae: 3707.9922\n","Epoch 171/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3707.4158 - mae: 3707.4158\n","Epoch 172/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3710.6833 - mae: 3710.6833\n","Epoch 173/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3703.3618 - mae: 3703.3618\n","Epoch 174/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3710.9385 - mae: 3710.9385\n","Epoch 175/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3713.0417 - mae: 3713.0417\n","Epoch 176/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3705.0571 - mae: 3705.0571\n","Epoch 177/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3698.9333 - mae: 3698.9333\n","Epoch 178/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3697.9983 - mae: 3697.9983\n","Epoch 179/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3704.9150 - mae: 3704.9150\n","Epoch 180/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3710.3679 - mae: 3710.3679\n","Epoch 181/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3696.6482 - mae: 3696.6482\n","Epoch 182/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3692.7329 - mae: 3692.7329\n","Epoch 183/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3691.1655 - mae: 3691.1655\n","Epoch 184/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3699.2437 - mae: 3699.2437\n","Epoch 185/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3693.2480 - mae: 3693.2480\n","Epoch 186/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3696.1389 - mae: 3696.1389\n","Epoch 187/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3687.8640 - mae: 3687.8640\n","Epoch 188/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3693.3562 - mae: 3693.3562\n","Epoch 189/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3682.7324 - mae: 3682.7324\n","Epoch 190/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3683.2891 - mae: 3683.2891\n","Epoch 191/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3697.6536 - mae: 3697.6536\n","Epoch 192/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3684.6665 - mae: 3684.6665\n","Epoch 193/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3675.5154 - mae: 3675.5154\n","Epoch 194/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3676.3923 - mae: 3676.3923\n","Epoch 195/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3672.8452 - mae: 3672.8452\n","Epoch 196/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3682.0283 - mae: 3682.0283\n","Epoch 197/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3665.7961 - mae: 3665.7961\n","Epoch 198/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3671.7419 - mae: 3671.7419\n","Epoch 199/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3680.5464 - mae: 3680.5464\n","Epoch 200/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3665.6401 - mae: 3665.6401\n"]}]},{"cell_type":"code","source":["# Evaluate our third model\n","insurance_model_3.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ksCrnEcL5h16","executionInfo":{"status":"ok","timestamp":1663812344353,"user_tz":420,"elapsed":318,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"bd80b549-5945-45a5-d7a6-32b5616f3c4a"},"execution_count":129,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3491.2961 - mae: 3491.2961\n"]},{"output_type":"execute_result","data":{"text/plain":["[3491.296142578125, 3491.296142578125]"]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["# Plot history (also known as a loss curve or a training curve)\n","pd.DataFrame(history.history).plot()\n","plt.ylabel(\"loss\")\n","plt.xlabel(\"epochs\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"8RoDbqC05sde","executionInfo":{"status":"ok","timestamp":1663812366736,"user_tz":420,"elapsed":361,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"4e350c27-041e-4d85-a894-92db8a6fb2a6"},"execution_count":131,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'epochs')"]},"metadata":{},"execution_count":131},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model\n","insurance_model_4 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100), # extra leyer with extra 100 hidden units\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1),\n","])\n","\n","# 2. Compile the model\n","insurance_model_4.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.Adam(),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model\n","history2 = insurance_model_4.fit(X_train, y_train, epochs=500)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I_3QnkER8e9v","executionInfo":{"status":"ok","timestamp":1663812475462,"user_tz":420,"elapsed":53012,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"54d002a9-d666-4289-b33f-129389c60fcf"},"execution_count":132,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","34/34 [==============================] - 1s 2ms/step - loss: 13273.1602 - mae: 13273.1602\n","Epoch 2/500\n","34/34 [==============================] - 0s 2ms/step - loss: 13104.4297 - mae: 13104.4297\n","Epoch 3/500\n","34/34 [==============================] - 0s 2ms/step - loss: 12749.5420 - mae: 12749.5420\n","Epoch 4/500\n","34/34 [==============================] - 0s 3ms/step - loss: 12055.7500 - mae: 12055.7500\n","Epoch 5/500\n","34/34 [==============================] - 0s 2ms/step - loss: 10905.8154 - mae: 10905.8154\n","Epoch 6/500\n","34/34 [==============================] - 0s 2ms/step - loss: 9457.7217 - mae: 9457.7217\n","Epoch 7/500\n","34/34 [==============================] - 0s 2ms/step - loss: 8147.6543 - mae: 8147.6543\n","Epoch 8/500\n","34/34 [==============================] - 0s 3ms/step - loss: 7528.8413 - mae: 7528.8413\n","Epoch 9/500\n","34/34 [==============================] - 0s 3ms/step - loss: 7429.1528 - mae: 7429.1528\n","Epoch 10/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7409.0811 - mae: 7409.0811\n","Epoch 11/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7390.8042 - mae: 7390.8042\n","Epoch 12/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7368.9170 - mae: 7368.9170\n","Epoch 13/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7348.5190 - mae: 7348.5190\n","Epoch 14/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7326.4893 - mae: 7326.4893\n","Epoch 15/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7307.5811 - mae: 7307.5811\n","Epoch 16/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7285.7734 - mae: 7285.7734\n","Epoch 17/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7265.7104 - mae: 7265.7104\n","Epoch 18/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7242.5488 - mae: 7242.5488\n","Epoch 19/500\n","34/34 [==============================] - 0s 3ms/step - loss: 7220.5068 - mae: 7220.5068\n","Epoch 20/500\n","34/34 [==============================] - 0s 3ms/step - loss: 7197.1978 - mae: 7197.1978\n","Epoch 21/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7179.0195 - mae: 7179.0195\n","Epoch 22/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7151.2104 - mae: 7151.2104\n","Epoch 23/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7126.4639 - mae: 7126.4639\n","Epoch 24/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7101.9199 - mae: 7101.9199\n","Epoch 25/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7084.3379 - mae: 7084.3379\n","Epoch 26/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7052.3291 - mae: 7052.3291\n","Epoch 27/500\n","34/34 [==============================] - 0s 2ms/step - loss: 7024.3511 - mae: 7024.3511\n","Epoch 28/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6996.6963 - mae: 6996.6963\n","Epoch 29/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6969.0112 - mae: 6969.0112\n","Epoch 30/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6942.1899 - mae: 6942.1899\n","Epoch 31/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6911.7280 - mae: 6911.7280\n","Epoch 32/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6884.0205 - mae: 6884.0205\n","Epoch 33/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6853.4648 - mae: 6853.4648\n","Epoch 34/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6823.0674 - mae: 6823.0674\n","Epoch 35/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6789.6855 - mae: 6789.6855\n","Epoch 36/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6755.7646 - mae: 6755.7646\n","Epoch 37/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6720.2026 - mae: 6720.2026\n","Epoch 38/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6689.7158 - mae: 6689.7158\n","Epoch 39/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6652.4609 - mae: 6652.4609\n","Epoch 40/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6618.1016 - mae: 6618.1016\n","Epoch 41/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6585.8633 - mae: 6585.8633\n","Epoch 42/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6559.4956 - mae: 6559.4956\n","Epoch 43/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6530.0439 - mae: 6530.0439\n","Epoch 44/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6506.8066 - mae: 6506.8066\n","Epoch 45/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6493.5718 - mae: 6493.5718\n","Epoch 46/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6475.9258 - mae: 6475.9258\n","Epoch 47/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6458.8979 - mae: 6458.8979\n","Epoch 48/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6445.1494 - mae: 6445.1494\n","Epoch 49/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6430.9639 - mae: 6430.9639\n","Epoch 50/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6417.7510 - mae: 6417.7510\n","Epoch 51/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6403.2759 - mae: 6403.2759\n","Epoch 52/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6392.4141 - mae: 6392.4141\n","Epoch 53/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6378.7451 - mae: 6378.7451\n","Epoch 54/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6364.9131 - mae: 6364.9131\n","Epoch 55/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6351.5273 - mae: 6351.5273\n","Epoch 56/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6337.6602 - mae: 6337.6602\n","Epoch 57/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6324.8369 - mae: 6324.8369\n","Epoch 58/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6310.1943 - mae: 6310.1943\n","Epoch 59/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6295.6035 - mae: 6295.6035\n","Epoch 60/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6284.8696 - mae: 6284.8696\n","Epoch 61/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6265.6411 - mae: 6265.6411\n","Epoch 62/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6253.0112 - mae: 6253.0112\n","Epoch 63/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6234.9292 - mae: 6234.9292\n","Epoch 64/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6218.0435 - mae: 6218.0435\n","Epoch 65/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6201.1899 - mae: 6201.1899\n","Epoch 66/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6183.9590 - mae: 6183.9590\n","Epoch 67/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6171.2993 - mae: 6171.2993\n","Epoch 68/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6148.8398 - mae: 6148.8398\n","Epoch 69/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6132.5981 - mae: 6132.5981\n","Epoch 70/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6112.3853 - mae: 6112.3853\n","Epoch 71/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6092.7202 - mae: 6092.7202\n","Epoch 72/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6073.7422 - mae: 6073.7422\n","Epoch 73/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6059.4873 - mae: 6059.4873\n","Epoch 74/500\n","34/34 [==============================] - 0s 3ms/step - loss: 6031.3848 - mae: 6031.3848\n","Epoch 75/500\n","34/34 [==============================] - 0s 2ms/step - loss: 6010.3350 - mae: 6010.3350\n","Epoch 76/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5995.2178 - mae: 5995.2178\n","Epoch 77/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5963.0723 - mae: 5963.0723\n","Epoch 78/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5940.0605 - mae: 5940.0605\n","Epoch 79/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5915.1064 - mae: 5915.1064\n","Epoch 80/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5887.9990 - mae: 5887.9990\n","Epoch 81/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5861.6992 - mae: 5861.6992\n","Epoch 82/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5834.3066 - mae: 5834.3066\n","Epoch 83/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5805.8237 - mae: 5805.8237\n","Epoch 84/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5772.3232 - mae: 5772.3232\n","Epoch 85/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5745.1514 - mae: 5745.1514\n","Epoch 86/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5711.3477 - mae: 5711.3477\n","Epoch 87/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5674.5215 - mae: 5674.5215\n","Epoch 88/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5639.4927 - mae: 5639.4927\n","Epoch 89/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5600.6655 - mae: 5600.6655\n","Epoch 90/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5559.4326 - mae: 5559.4326\n","Epoch 91/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5523.6187 - mae: 5523.6187\n","Epoch 92/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5474.1250 - mae: 5474.1250\n","Epoch 93/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5432.2656 - mae: 5432.2656\n","Epoch 94/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5386.0527 - mae: 5386.0527\n","Epoch 95/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5333.1812 - mae: 5333.1812\n","Epoch 96/500\n","34/34 [==============================] - 0s 3ms/step - loss: 5288.8159 - mae: 5288.8159\n","Epoch 97/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5234.6792 - mae: 5234.6792\n","Epoch 98/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5170.9360 - mae: 5170.9360\n","Epoch 99/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5112.9443 - mae: 5112.9443\n","Epoch 100/500\n","34/34 [==============================] - 0s 2ms/step - loss: 5059.8643 - mae: 5059.8643\n","Epoch 101/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4987.6191 - mae: 4987.6191\n","Epoch 102/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4915.2905 - mae: 4915.2905\n","Epoch 103/500\n","34/34 [==============================] - 0s 3ms/step - loss: 4847.3604 - mae: 4847.3604\n","Epoch 104/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4768.0151 - mae: 4768.0151\n","Epoch 105/500\n","34/34 [==============================] - 0s 3ms/step - loss: 4683.4727 - mae: 4683.4727\n","Epoch 106/500\n","34/34 [==============================] - 0s 3ms/step - loss: 4600.5054 - mae: 4600.5054\n","Epoch 107/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4513.1436 - mae: 4513.1436\n","Epoch 108/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4422.2983 - mae: 4422.2983\n","Epoch 109/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4339.9600 - mae: 4339.9600\n","Epoch 110/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4254.3916 - mae: 4254.3916\n","Epoch 111/500\n","34/34 [==============================] - 0s 3ms/step - loss: 4173.1797 - mae: 4173.1797\n","Epoch 112/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4102.2944 - mae: 4102.2944\n","Epoch 113/500\n","34/34 [==============================] - 0s 2ms/step - loss: 4031.9590 - mae: 4031.9590\n","Epoch 114/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3986.0220 - mae: 3986.0220\n","Epoch 115/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3943.2346 - mae: 3943.2346\n","Epoch 116/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3918.8977 - mae: 3918.8977\n","Epoch 117/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3895.5610 - mae: 3895.5610\n","Epoch 118/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3869.5679 - mae: 3869.5679\n","Epoch 119/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3850.2136 - mae: 3850.2136\n","Epoch 120/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3834.7349 - mae: 3834.7349\n","Epoch 121/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3827.0952 - mae: 3827.0952\n","Epoch 122/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3821.6382 - mae: 3821.6382\n","Epoch 123/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3813.8315 - mae: 3813.8315\n","Epoch 124/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3805.7307 - mae: 3805.7307\n","Epoch 125/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3794.7085 - mae: 3794.7085\n","Epoch 126/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3804.4946 - mae: 3804.4946\n","Epoch 127/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3796.0596 - mae: 3796.0596\n","Epoch 128/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3791.0422 - mae: 3791.0422\n","Epoch 129/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3800.0696 - mae: 3800.0696\n","Epoch 130/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3788.5005 - mae: 3788.5005\n","Epoch 131/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3780.8442 - mae: 3780.8442\n","Epoch 132/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3774.5413 - mae: 3774.5413\n","Epoch 133/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3771.0156 - mae: 3771.0156\n","Epoch 134/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3769.3762 - mae: 3769.3762\n","Epoch 135/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3766.7612 - mae: 3766.7612\n","Epoch 136/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3765.5510 - mae: 3765.5510\n","Epoch 137/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3774.5034 - mae: 3774.5034\n","Epoch 138/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3785.3909 - mae: 3785.3909\n","Epoch 139/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3761.1299 - mae: 3761.1299\n","Epoch 140/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3764.1753 - mae: 3764.1753\n","Epoch 141/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3763.9250 - mae: 3763.9250\n","Epoch 142/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3762.7959 - mae: 3762.7959\n","Epoch 143/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3754.4397 - mae: 3754.4397\n","Epoch 144/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3750.3347 - mae: 3750.3347\n","Epoch 145/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3750.4006 - mae: 3750.4006\n","Epoch 146/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3755.4736 - mae: 3755.4736\n","Epoch 147/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3750.3223 - mae: 3750.3223\n","Epoch 148/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3758.1089 - mae: 3758.1089\n","Epoch 149/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3743.4858 - mae: 3743.4858\n","Epoch 150/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3738.5342 - mae: 3738.5342\n","Epoch 151/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3740.1384 - mae: 3740.1384\n","Epoch 152/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3742.4954 - mae: 3742.4954\n","Epoch 153/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3744.4395 - mae: 3744.4395\n","Epoch 154/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3737.1826 - mae: 3737.1826\n","Epoch 155/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3737.6541 - mae: 3737.6541\n","Epoch 156/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3737.1663 - mae: 3737.1663\n","Epoch 157/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3733.1101 - mae: 3733.1101\n","Epoch 158/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3729.5813 - mae: 3729.5813\n","Epoch 159/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3725.9053 - mae: 3725.9053\n","Epoch 160/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3733.2822 - mae: 3733.2822\n","Epoch 161/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3728.2559 - mae: 3728.2559\n","Epoch 162/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3724.5825 - mae: 3724.5825\n","Epoch 163/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3723.0806 - mae: 3723.0806\n","Epoch 164/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3726.9475 - mae: 3726.9475\n","Epoch 165/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3716.5430 - mae: 3716.5430\n","Epoch 166/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3721.9155 - mae: 3721.9155\n","Epoch 167/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3721.1814 - mae: 3721.1814\n","Epoch 168/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3715.2458 - mae: 3715.2458\n","Epoch 169/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3713.9756 - mae: 3713.9756\n","Epoch 170/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3707.9922 - mae: 3707.9922\n","Epoch 171/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3707.4158 - mae: 3707.4158\n","Epoch 172/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3710.6833 - mae: 3710.6833\n","Epoch 173/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3703.3618 - mae: 3703.3618\n","Epoch 174/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3710.9385 - mae: 3710.9385\n","Epoch 175/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3713.0417 - mae: 3713.0417\n","Epoch 176/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3705.0571 - mae: 3705.0571\n","Epoch 177/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3698.9333 - mae: 3698.9333\n","Epoch 178/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3697.9983 - mae: 3697.9983\n","Epoch 179/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3704.9150 - mae: 3704.9150\n","Epoch 180/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3710.3679 - mae: 3710.3679\n","Epoch 181/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3696.6482 - mae: 3696.6482\n","Epoch 182/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3692.7329 - mae: 3692.7329\n","Epoch 183/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3691.1655 - mae: 3691.1655\n","Epoch 184/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3699.2437 - mae: 3699.2437\n","Epoch 185/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3693.2480 - mae: 3693.2480\n","Epoch 186/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3696.1389 - mae: 3696.1389\n","Epoch 187/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3687.8640 - mae: 3687.8640\n","Epoch 188/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3693.3562 - mae: 3693.3562\n","Epoch 189/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3682.7324 - mae: 3682.7324\n","Epoch 190/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3683.2891 - mae: 3683.2891\n","Epoch 191/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3697.6536 - mae: 3697.6536\n","Epoch 192/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3684.6665 - mae: 3684.6665\n","Epoch 193/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3675.5154 - mae: 3675.5154\n","Epoch 194/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3676.3923 - mae: 3676.3923\n","Epoch 195/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3672.8452 - mae: 3672.8452\n","Epoch 196/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3682.0283 - mae: 3682.0283\n","Epoch 197/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3665.7961 - mae: 3665.7961\n","Epoch 198/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3671.7419 - mae: 3671.7419\n","Epoch 199/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3680.5464 - mae: 3680.5464\n","Epoch 200/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3665.6401 - mae: 3665.6401\n","Epoch 201/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3664.7283 - mae: 3664.7283\n","Epoch 202/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3664.4663 - mae: 3664.4663\n","Epoch 203/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3663.0562 - mae: 3663.0562\n","Epoch 204/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3655.0967 - mae: 3655.0967\n","Epoch 205/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3663.9702 - mae: 3663.9702\n","Epoch 206/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3657.8708 - mae: 3657.8708\n","Epoch 207/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3656.2446 - mae: 3656.2446\n","Epoch 208/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3653.7644 - mae: 3653.7644\n","Epoch 209/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3653.3008 - mae: 3653.3008\n","Epoch 210/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3654.8423 - mae: 3654.8423\n","Epoch 211/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3655.9434 - mae: 3655.9434\n","Epoch 212/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3672.0022 - mae: 3672.0022\n","Epoch 213/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3656.8813 - mae: 3656.8813\n","Epoch 214/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3676.4402 - mae: 3676.4402\n","Epoch 215/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3652.4204 - mae: 3652.4204\n","Epoch 216/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3644.3799 - mae: 3644.3799\n","Epoch 217/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3646.7351 - mae: 3646.7351\n","Epoch 218/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3642.8015 - mae: 3642.8015\n","Epoch 219/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3653.9639 - mae: 3653.9639\n","Epoch 220/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3639.4590 - mae: 3639.4590\n","Epoch 221/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3643.2046 - mae: 3643.2046\n","Epoch 222/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3649.1143 - mae: 3649.1143\n","Epoch 223/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3633.1921 - mae: 3633.1921\n","Epoch 224/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3636.7673 - mae: 3636.7673\n","Epoch 225/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3631.1479 - mae: 3631.1479\n","Epoch 226/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3626.8916 - mae: 3626.8916\n","Epoch 227/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3621.6331 - mae: 3621.6331\n","Epoch 228/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3631.5535 - mae: 3631.5535\n","Epoch 229/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3630.4858 - mae: 3630.4858\n","Epoch 230/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3617.2891 - mae: 3617.2891\n","Epoch 231/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3615.4753 - mae: 3615.4753\n","Epoch 232/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3612.7854 - mae: 3612.7854\n","Epoch 233/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3611.3074 - mae: 3611.3074\n","Epoch 234/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3624.4998 - mae: 3624.4998\n","Epoch 235/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3625.5149 - mae: 3625.5149\n","Epoch 236/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3616.0054 - mae: 3616.0054\n","Epoch 237/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3618.5925 - mae: 3618.5925\n","Epoch 238/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3597.6370 - mae: 3597.6370\n","Epoch 239/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3606.0518 - mae: 3606.0518\n","Epoch 240/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3604.4333 - mae: 3604.4333\n","Epoch 241/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3598.9114 - mae: 3598.9114\n","Epoch 242/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3596.6577 - mae: 3596.6577\n","Epoch 243/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3592.3105 - mae: 3592.3105\n","Epoch 244/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3606.5950 - mae: 3606.5950\n","Epoch 245/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3590.9053 - mae: 3590.9053\n","Epoch 246/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3585.8945 - mae: 3585.8945\n","Epoch 247/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3585.0798 - mae: 3585.0798\n","Epoch 248/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3599.2827 - mae: 3599.2827\n","Epoch 249/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3585.4707 - mae: 3585.4707\n","Epoch 250/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3579.7139 - mae: 3579.7139\n","Epoch 251/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3577.3928 - mae: 3577.3928\n","Epoch 252/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3580.5137 - mae: 3580.5137\n","Epoch 253/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3575.3125 - mae: 3575.3125\n","Epoch 254/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3572.0474 - mae: 3572.0474\n","Epoch 255/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3566.4463 - mae: 3566.4463\n","Epoch 256/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3572.2180 - mae: 3572.2180\n","Epoch 257/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3567.5842 - mae: 3567.5842\n","Epoch 258/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3586.5842 - mae: 3586.5842\n","Epoch 259/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3562.6982 - mae: 3562.6982\n","Epoch 260/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3565.1277 - mae: 3565.1277\n","Epoch 261/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3565.4133 - mae: 3565.4133\n","Epoch 262/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3560.0479 - mae: 3560.0479\n","Epoch 263/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3560.9795 - mae: 3560.9795\n","Epoch 264/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3559.4487 - mae: 3559.4487\n","Epoch 265/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3558.2920 - mae: 3558.2920\n","Epoch 266/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3558.9316 - mae: 3558.9316\n","Epoch 267/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3558.0767 - mae: 3558.0767\n","Epoch 268/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3550.7830 - mae: 3550.7830\n","Epoch 269/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3557.6301 - mae: 3557.6301\n","Epoch 270/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3545.9753 - mae: 3545.9753\n","Epoch 271/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3548.9944 - mae: 3548.9944\n","Epoch 272/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3542.8513 - mae: 3542.8513\n","Epoch 273/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3543.8042 - mae: 3543.8042\n","Epoch 274/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3541.6685 - mae: 3541.6685\n","Epoch 275/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3538.5771 - mae: 3538.5771\n","Epoch 276/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3542.1555 - mae: 3542.1555\n","Epoch 277/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3539.0789 - mae: 3539.0789\n","Epoch 278/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3539.3350 - mae: 3539.3350\n","Epoch 279/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3539.6960 - mae: 3539.6960\n","Epoch 280/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3532.3438 - mae: 3532.3438\n","Epoch 281/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3539.1404 - mae: 3539.1404\n","Epoch 282/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3530.5645 - mae: 3530.5645\n","Epoch 283/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3536.4604 - mae: 3536.4602\n","Epoch 284/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3529.6218 - mae: 3529.6218\n","Epoch 285/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3528.3076 - mae: 3528.3076\n","Epoch 286/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3523.9958 - mae: 3523.9958\n","Epoch 287/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3522.2058 - mae: 3522.2058\n","Epoch 288/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3521.8447 - mae: 3521.8447\n","Epoch 289/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3523.8564 - mae: 3523.8564\n","Epoch 290/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3526.6807 - mae: 3526.6807\n","Epoch 291/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3529.3877 - mae: 3529.3877\n","Epoch 292/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3529.3960 - mae: 3529.3960\n","Epoch 293/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3518.6306 - mae: 3518.6306\n","Epoch 294/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3525.9136 - mae: 3525.9136\n","Epoch 295/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3532.4136 - mae: 3532.4136\n","Epoch 296/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3516.2791 - mae: 3516.2791\n","Epoch 297/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3507.4697 - mae: 3507.4697\n","Epoch 298/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3515.4614 - mae: 3515.4614\n","Epoch 299/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3523.5278 - mae: 3523.5278\n","Epoch 300/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3510.8652 - mae: 3510.8652\n","Epoch 301/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3508.2097 - mae: 3508.2097\n","Epoch 302/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3532.1104 - mae: 3532.1104\n","Epoch 303/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3531.7095 - mae: 3531.7095\n","Epoch 304/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3507.3794 - mae: 3507.3794\n","Epoch 305/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.2781 - mae: 3501.2781\n","Epoch 306/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.3896 - mae: 3501.3896\n","Epoch 307/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3499.6365 - mae: 3499.6365\n","Epoch 308/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.4143 - mae: 3501.4143\n","Epoch 309/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3495.4399 - mae: 3495.4399\n","Epoch 310/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3499.2012 - mae: 3499.2012\n","Epoch 311/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3502.1523 - mae: 3502.1523\n","Epoch 312/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3495.0142 - mae: 3495.0142\n","Epoch 313/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3488.7329 - mae: 3488.7329\n","Epoch 314/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3489.4199 - mae: 3489.4199\n","Epoch 315/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3495.1230 - mae: 3495.1228\n","Epoch 316/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3484.9150 - mae: 3484.9150\n","Epoch 317/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3484.3386 - mae: 3484.3386\n","Epoch 318/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3484.7136 - mae: 3484.7136\n","Epoch 319/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.3879 - mae: 3486.3879\n","Epoch 320/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3491.8506 - mae: 3491.8506\n","Epoch 321/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3494.2039 - mae: 3494.2039\n","Epoch 322/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3493.2793 - mae: 3493.2793\n","Epoch 323/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.4905 - mae: 3482.4905\n","Epoch 324/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3484.3352 - mae: 3484.3352\n","Epoch 325/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3480.7219 - mae: 3480.7219\n","Epoch 326/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.6960 - mae: 3482.6960\n","Epoch 327/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3480.4868 - mae: 3480.4868\n","Epoch 328/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3491.2876 - mae: 3491.2876\n","Epoch 329/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.6528 - mae: 3501.6528\n","Epoch 330/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.2646 - mae: 3477.2646\n","Epoch 331/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.1172 - mae: 3482.1172\n","Epoch 332/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.1191 - mae: 3482.1191\n","Epoch 333/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.0779 - mae: 3479.0779\n","Epoch 334/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3477.2524 - mae: 3477.2524\n","Epoch 335/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3476.6477 - mae: 3476.6477\n","Epoch 336/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.8936 - mae: 3481.8936\n","Epoch 337/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3482.7107 - mae: 3482.7107\n","Epoch 338/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3491.2981 - mae: 3491.2981\n","Epoch 339/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.4216 - mae: 3479.4216\n","Epoch 340/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3480.0850 - mae: 3480.0850\n","Epoch 341/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3478.7634 - mae: 3478.7634\n","Epoch 342/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3488.6875 - mae: 3488.6875\n","Epoch 343/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.2739 - mae: 3479.2739\n","Epoch 344/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3480.1575 - mae: 3480.1575\n","Epoch 345/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.7446 - mae: 3482.7446\n","Epoch 346/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3486.8452 - mae: 3486.8452\n","Epoch 347/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.1033 - mae: 3479.1033\n","Epoch 348/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3476.6116 - mae: 3476.6116\n","Epoch 349/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3483.4902 - mae: 3483.4902\n","Epoch 350/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.8535 - mae: 3481.8535\n","Epoch 351/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3483.2896 - mae: 3483.2896\n","Epoch 352/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3480.8110 - mae: 3480.8110\n","Epoch 353/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3494.8472 - mae: 3494.8472\n","Epoch 354/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3477.5439 - mae: 3477.5439\n","Epoch 355/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3475.4348 - mae: 3475.4348\n","Epoch 356/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.5986 - mae: 3486.5986\n","Epoch 357/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.2898 - mae: 3477.2898\n","Epoch 358/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3484.8850 - mae: 3484.8850\n","Epoch 359/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3504.3792 - mae: 3504.3792\n","Epoch 360/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.4917 - mae: 3480.4917\n","Epoch 361/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.9226 - mae: 3480.9226\n","Epoch 362/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3484.1067 - mae: 3484.1067\n","Epoch 363/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.5081 - mae: 3482.5081\n","Epoch 364/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3500.5762 - mae: 3500.5762\n","Epoch 365/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3484.7532 - mae: 3484.7532\n","Epoch 366/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.5898 - mae: 3479.5898\n","Epoch 367/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3474.7485 - mae: 3474.7485\n","Epoch 368/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.3806 - mae: 3481.3806\n","Epoch 369/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3481.7915 - mae: 3481.7915\n","Epoch 370/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3488.6643 - mae: 3488.6643\n","Epoch 371/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.2468 - mae: 3477.2468\n","Epoch 372/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3476.6045 - mae: 3476.6045\n","Epoch 373/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.1541 - mae: 3477.1541\n","Epoch 374/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3487.5952 - mae: 3487.5952\n","Epoch 375/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.6062 - mae: 3475.6062\n","Epoch 376/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.1824 - mae: 3475.1824\n","Epoch 377/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.0974 - mae: 3477.0974\n","Epoch 378/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.5852 - mae: 3479.5852\n","Epoch 379/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.3159 - mae: 3481.3159\n","Epoch 380/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3478.5671 - mae: 3478.5671\n","Epoch 381/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3496.9641 - mae: 3496.9641\n","Epoch 382/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.7810 - mae: 3480.7810\n","Epoch 383/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3477.3081 - mae: 3477.3081\n","Epoch 384/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3498.3311 - mae: 3498.3311\n","Epoch 385/500\n","34/34 [==============================] - 0s 2ms/step - loss: 3481.0959 - mae: 3481.0959\n","Epoch 386/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.4404 - mae: 3486.4404\n","Epoch 387/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.7053 - mae: 3480.7053\n","Epoch 388/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.3608 - mae: 3481.3608\n","Epoch 389/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.8198 - mae: 3485.8198\n","Epoch 390/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3494.9963 - mae: 3494.9963\n","Epoch 391/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3483.3811 - mae: 3483.3811\n","Epoch 392/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.6323 - mae: 3481.6323\n","Epoch 393/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3495.8982 - mae: 3495.8982\n","Epoch 394/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3476.4519 - mae: 3476.4519\n","Epoch 395/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3490.6482 - mae: 3490.6482\n","Epoch 396/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.2104 - mae: 3481.2104\n","Epoch 397/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.5520 - mae: 3479.5520\n","Epoch 398/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.7449 - mae: 3480.7449\n","Epoch 399/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.5359 - mae: 3477.5359\n","Epoch 400/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.9412 - mae: 3475.9412\n","Epoch 401/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3478.4624 - mae: 3478.4624\n","Epoch 402/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3482.0471 - mae: 3482.0471\n","Epoch 403/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3483.0251 - mae: 3483.0251\n","Epoch 404/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3482.5767 - mae: 3482.5767\n","Epoch 405/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3474.5266 - mae: 3474.5266\n","Epoch 406/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3482.6487 - mae: 3482.6487\n","Epoch 407/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3483.1174 - mae: 3483.1174\n","Epoch 408/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3480.1995 - mae: 3480.1995\n","Epoch 409/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3480.4482 - mae: 3480.4482\n","Epoch 410/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3478.0208 - mae: 3478.0208\n","Epoch 411/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3484.3523 - mae: 3484.3523\n","Epoch 412/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3478.2778 - mae: 3478.2778\n","Epoch 413/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3475.8354 - mae: 3475.8354\n","Epoch 414/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3478.5544 - mae: 3478.5544\n","Epoch 415/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3484.4646 - mae: 3484.4646\n","Epoch 416/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3477.3110 - mae: 3477.3110\n","Epoch 417/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3477.6360 - mae: 3477.6360\n","Epoch 418/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3489.1792 - mae: 3489.1792\n","Epoch 419/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3478.3906 - mae: 3478.3906\n","Epoch 420/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3485.5957 - mae: 3485.5957\n","Epoch 421/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3476.7581 - mae: 3476.7581\n","Epoch 422/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3485.2625 - mae: 3485.2625\n","Epoch 423/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3487.6257 - mae: 3487.6257\n","Epoch 424/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3503.6929 - mae: 3503.6929\n","Epoch 425/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3475.7891 - mae: 3475.7891\n","Epoch 426/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3494.6816 - mae: 3494.6816\n","Epoch 427/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3480.4824 - mae: 3480.4824\n","Epoch 428/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3476.9185 - mae: 3476.9185\n","Epoch 429/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3473.7307 - mae: 3473.7307\n","Epoch 430/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3483.5972 - mae: 3483.5972\n","Epoch 431/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3488.0356 - mae: 3488.0356\n","Epoch 432/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3475.5444 - mae: 3475.5444\n","Epoch 433/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3474.9880 - mae: 3474.9880\n","Epoch 434/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3490.3892 - mae: 3490.3892\n","Epoch 435/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3488.1812 - mae: 3488.1812\n","Epoch 436/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3481.0500 - mae: 3481.0500\n","Epoch 437/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3484.6467 - mae: 3484.6467\n","Epoch 438/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3491.0095 - mae: 3491.0095\n","Epoch 439/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3481.4292 - mae: 3481.4292\n","Epoch 440/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3489.6497 - mae: 3489.6497\n","Epoch 441/500\n","34/34 [==============================] - 0s 5ms/step - loss: 3480.3945 - mae: 3480.3945\n","Epoch 442/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3485.1606 - mae: 3485.1606\n","Epoch 443/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3478.3042 - mae: 3478.3042\n","Epoch 444/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.5571 - mae: 3479.5571\n","Epoch 445/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.4060 - mae: 3486.4060\n","Epoch 446/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3501.1160 - mae: 3501.1160\n","Epoch 447/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.9858 - mae: 3477.9858\n","Epoch 448/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.2351 - mae: 3482.2351\n","Epoch 449/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3487.4917 - mae: 3487.4917\n","Epoch 450/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.7371 - mae: 3482.7371\n","Epoch 451/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.4539 - mae: 3486.4539\n","Epoch 452/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3495.3450 - mae: 3495.3450\n","Epoch 453/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3476.8560 - mae: 3476.8560\n","Epoch 454/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.0178 - mae: 3486.0178\n","Epoch 455/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.5493 - mae: 3481.5493\n","Epoch 456/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.2434 - mae: 3481.2434\n","Epoch 457/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.8215 - mae: 3485.8215\n","Epoch 458/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.4094 - mae: 3485.4094\n","Epoch 459/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3478.8335 - mae: 3478.8335\n","Epoch 460/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.9307 - mae: 3477.9307\n","Epoch 461/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3474.6509 - mae: 3474.6509\n","Epoch 462/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.9163 - mae: 3481.9163\n","Epoch 463/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3478.7310 - mae: 3478.7310\n","Epoch 464/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.1438 - mae: 3479.1438\n","Epoch 465/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3479.0735 - mae: 3479.0735\n","Epoch 466/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3483.6565 - mae: 3483.6565\n","Epoch 467/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.9192 - mae: 3482.9192\n","Epoch 468/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.9919 - mae: 3485.9919\n","Epoch 469/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3477.6580 - mae: 3477.6580\n","Epoch 470/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.6045 - mae: 3477.6045\n","Epoch 471/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3487.9890 - mae: 3487.9890\n","Epoch 472/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.9187 - mae: 3475.9187\n","Epoch 473/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3476.6589 - mae: 3476.6589\n","Epoch 474/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.5701 - mae: 3480.5701\n","Epoch 475/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3493.0693 - mae: 3493.0693\n","Epoch 476/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3489.4360 - mae: 3489.4360\n","Epoch 477/500\n","34/34 [==============================] - 0s 4ms/step - loss: 3491.6167 - mae: 3491.6167\n","Epoch 478/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3476.4578 - mae: 3476.4578\n","Epoch 479/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.1519 - mae: 3482.1519\n","Epoch 480/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.5723 - mae: 3485.5723\n","Epoch 481/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.8477 - mae: 3475.8477\n","Epoch 482/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3483.1655 - mae: 3483.1655\n","Epoch 483/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3482.2344 - mae: 3482.2344\n","Epoch 484/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.5630 - mae: 3481.5630\n","Epoch 485/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3484.5225 - mae: 3484.5225\n","Epoch 486/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.3599 - mae: 3501.3599\n","Epoch 487/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3480.7808 - mae: 3480.7808\n","Epoch 488/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3476.7090 - mae: 3476.7090\n","Epoch 489/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3473.3455 - mae: 3473.3455\n","Epoch 490/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.0161 - mae: 3475.0161\n","Epoch 491/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3510.6509 - mae: 3510.6509\n","Epoch 492/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3473.5688 - mae: 3473.5688\n","Epoch 493/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3491.3018 - mae: 3491.3018\n","Epoch 494/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.7185 - mae: 3477.7185\n","Epoch 495/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3481.1426 - mae: 3481.1426\n","Epoch 496/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.7986 - mae: 3475.7986\n","Epoch 497/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3484.5837 - mae: 3484.5837\n","Epoch 498/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3486.7329 - mae: 3486.7329\n","Epoch 499/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3475.2766 - mae: 3475.2766\n","Epoch 500/500\n","34/34 [==============================] - 0s 3ms/step - loss: 3477.3154 - mae: 3477.3154\n"]}]},{"cell_type":"code","source":["# Evaluate our third model\n","insurance_model_4.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sXsRMYYF8sp9","executionInfo":{"status":"ok","timestamp":1663812482287,"user_tz":420,"elapsed":299,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"4a157717-be38-43b1-f4a6-81075b87a8eb"},"execution_count":133,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3170.5703 - mae: 3170.5703\n"]},{"output_type":"execute_result","data":{"text/plain":["[3170.5703125, 3170.5703125]"]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["# Plot second history (also known as a loss curve or a training curve)\n","pd.DataFrame(history2.history).plot()\n","plt.ylabel(\"loss\")\n","plt.xlabel(\"epochs\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"hhkV08h587MU","executionInfo":{"status":"ok","timestamp":1663812499423,"user_tz":420,"elapsed":490,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"3dc52750-554b-4477-f202-38a8f9d944ae"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'epochs')"]},"metadata":{},"execution_count":134},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Question: How long should you train for?\n","\n","It depends. Really... it depends on the problem you're working on. However, many people have asked this question before... so Tensorflow has a solution! It's called the [EarlyStoppingCallback](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/EarlyStopping), which is a TensorFlow component you can add to your model to stop training once it stops improving a certain metric"],"metadata":{"id":"la5jV2Tg9IMw"}},{"cell_type":"markdown","source":["## Preprocessing data (normalization and standardization)\n","\n","In terms of scaling values, neural networks tend to prefer normalization.\n","\n","If you're not sure on which to use, try both and see which performs better."],"metadata":{"id":"vwALDkb893Ty"}},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"AZwttuZJ8_TJ","executionInfo":{"status":"ok","timestamp":1663814090752,"user_tz":420,"elapsed":220,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"391ca1d9-16d3-4665-9e02-318757cee031"},"execution_count":135,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n","0      19  27.900         0           1         0          0           1   \n","1      18  33.770         1           0         1          1           0   \n","2      28  33.000         3           0         1          1           0   \n","3      33  22.705         0           0         1          1           0   \n","4      32  28.880         0           0         1          1           0   \n","...   ...     ...       ...         ...       ...        ...         ...   \n","1333   50  30.970         3           0         1          1           0   \n","1334   18  31.920         0           1         0          1           0   \n","1335   18  36.850         0           1         0          1           0   \n","1336   21  25.800         0           1         0          1           0   \n","1337   61  29.070         0           1         0          0           1   \n","\n","      region_northeast  region_northwest  region_southeast  region_southwest  \n","0                    0                 0                 0                 1  \n","1                    0                 0                 1                 0  \n","2                    0                 0                 1                 0  \n","3                    0                 1                 0                 0  \n","4                    0                 1                 0                 0  \n","...                ...               ...               ...               ...  \n","1333                 0                 1                 0                 0  \n","1334                 1                 0                 0                 0  \n","1335                 0                 0                 1                 0  \n","1336                 0                 0                 0                 1  \n","1337                 0                 1                 0                 0  \n","\n","[1338 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-f964a43f-d40f-4e90-b30a-20c43572d8bd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f964a43f-d40f-4e90-b30a-20c43572d8bd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f964a43f-d40f-4e90-b30a-20c43572d8bd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f964a43f-d40f-4e90-b30a-20c43572d8bd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["X['age'].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"BV6tDku1DD5P","executionInfo":{"status":"ok","timestamp":1663814131801,"user_tz":420,"elapsed":367,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"2981a6bc-789c-4639-91fe-f23f384d95e5"},"execution_count":137,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fcc7d70b910>"]},"metadata":{},"execution_count":137},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["X['bmi'].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"CUH4aHdHDN4w","executionInfo":{"status":"ok","timestamp":1663814144558,"user_tz":420,"elapsed":371,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"2caf3344-4af6-4a31-fb6b-ab72ba88ed47"},"execution_count":138,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fcc7d67ef50>"]},"metadata":{},"execution_count":138},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["X['children'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kpHBUGr0DQ_w","executionInfo":{"status":"ok","timestamp":1663814172885,"user_tz":420,"elapsed":134,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"6a1af460-21d6-4484-d752-e58993156af6"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    574\n","1    324\n","2    240\n","3    157\n","4     25\n","5     18\n","Name: children, dtype: int64"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","\n","# Read in the insurance dataframe\n","insurance = pd.read_csv(\"https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv\")\n","insurance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"lnxg7VBsDX-J","executionInfo":{"status":"ok","timestamp":1663814487999,"user_tz":420,"elapsed":413,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"08a548d8-33df-4889-d13e-21710167b643"},"execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age     sex     bmi  children smoker     region      charges\n","0      19  female  27.900         0    yes  southwest  16884.92400\n","1      18    male  33.770         1     no  southeast   1725.55230\n","2      28    male  33.000         3     no  southeast   4449.46200\n","3      33    male  22.705         0     no  northwest  21984.47061\n","4      32    male  28.880         0     no  northwest   3866.85520\n","...   ...     ...     ...       ...    ...        ...          ...\n","1333   50    male  30.970         3     no  northwest  10600.54830\n","1334   18  female  31.920         0     no  northeast   2205.98080\n","1335   18  female  36.850         0     no  southeast   1629.83350\n","1336   21  female  25.800         0     no  southwest   2007.94500\n","1337   61  female  29.070         0    yes  northwest  29141.36030\n","\n","[1338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-664a870f-b6fc-4b7d-ac78-9784d9cd67e0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>50</td>\n","      <td>male</td>\n","      <td>30.970</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>10600.54830</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>31.920</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northeast</td>\n","      <td>2205.98080</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>18</td>\n","      <td>female</td>\n","      <td>36.850</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1629.83350</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>21</td>\n","      <td>female</td>\n","      <td>25.800</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>southwest</td>\n","      <td>2007.94500</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>61</td>\n","      <td>female</td>\n","      <td>29.070</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>northwest</td>\n","      <td>29141.36030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-664a870f-b6fc-4b7d-ac78-9784d9cd67e0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-664a870f-b6fc-4b7d-ac78-9784d9cd67e0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-664a870f-b6fc-4b7d-ac78-9784d9cd67e0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":140}]},{"cell_type":"markdown","source":["To prepare our data, we can borrow a few classes from Scikit-Learn"],"metadata":{"id":"G8l_ojzwE3yy"}},{"cell_type":"code","source":["from sklearn.compose import make_column_transformer\n","from sklearn.preprocessing import MinMaxScaler, OneHotEncoder\n","\n","# Create a column transformer\n","ct = make_column_transformer(\n","    (MinMaxScaler(), [\"age\", \"bmi\", \"children\"]), # turn all values in these columns to be between 0 and 1\n","    (OneHotEncoder(handle_unknown=\"ignore\"), [\"sex\", \"smoker\", \"region\"])\n",")\n","\n","# Create X & y \n","X = insurance.drop(\"charges\", axis=1)\n","y = insurance[\"charges\"]\n","\n","# Build our train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, random_state=42)\n","\n","# Fit the column transformer to our training data\n","ct.fit(X_train)\n","\n","# Transform training and test data with normalization (MinMaxScalar) and OneHotEncoder\n","X_train_normal = ct.transform(X_train)\n","X_test_normal = ct.transform(X_test)\n","\n","# cty = make_column_transformer(\n","#     (MinMaxScaler(), \"charges\") # turn all values in these columns to be between 0 and 1\n","# )\n","\n","# cty.fit(y_train)\n","# y_train_normal = cty.transform(y_train)\n","# y_test_normal = cty.transform(y_test)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":381},"id":"vM5s1jktEk1P","executionInfo":{"status":"error","timestamp":1663815530186,"user_tz":420,"elapsed":128,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"3b4955fc-c997-4f1e-c006-3d409f77803c"},"execution_count":159,"outputs":[{"output_type":"error","ename":"IndexError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-159-c69f6031c1d9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     26\u001b[0m )\n\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0mcty\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0my_train_normal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcty\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0my_test_normal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcty\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/compose/_column_transformer.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y)\u001b[0m\n\u001b[1;32m    640\u001b[0m         \u001b[0;31m# we use fit_transform to make sure to set sparse_output_ (for which we\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    641\u001b[0m         \u001b[0;31m# need the transformed data) to have consistent output type in predict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 642\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    643\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    644\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/compose/_column_transformer.py\u001b[0m in \u001b[0;36mfit_transform\u001b[0;34m(self, X, y)\u001b[0m\n\u001b[1;32m    670\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_n_features\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    671\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_transformers\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 672\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_column_callables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    673\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_remainder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    674\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/compose/_column_transformer.py\u001b[0m in \u001b[0;36m_validate_column_callables\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    350\u001b[0m                 \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m             \u001b[0mall_columns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 352\u001b[0;31m             \u001b[0mtransformer_to_input_indices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_get_column_indices\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    353\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_columns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mall_columns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/__init__.py\u001b[0m in \u001b[0;36m_get_column_indices\u001b[0;34m(X, key)\u001b[0m\n\u001b[1;32m    387\u001b[0m     \u001b[0;34m:\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;31m`\u001b[0m\u001b[0m_safe_indexing_column\u001b[0m\u001b[0;31m`\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    388\u001b[0m     \"\"\"\n\u001b[0;32m--> 389\u001b[0;31m     \u001b[0mn_columns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    390\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    391\u001b[0m     \u001b[0mkey_dtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_determine_key_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: tuple index out of range"]}]},{"cell_type":"code","source":["X_train_normal[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MFDCetBXG6v-","executionInfo":{"status":"ok","timestamp":1663815153003,"user_tz":420,"elapsed":147,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"82d9f78f-6f20-49f6-d31e-371714a6e324"},"execution_count":151,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.60869565, 0.10734463, 0.4       , 1.        , 0.        ,\n","       1.        , 0.        , 0.        , 1.        , 0.        ,\n","       0.        ])"]},"metadata":{},"execution_count":151}]},{"cell_type":"code","source":["X_train_normal"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nN_qFUSAHHQW","executionInfo":{"status":"ok","timestamp":1663815187984,"user_tz":420,"elapsed":149,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"aa233b27-d90e-41dc-bf19-beef6ec69a52"},"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.60869565, 0.10734463, 0.4       , ..., 1.        , 0.        ,\n","        0.        ],\n","       [0.63043478, 0.22491256, 0.        , ..., 0.        , 0.        ,\n","        0.        ],\n","       [0.73913043, 0.23944041, 0.        , ..., 0.        , 1.        ,\n","        0.        ],\n","       ...,\n","       [0.86956522, 0.24791499, 0.        , ..., 0.        , 0.        ,\n","        0.        ],\n","       [0.41304348, 0.85122411, 0.4       , ..., 0.        , 0.        ,\n","        1.        ],\n","       [0.80434783, 0.37503363, 0.        , ..., 0.        , 0.        ,\n","        1.        ]])"]},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["X_train.shape, X_train_normal.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fv4vSJXpHPzQ","executionInfo":{"status":"ok","timestamp":1663815219185,"user_tz":420,"elapsed":204,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"d3aa7251-89ef-4324-fbe5-af2ed1430e80"},"execution_count":155,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1070, 6), (1070, 11))"]},"metadata":{},"execution_count":155}]},{"cell_type":"markdown","source":["Beautiful! Our data has been normalized and one hot encoded. Now let's build a neural network on it and see how it goes!"],"metadata":{"id":"cl-YrzaQHfbH"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model\n","insurance_model_normal = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100), # extra leyer with extra 100 hidden units\n","    tf.keras.layers.Dense(10),\n","    tf.keras.layers.Dense(1),\n","])\n","\n","# 2. Compile the model\n","insurance_model_normal.compile(\n","    loss=tf.keras.losses.mae,\n","    optimizer=tf.keras.optimizers.Adam(),\n","    metrics=[\"mae\"]\n",")\n","\n","# 3. Fit the model\n","history_normal = insurance_model_normal.fit(X_train_normal, y_train, epochs=200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjiLsi_IHXZl","executionInfo":{"status":"ok","timestamp":1663815643874,"user_tz":420,"elapsed":19559,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"afaaa2b7-d1da-4f72-928e-fdd8a6310da9"},"execution_count":160,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","34/34 [==============================] - 1s 2ms/step - loss: 13342.6494 - mae: 13342.6494\n","Epoch 2/200\n","34/34 [==============================] - 0s 2ms/step - loss: 13333.4785 - mae: 13333.4785\n","Epoch 3/200\n","34/34 [==============================] - 0s 3ms/step - loss: 13312.0234 - mae: 13312.0234\n","Epoch 4/200\n","34/34 [==============================] - 0s 2ms/step - loss: 13267.7930 - mae: 13267.7930\n","Epoch 5/200\n","34/34 [==============================] - 0s 2ms/step - loss: 13189.5830 - mae: 13189.5830\n","Epoch 6/200\n","34/34 [==============================] - 0s 3ms/step - loss: 13066.4502 - mae: 13066.4502\n","Epoch 7/200\n","34/34 [==============================] - 0s 3ms/step - loss: 12888.1953 - mae: 12888.1953\n","Epoch 8/200\n","34/34 [==============================] - 0s 2ms/step - loss: 12644.6523 - mae: 12644.6523\n","Epoch 9/200\n","34/34 [==============================] - 0s 2ms/step - loss: 12325.5469 - mae: 12325.5469\n","Epoch 10/200\n","34/34 [==============================] - 0s 3ms/step - loss: 11925.9658 - mae: 11925.9658\n","Epoch 11/200\n","34/34 [==============================] - 0s 2ms/step - loss: 11454.3350 - mae: 11454.3350\n","Epoch 12/200\n","34/34 [==============================] - 0s 2ms/step - loss: 10949.8076 - mae: 10949.8076\n","Epoch 13/200\n","34/34 [==============================] - 0s 2ms/step - loss: 10448.9404 - mae: 10448.9404\n","Epoch 14/200\n","34/34 [==============================] - 0s 2ms/step - loss: 9951.6250 - mae: 9951.6250\n","Epoch 15/200\n","34/34 [==============================] - 0s 3ms/step - loss: 9482.7422 - mae: 9482.7422\n","Epoch 16/200\n","34/34 [==============================] - 0s 2ms/step - loss: 9066.7461 - mae: 9066.7461\n","Epoch 17/200\n","34/34 [==============================] - 0s 2ms/step - loss: 8721.9854 - mae: 8721.9854\n","Epoch 18/200\n","34/34 [==============================] - 0s 2ms/step - loss: 8441.2002 - mae: 8441.2002\n","Epoch 19/200\n","34/34 [==============================] - 0s 4ms/step - loss: 8227.5117 - mae: 8227.5117\n","Epoch 20/200\n","34/34 [==============================] - 0s 2ms/step - loss: 8081.9775 - mae: 8081.9775\n","Epoch 21/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7973.8945 - mae: 7973.8945\n","Epoch 22/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7899.1597 - mae: 7899.1597\n","Epoch 23/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7840.3906 - mae: 7840.3906\n","Epoch 24/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7787.9619 - mae: 7787.9619\n","Epoch 25/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7749.2622 - mae: 7749.2622\n","Epoch 26/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7697.9595 - mae: 7697.9595\n","Epoch 27/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7656.0273 - mae: 7656.0273\n","Epoch 28/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7613.4771 - mae: 7613.4771\n","Epoch 29/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7570.9482 - mae: 7570.9482\n","Epoch 30/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7527.4175 - mae: 7527.4175\n","Epoch 31/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7483.5947 - mae: 7483.5947\n","Epoch 32/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7439.4424 - mae: 7439.4424\n","Epoch 33/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7395.0552 - mae: 7395.0552\n","Epoch 34/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7346.8120 - mae: 7346.8120\n","Epoch 35/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7300.0488 - mae: 7300.0488\n","Epoch 36/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7249.8452 - mae: 7249.8452\n","Epoch 37/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7199.5308 - mae: 7199.5308\n","Epoch 38/200\n","34/34 [==============================] - 0s 3ms/step - loss: 7148.4814 - mae: 7148.4814\n","Epoch 39/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7093.6660 - mae: 7093.6660\n","Epoch 40/200\n","34/34 [==============================] - 0s 2ms/step - loss: 7038.1797 - mae: 7038.1797\n","Epoch 41/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6981.7393 - mae: 6981.7393\n","Epoch 42/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6922.7847 - mae: 6922.7847\n","Epoch 43/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6860.1724 - mae: 6860.1724\n","Epoch 44/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6793.7979 - mae: 6793.7979\n","Epoch 45/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6726.6201 - mae: 6726.6201\n","Epoch 46/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6657.4683 - mae: 6657.4683\n","Epoch 47/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6586.3086 - mae: 6586.3086\n","Epoch 48/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6507.5063 - mae: 6507.5063\n","Epoch 49/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6428.6021 - mae: 6428.6021\n","Epoch 50/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6342.7100 - mae: 6342.7100\n","Epoch 51/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6258.0718 - mae: 6258.0718\n","Epoch 52/200\n","34/34 [==============================] - 0s 3ms/step - loss: 6164.7046 - mae: 6164.7046\n","Epoch 53/200\n","34/34 [==============================] - 0s 2ms/step - loss: 6068.6748 - mae: 6068.6748\n","Epoch 54/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5970.0981 - mae: 5970.0981\n","Epoch 55/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5862.5625 - mae: 5862.5625\n","Epoch 56/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5753.9526 - mae: 5753.9526\n","Epoch 57/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5638.0947 - mae: 5638.0947\n","Epoch 58/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5519.8687 - mae: 5519.8687\n","Epoch 59/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5401.3198 - mae: 5401.3198\n","Epoch 60/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5277.3501 - mae: 5277.3501\n","Epoch 61/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5149.7637 - mae: 5149.7637\n","Epoch 62/200\n","34/34 [==============================] - 0s 2ms/step - loss: 5019.3535 - mae: 5019.3535\n","Epoch 63/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4889.6865 - mae: 4889.6865\n","Epoch 64/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4756.8560 - mae: 4756.8560\n","Epoch 65/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4629.4370 - mae: 4629.4370\n","Epoch 66/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4503.5991 - mae: 4503.5991\n","Epoch 67/200\n","34/34 [==============================] - 0s 3ms/step - loss: 4392.9922 - mae: 4392.9922\n","Epoch 68/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4284.3862 - mae: 4284.3862\n","Epoch 69/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4182.6182 - mae: 4182.6182\n","Epoch 70/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4089.5725 - mae: 4089.5725\n","Epoch 71/200\n","34/34 [==============================] - 0s 2ms/step - loss: 4003.3901 - mae: 4003.3901\n","Epoch 72/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3929.0093 - mae: 3929.0093\n","Epoch 73/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3866.3110 - mae: 3866.3110\n","Epoch 74/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3813.7144 - mae: 3813.7144\n","Epoch 75/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3773.0317 - mae: 3773.0317\n","Epoch 76/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3744.1995 - mae: 3744.1995\n","Epoch 77/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3719.6870 - mae: 3719.6870\n","Epoch 78/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3702.9109 - mae: 3702.9109\n","Epoch 79/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3691.8792 - mae: 3691.8792\n","Epoch 80/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3682.8350 - mae: 3682.8350\n","Epoch 81/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3676.9763 - mae: 3676.9763\n","Epoch 82/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3673.9495 - mae: 3673.9495\n","Epoch 83/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3667.8452 - mae: 3667.8452\n","Epoch 84/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3664.5757 - mae: 3664.5757\n","Epoch 85/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3661.8562 - mae: 3661.8562\n","Epoch 86/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3660.3049 - mae: 3660.3049\n","Epoch 87/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3657.5134 - mae: 3657.5134\n","Epoch 88/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3655.2200 - mae: 3655.2200\n","Epoch 89/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3653.8831 - mae: 3653.8831\n","Epoch 90/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3652.0195 - mae: 3652.0195\n","Epoch 91/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3648.9990 - mae: 3648.9990\n","Epoch 92/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3648.4463 - mae: 3648.4463\n","Epoch 93/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3646.2297 - mae: 3646.2297\n","Epoch 94/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3644.4377 - mae: 3644.4377\n","Epoch 95/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3645.8772 - mae: 3645.8772\n","Epoch 96/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3642.2573 - mae: 3642.2573\n","Epoch 97/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3640.1187 - mae: 3640.1187\n","Epoch 98/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3638.0647 - mae: 3638.0647\n","Epoch 99/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3637.2053 - mae: 3637.2053\n","Epoch 100/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3636.1707 - mae: 3636.1707\n","Epoch 101/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3633.0803 - mae: 3633.0803\n","Epoch 102/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3630.6155 - mae: 3630.6155\n","Epoch 103/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3629.4304 - mae: 3629.4304\n","Epoch 104/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3627.0293 - mae: 3627.0293\n","Epoch 105/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3625.3789 - mae: 3625.3789\n","Epoch 106/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3624.1892 - mae: 3624.1892\n","Epoch 107/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3623.4670 - mae: 3623.4670\n","Epoch 108/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3621.1238 - mae: 3621.1238\n","Epoch 109/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3621.1895 - mae: 3621.1895\n","Epoch 110/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3618.2805 - mae: 3618.2805\n","Epoch 111/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3615.2793 - mae: 3615.2793\n","Epoch 112/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3613.2454 - mae: 3613.2454\n","Epoch 113/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3611.9092 - mae: 3611.9092\n","Epoch 114/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3610.8164 - mae: 3610.8164\n","Epoch 115/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3609.1033 - mae: 3609.1033\n","Epoch 116/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3607.6523 - mae: 3607.6523\n","Epoch 117/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3604.7559 - mae: 3604.7559\n","Epoch 118/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3600.8135 - mae: 3600.8135\n","Epoch 119/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3602.6384 - mae: 3602.6384\n","Epoch 120/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3600.3203 - mae: 3600.3203\n","Epoch 121/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3595.2522 - mae: 3595.2522\n","Epoch 122/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3594.6335 - mae: 3594.6335\n","Epoch 123/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3592.6138 - mae: 3592.6138\n","Epoch 124/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3590.3994 - mae: 3590.3994\n","Epoch 125/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3588.4041 - mae: 3588.4041\n","Epoch 126/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3587.5061 - mae: 3587.5061\n","Epoch 127/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3588.0417 - mae: 3588.0417\n","Epoch 128/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3584.1003 - mae: 3584.1003\n","Epoch 129/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3582.7317 - mae: 3582.7317\n","Epoch 130/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3579.1135 - mae: 3579.1135\n","Epoch 131/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3577.7141 - mae: 3577.7141\n","Epoch 132/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3574.9951 - mae: 3574.9951\n","Epoch 133/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3573.2952 - mae: 3573.2952\n","Epoch 134/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3571.3867 - mae: 3571.3867\n","Epoch 135/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3569.3606 - mae: 3569.3606\n","Epoch 136/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3568.0547 - mae: 3568.0547\n","Epoch 137/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3566.1060 - mae: 3566.1060\n","Epoch 138/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3563.9617 - mae: 3563.9617\n","Epoch 139/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3563.3350 - mae: 3563.3350\n","Epoch 140/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3561.2300 - mae: 3561.2300\n","Epoch 141/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3561.1250 - mae: 3561.1250\n","Epoch 142/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3558.0391 - mae: 3558.0391\n","Epoch 143/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3558.0339 - mae: 3558.0339\n","Epoch 144/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3555.1953 - mae: 3555.1953\n","Epoch 145/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3553.2444 - mae: 3553.2444\n","Epoch 146/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3553.4751 - mae: 3553.4751\n","Epoch 147/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3551.0723 - mae: 3551.0723\n","Epoch 148/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3549.7551 - mae: 3549.7551\n","Epoch 149/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3547.0066 - mae: 3547.0066\n","Epoch 150/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3546.9910 - mae: 3546.9910\n","Epoch 151/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3545.1938 - mae: 3545.1938\n","Epoch 152/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3543.3823 - mae: 3543.3823\n","Epoch 153/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3541.9121 - mae: 3541.9121\n","Epoch 154/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3543.1577 - mae: 3543.1577\n","Epoch 155/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3540.6169 - mae: 3540.6169\n","Epoch 156/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3538.9236 - mae: 3538.9236\n","Epoch 157/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3537.4109 - mae: 3537.4109\n","Epoch 158/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3534.4917 - mae: 3534.4917\n","Epoch 159/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3532.9485 - mae: 3532.9485\n","Epoch 160/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3532.6985 - mae: 3532.6985\n","Epoch 161/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3529.6243 - mae: 3529.6243\n","Epoch 162/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3529.0967 - mae: 3529.0967\n","Epoch 163/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3527.5430 - mae: 3527.5430\n","Epoch 164/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3526.2842 - mae: 3526.2842\n","Epoch 165/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3524.1592 - mae: 3524.1592\n","Epoch 166/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3522.7070 - mae: 3522.7070\n","Epoch 167/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3521.8069 - mae: 3521.8069\n","Epoch 168/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3520.5659 - mae: 3520.5659\n","Epoch 169/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3519.4631 - mae: 3519.4631\n","Epoch 170/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3518.0564 - mae: 3518.0564\n","Epoch 171/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3517.6172 - mae: 3517.6172\n","Epoch 172/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3516.0525 - mae: 3516.0525\n","Epoch 173/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3514.9307 - mae: 3514.9307\n","Epoch 174/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3513.6685 - mae: 3513.6685\n","Epoch 175/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3512.3582 - mae: 3512.3582\n","Epoch 176/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3512.1816 - mae: 3512.1816\n","Epoch 177/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3512.5046 - mae: 3512.5046\n","Epoch 178/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3510.2725 - mae: 3510.2725\n","Epoch 179/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3512.1841 - mae: 3512.1841\n","Epoch 180/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3507.1208 - mae: 3507.1208\n","Epoch 181/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3505.0276 - mae: 3505.0276\n","Epoch 182/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3504.4312 - mae: 3504.4312\n","Epoch 183/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3502.5481 - mae: 3502.5481\n","Epoch 184/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.8337 - mae: 3501.8337\n","Epoch 185/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3501.4788 - mae: 3501.4788\n","Epoch 186/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3498.9014 - mae: 3498.9014\n","Epoch 187/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3499.2842 - mae: 3499.2842\n","Epoch 188/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3496.6895 - mae: 3496.6895\n","Epoch 189/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3495.1074 - mae: 3495.1074\n","Epoch 190/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3496.6013 - mae: 3496.6013\n","Epoch 191/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3502.1326 - mae: 3502.1326\n","Epoch 192/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3491.8506 - mae: 3491.8506\n","Epoch 193/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3491.6602 - mae: 3491.6602\n","Epoch 194/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3488.8262 - mae: 3488.8262\n","Epoch 195/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3488.7261 - mae: 3488.7261\n","Epoch 196/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3489.5095 - mae: 3489.5095\n","Epoch 197/200\n","34/34 [==============================] - 0s 3ms/step - loss: 3485.7686 - mae: 3485.7686\n","Epoch 198/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3484.7119 - mae: 3484.7119\n","Epoch 199/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3483.4468 - mae: 3483.4468\n","Epoch 200/200\n","34/34 [==============================] - 0s 2ms/step - loss: 3484.3950 - mae: 3484.3950\n"]}]},{"cell_type":"code","source":["# Evaluate our insurance model trained on normalized data\n","insurance_model_normal.evaluate(X_test_normal, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DPTKFE0HI6XJ","executionInfo":{"status":"ok","timestamp":1663815669217,"user_tz":420,"elapsed":352,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"b63145d8-4c56-49e0-e451-34fcbd82d166"},"execution_count":161,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 3171.5771 - mae: 3171.5771\n"]},{"output_type":"execute_result","data":{"text/plain":["[3171.5771484375, 3171.5771484375]"]},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["X['age'].plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"X3JrVW5_JFPJ","executionInfo":{"status":"ok","timestamp":1663815708973,"user_tz":420,"elapsed":316,"user":{"displayName":"A SAL","userId":"12890107829430246221"}},"outputId":"5727868c-68f4-431f-82e7-9335a173ab89"},"execution_count":162,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fcc7d384510>"]},"metadata":{},"execution_count":162},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# All insurance model results\n","# Model 1:\n","# 9/9 [==============================] - 0s 2ms/step - loss: 7023.3291 - mae: 7023.3291\n","# [7023.3291015625, 7023.3291015625]\n","#\n","# Model 2:\n","# 9/9 [==============================] - 0s 2ms/step - loss: 3494.7285 - mae: 3494.7285\n","# [3494.728515625, 3494.728515625]\n","#\n","# Model 3:\n","# 9/9 [==============================] - 0s 2ms/step - loss: 3491.2961 - mae: 3491.2961\n","# [3491.296142578125, 3491.296142578125]\n","#\n","# Model 4:\n","# 9/9 [==============================] - 0s 2ms/step - loss: 3170.5703 - mae: 3170.5703\n","# [3170.5703125, 3170.5703125]\n","#\n","# Model Normal:\n","#\n","# 9/9 [==============================] - 0s 2ms/step - loss: 3171.5771 - mae: 3171.5771\n","# [3171.5771484375, 3171.5771484375]"],"metadata":{"id":"ayXRBkVWJO85"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":[],"provenance":[],"toc_visible":true,"mount_file_id":"1r4K6c9j_ScUN3g-lk_dwNKAALYZgRwgr","authorship_tag":"ABX9TyNuLlBNKJGfujDr6nmApK2s"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}